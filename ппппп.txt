Лабораторна робота №3
Тема: Багатопотоковість у C#.
Мета роботи: навчитися працювати з потоками та
процесами у мові C#.
Виділений час: 18 годин (6 годин практичних робіт та 12
годин самостійної роботи).
Завдання:
A. Розробити дві програми:
1) шифрування файлів;
2) менеджер процесів.
Програмний код має бути написаний максимально універсально без
прив’язки у класах, що реалізують основний функціонал до інтерфейсу.
Передбачається, що дані класи потрібно буде використовувати в наступних
лабораторних роботах.
Вимоги до програми шифрування файлів
1. Графічний інтерфейс користувача з можливістю вводу ключа для
шифрування та діалогу вибору довільного файлу, який буде шифруватись
або розшифровуватись.
2. Здатність працювати з файлами довільного розміру та формату.
3. В процесі шифрування, повинен відображатись індикатор прогресу (0-100%)
та час, який пройшов від запуску шифрування.
4. По завершенні шифрування повинне бути відображене вікно з інформацією
про розмір зашифрованого файла, його назву та час, затрачений на
шифрування.
5. Необхідно запобігти «підвисанню» вікна при здійсненні операції шифрування
(шифрування здійснюватись в окремому обчислювальному потоці за
допомогою класу BackgroundWorker) .
6. Коректна обробка виключень, що можуть виникати під час роботи.
7. Для успішного виконання роботи необхідно ознайомитися з наступними
темами: асинхронні операції (клас BackgroundWorker), класи File, FileStream,
Timer, DateTime, OpenFileDialog, SaveFileDialog, обробка виключень.
Вимоги до менеджера процесів
1. Можливість запуску програм: Калькулятор, Microsoft Word та ще трьох на
ваш вибір.
2. Перегляд список запущених процесів з інформацією про обсяг оперативної
пам'яті, виділений під процес, часу, коли був запущений процес, пріоритет
процесу, кількість потоків, які запущені процесом. Відобразити у вигляді
таблиці.
3. Можливість зупинки вибраного процесу.
4. Можливість зміни пріоритету вибраного процесу.
B. Запушити виконану роботу у репозиторій на git.ztu.edu.ua або GitLab з назвою
DotNetLab3 та надати доступ до репозиторію викладачеві, який проводить
практичні заняття:
 Власенко Олег Васильович (wellwisher.vls@gmail.com) Савчук Іван Олександрович (kipz_sio@ztu.edu.ua) Чижмотря Олексій Володимирович (4ov.ztu@gmail.com)Лабораторна робота №3
Тема: Багатопотоковість у C#.
Мета роботи: навчитися працювати з потоками та
процесами у мові C#.
Виділений час: 18 годин (6 годин практичних робіт та 12
годин самостійної роботи).
Завдання:
A. Розробити дві програми:
1) шифрування файлів;
2) менеджер процесів.
Програмний код має бути написаний максимально універсально без
прив’язки у класах, що реалізують основний функціонал до інтерфейсу.
Передбачається, що дані класи потрібно буде використовувати в наступних
лабораторних роботах.
Вимоги до програми шифрування файлів
1. Графічний інтерфейс користувача з можливістю вводу ключа для
шифрування та діалогу вибору довільного файлу, який буде шифруватись
або розшифровуватись.
2. Здатність працювати з файлами довільного розміру та формату.
3. В процесі шифрування, повинен відображатись індикатор прогресу (0-100%)
та час, який пройшов від запуску шифрування.
4. По завершенні шифрування повинне бути відображене вікно з інформацією
про розмір зашифрованого файла, його назву та час, затрачений на
шифрування.
5. Необхідно запобігти «підвисанню» вікна при здійсненні операції шифрування
(шифрування здійснюватись в окремому обчислювальному потоці за
допомогою класу BackgroundWorker) .
6. Коректна обробка виключень, що можуть виникати під час роботи.
7. Для успішного виконання роботи необхідно ознайомитися з наступними
темами: асинхронні операції (клас BackgroundWorker), класи File, FileStream,
Timer, DateTime, OpenFileDialog, SaveFileDialog, обробка виключень.
Вимоги до менеджера процесів
1. Можливість запуску програм: Калькулятор, Microsoft Word та ще трьох на
ваш вибір.
2. Перегляд список запущених процесів з інформацією про обсяг оперативної
пам'яті, виділений під процес, часу, коли був запущений процес, пріоритет
процесу, кількість потоків, які запущені процесом. Відобразити у вигляді
таблиці.
3. Можливість зупинки вибраного процесу.
4. Можливість зміни пріоритету вибраного процесу.
B. Запушити виконану роботу у репозиторій на git.ztu.edu.ua або GitLab з назвою
DotNetLab3 та надати доступ до репозиторію викладачеві, який проводить
практичні заняття:
 Власенко Олег Васильович (wellwisher.vls@gmail.com) Савчук Іван Олександрович (kipz_sio@ztu.edu.ua) Чижмотря Олексій Володимирович (4ov.ztu@gmail.com)Лабораторна робота №3
Тема: Багатопотоковість у C#.
Мета роботи: навчитися працювати з потоками та
процесами у мові C#.
Виділений час: 18 годин (6 годин практичних робіт та 12
годин самостійної роботи).
Завдання:
A. Розробити дві програми:
1) шифрування файлів;
2) менеджер процесів.
Програмний код має бути написаний максимально універсально без
прив’язки у класах, що реалізують основний функціонал до інтерфейсу.
Передбачається, що дані класи потрібно буде використовувати в наступних
лабораторних роботах.
Вимоги до програми шифрування файлів
1. Графічний інтерфейс користувача з можливістю вводу ключа для
шифрування та діалогу вибору довільного файлу, який буде шифруватись
або розшифровуватись.
2. Здатність працювати з файлами довільного розміру та формату.
3. В процесі шифрування, повинен відображатись індикатор прогресу (0-100%)
та час, який пройшов від запуску шифрування.
4. По завершенні шифрування повинне бути відображене вікно з інформацією
про розмір зашифрованого файла, його назву та час, затрачений на
шифрування.
5. Необхідно запобігти «підвисанню» вікна при здійсненні операції шифрування
(шифрування здійснюватись в окремому обчислювальному потоці за
допомогою класу BackgroundWorker) .
6. Коректна обробка виключень, що можуть виникати під час роботи.
7. Для успішного виконання роботи необхідно ознайомитися з наступними
темами: асинхронні операції (клас BackgroundWorker), класи File, FileStream,
Timer, DateTime, OpenFileDialog, SaveFileDialog, обробка виключень.
Вимоги до менеджера процесів
1. Можливість запуску програм: Калькулятор, Microsoft Word та ще трьох на
ваш вибір.
2. Перегляд список запущених процесів з інформацією про обсяг оперативної
пам'яті, виділений під процес, часу, коли був запущений процес, пріоритет
процесу, кількість потоків, які запущені процесом. Відобразити у вигляді
таблиці.
3. Можливість зупинки вибраного процесу.
4. Можливість зміни пріоритету вибраного процесу.
B. Запушити виконану роботу у репозиторій на git.ztu.edu.ua або GitLab з назвою
DotNetLab3 та надати доступ до репозиторію викладачеві, який проводить
практичні заняття:
 Власенко Олег Васильович (wellwisher.vls@gmail.com) Савчук Іван Олександрович (kipz_sio@ztu.edu.ua) Чижмотря Олексій Володимирович (4ov.ztu@gmail.com)Лабораторна робота №3
Тема: Багатопотоковість у C#.
Мета роботи: навчитися працювати з потоками та
процесами у мові C#.
Виділений час: 18 годин (6 годин практичних робіт та 12
годин самостійної роботи).
Завдання:
A. Розробити дві програми:
1) шифрування файлів;
2) менеджер процесів.
Програмний код має бути написаний максимально універсально без
прив’язки у класах, що реалізують основний функціонал до інтерфейсу.
Передбачається, що дані класи потрібно буде використовувати в наступних
лабораторних роботах.
Вимоги до програми шифрування файлів
1. Графічний інтерфейс користувача з можливістю вводу ключа для
шифрування та діалогу вибору довільного файлу, який буде шифруватись
або розшифровуватись.
2. Здатність працювати з файлами довільного розміру та формату.
3. В процесі шифрування, повинен відображатись індикатор прогресу (0-100%)
та час, який пройшов від запуску шифрування.
4. По завершенні шифрування повинне бути відображене вікно з інформацією
про розмір зашифрованого файла, його назву та час, затрачений на
шифрування.
5. Необхідно запобігти «підвисанню» вікна при здійсненні операції шифрування
(шифрування здійснюватись в окремому обчислювальному потоці за
допомогою класу BackgroundWorker) .
6. Коректна обробка виключень, що можуть виникати під час роботи.
7. Для успішного виконання роботи необхідно ознайомитися з наступними
темами: асинхронні операції (клас BackgroundWorker), класи File, FileStream,
Timer, DateTime, OpenFileDialog, SaveFileDialog, обробка виключень.
Вимоги до менеджера процесів
1. Можливість запуску програм: Калькулятор, Microsoft Word та ще трьох на
ваш вибір.
2. Перегляд список запущених процесів з інформацією про обсяг оперативної
пам'яті, виділений під процес, часу, коли був запущений процес, пріоритет
процесу, кількість потоків, які запущені процесом. Відобразити у вигляді
таблиці.
3. Можливість зупинки вибраного процесу.
4. Можливість зміни пріоритету вибраного процесу.
B. Запушити виконану роботу у репозиторій на git.ztu.edu.ua або GitLab з назвою
DotNetLab3 та надати доступ до репозиторію викладачеві, який проводить
практичні заняття:
 Власенко Олег Васильович (wellwisher.vls@gmail.com) Савчук Іван Олександрович (kipz_sio@ztu.edu.ua) Чижмотря Олексій Володимирович (4ov.ztu@gmail.com)Лабораторна робота №3
Тема: Багатопотоковість у C#.
Мета роботи: навчитися працювати з потоками та
процесами у мові C#.
Виділений час: 18 годин (6 годин практичних робіт та 12
годин самостійної роботи).
Завдання:
A. Розробити дві програми:
1) шифрування файлів;
2) менеджер процесів.
Програмний код має бути написаний максимально універсально без
прив’язки у класах, що реалізують основний функціонал до інтерфейсу.
Передбачається, що дані класи потрібно буде використовувати в наступних
лабораторних роботах.
Вимоги до програми шифрування файлів
1. Графічний інтерфейс користувача з можливістю вводу ключа для
шифрування та діалогу вибору довільного файлу, який буде шифруватись
або розшифровуватись.
2. Здатність працювати з файлами довільного розміру та формату.
3. В процесі шифрування, повинен відображатись індикатор прогресу (0-100%)
та час, який пройшов від запуску шифрування.
4. По завершенні шифрування повинне бути відображене вікно з інформацією
про розмір зашифрованого файла, його назву та час, затрачений на
шифрування.
5. Необхідно запобігти «підвисанню» вікна при здійсненні операції шифрування
(шифрування здійснюватись в окремому обчислювальному потоці за
допомогою класу BackgroundWorker) .
6. Коректна обробка виключень, що можуть виникати під час роботи.
7. Для успішного виконання роботи необхідно ознайомитися з наступними
темами: асинхронні операції (клас BackgroundWorker), класи File, FileStream,
Timer, DateTime, OpenFileDialog, SaveFileDialog, обробка виключень.
Вимоги до менеджера процесів
1. Можливість запуску програм: Калькулятор, Microsoft Word та ще трьох на
ваш вибір.
2. Перегляд список запущених процесів з інформацією про обсяг оперативної
пам'яті, виділений під процес, часу, коли був запущений процес, пріоритет
процесу, кількість потоків, які запущені процесом. Відобразити у вигляді
таблиці.
3. Можливість зупинки вибраного процесу.
4. Можливість зміни пріоритету вибраного процесу.
B. Запушити виконану роботу у репозиторій на git.ztu.edu.ua або GitLab з назвою
DotNetLab3 та надати доступ до репозиторію викладачеві, який проводить
практичні заняття:
 Власенко Олег Васильович (wellwisher.vls@gmail.com) Савчук Іван Олександрович (kipz_sio@ztu.edu.ua) Чижмотря Олексій Володимирович (4ov.ztu@gmail.com)Лабораторна робота №3
Тема: Багатопотоковість у C#.
Мета роботи: навчитися працювати з потоками та
процесами у мові C#.
Виділений час: 18 годин (6 годин практичних робіт та 12
годин самостійної роботи).
Завдання:
A. Розробити дві програми:
1) шифрування файлів;
2) менеджер процесів.
Програмний код має бути написаний максимально універсально без
прив’язки у класах, що реалізують основний функціонал до інтерфейсу.
Передбачається, що дані класи потрібно буде використовувати в наступних
лабораторних роботах.
Вимоги до програми шифрування файлів
1. Графічний інтерфейс користувача з можливістю вводу ключа для
шифрування та діалогу вибору довільного файлу, який буде шифруватись
або розшифровуватись.
2. Здатність працювати з файлами довільного розміру та формату.
3. В процесі шифрування, повинен відображатись індикатор прогресу (0-100%)
та час, який пройшов від запуску шифрування.
4. По завершенні шифрування повинне бути відображене вікно з інформацією
про розмір зашифрованого файла, його назву та час, затрачений на
шифрування.
5. Необхідно запобігти «підвисанню» вікна при здійсненні операції шифрування
(шифрування здійснюватись в окремому обчислювальному потоці за
допомогою класу BackgroundWorker) .
6. Коректна обробка виключень, що можуть виникати під час роботи.
7. Для успішного виконання роботи необхідно ознайомитися з наступними
темами: асинхронні операції (клас BackgroundWorker), класи File, FileStream,
Timer, DateTime, OpenFileDialog, SaveFileDialog, обробка виключень.
Вимоги до менеджера процесів
1. Можливість запуску програм: Калькулятор, Microsoft Word та ще трьох на
ваш вибір.
2. Перегляд список запущених процесів з інформацією про обсяг оперативної
пам'яті, виділений під процес, часу, коли був запущений процес, пріоритет
процесу, кількість потоків, які запущені процесом. Відобразити у вигляді
таблиці.
3. Можливість зупинки вибраного процесу.
4. Можливість зміни пріоритету вибраного процесу.
B. Запушити виконану роботу у репозиторій на git.ztu.edu.ua або GitLab з назвою
DotNetLab3 та надати доступ до репозиторію викладачеві, який проводить
практичні заняття:
 Власенко Олег Васильович (wellwisher.vls@gmail.com) Савчук Іван Олександрович (kipz_sio@ztu.edu.ua) Чижмотря Олексій Володимирович (4ov.ztu@gmail.com)Лабораторна робота №3
Тема: Багатопотоковість у C#.
Мета роботи: навчитися працювати з потоками та
процесами у мові C#.
Виділений час: 18 годин (6 годин практичних робіт та 12
годин самостійної роботи).
Завдання:
A. Розробити дві програми:
1) шифрування файлів;
2) менеджер процесів.
Програмний код має бути написаний максимально універсально без
прив’язки у класах, що реалізують основний функціонал до інтерфейсу.
Передбачається, що дані класи потрібно буде використовувати в наступних
лабораторних роботах.
Вимоги до програми шифрування файлів
1. Графічний інтерфейс користувача з можливістю вводу ключа для
шифрування та діалогу вибору довільного файлу, який буде шифруватись
або розшифровуватись.
2. Здатність працювати з файлами довільного розміру та формату.
3. В процесі шифрування, повинен відображатись індикатор прогресу (0-100%)
та час, який пройшов від запуску шифрування.
4. По завершенні шифрування повинне бути відображене вікно з інформацією
про розмір зашифрованого файла, його назву та час, затрачений на
шифрування.
5. Необхідно запобігти «підвисанню» вікна при здійсненні операції шифрування
(шифрування здійснюватись в окремому обчислювальному потоці за
допомогою класу BackgroundWorker) .
6. Коректна обробка виключень, що можуть виникати під час роботи.
7. Для успішного виконання роботи необхідно ознайомитися з наступними
темами: асинхронні операції (клас BackgroundWorker), класи File, FileStream,
Timer, DateTime, OpenFileDialog, SaveFileDialog, обробка виключень.
Вимоги до менеджера процесів
1. Можливість запуску програм: Калькулятор, Microsoft Word та ще трьох на
ваш вибір.
2. Перегляд список запущених процесів з інформацією про обсяг оперативної
пам'яті, виділений під процес, часу, коли був запущений процес, пріоритет
процесу, кількість потоків, які запущені процесом. Відобразити у вигляді
таблиці.
3. Можливість зупинки вибраного процесу.
4. Можливість зміни пріоритету вибраного процесу.
B. Запушити виконану роботу у репозиторій на git.ztu.edu.ua або GitLab з назвою
DotNetLab3 та надати доступ до репозиторію викладачеві, який проводить
практичні заняття:
 Власенко Олег Васильович (wellwisher.vls@gmail.com) Савчук Іван Олександрович (kipz_sio@ztu.edu.ua) Чижмотря Олексій Володимирович (4ov.ztu@gmail.com)Лабораторна робота №3
Тема: Багатопотоковість у C#.
Мета роботи: навчитися працювати з потоками та
процесами у мові C#.
Виділений час: 18 годин (6 годин практичних робіт та 12
годин самостійної роботи).
Завдання:
A. Розробити дві програми:
1) шифрування файлів;
2) менеджер процесів.
Програмний код має бути написаний максимально універсально без
прив’язки у класах, що реалізують основний функціонал до інтерфейсу.
Передбачається, що дані класи потрібно буде використовувати в наступних
лабораторних роботах.
Вимоги до програми шифрування файлів
1. Графічний інтерфейс користувача з можливістю вводу ключа для
шифрування та діалогу вибору довільного файлу, який буде шифруватись
або розшифровуватись.
2. Здатність працювати з файлами довільного розміру та формату.
3. В процесі шифрування, повинен відображатись індикатор прогресу (0-100%)
та час, який пройшов від запуску шифрування.
4. По завершенні шифрування повинне бути відображене вікно з інформацією
про розмір зашифрованого файла, його назву та час, затрачений на
шифрування.
5. Необхідно запобігти «підвисанню» вікна при здійсненні операції шифрування
(шифрування здійснюватись в окремому обчислювальному потоці за
допомогою класу BackgroundWorker) .
6. Коректна обробка виключень, що можуть виникати під час роботи.
7. Для успішного виконання роботи необхідно ознайомитися з наступними
темами: асинхронні операції (клас BackgroundWorker), класи File, FileStream,
Timer, DateTime, OpenFileDialog, SaveFileDialog, обробка виключень.
Вимоги до менеджера процесів
1. Можливість запуску програм: Калькулятор, Microsoft Word та ще трьох на
ваш вибір.
2. Перегляд список запущених процесів з інформацією про обсяг оперативної
пам'яті, виділений під процес, часу, коли був запущений процес, пріоритет
процесу, кількість потоків, які запущені процесом. Відобразити у вигляді
таблиці.
3. Можливість зупинки вибраного процесу.
4. Можливість зміни пріоритету вибраного процесу.
B. Запушити виконану роботу у репозиторій на git.ztu.edu.ua або GitLab з назвою
DotNetLab3 та надати доступ до репозиторію викладачеві, який проводить
практичні заняття:
 Власенко Олег Васильович (wellwisher.vls@gmail.com) Савчук Іван Олександрович (kipz_sio@ztu.edu.ua) Чижмотря Олексій Володимирович (4ov.ztu@gmail.com)Лабораторна робота №3
Тема: Багатопотоковість у C#.
Мета роботи: навчитися працювати з потоками та
процесами у мові C#.
Виділений час: 18 годин (6 годин практичних робіт та 12
годин самостійної роботи).
Завдання:
A. Розробити дві програми:
1) шифрування файлів;
2) менеджер процесів.
Програмний код має бути написаний максимально універсально без
прив’язки у класах, що реалізують основний функціонал до інтерфейсу.
Передбачається, що дані класи потрібно буде використовувати в наступних
лабораторних роботах.
Вимоги до програми шифрування файлів
1. Графічний інтерфейс користувача з можливістю вводу ключа для
шифрування та діалогу вибору довільного файлу, який буде шифруватись
або розшифровуватись.
2. Здатність працювати з файлами довільного розміру та формату.
3. В процесі шифрування, повинен відображатись індикатор прогресу (0-100%)
та час, який пройшов від запуску шифрування.
4. По завершенні шифрування повинне бути відображене вікно з інформацією
про розмір зашифрованого файла, його назву та час, затрачений на
шифрування.
5. Необхідно запобігти «підвисанню» вікна при здійсненні операції шифрування
(шифрування здійснюватись в окремому обчислювальному потоці за
допомогою класу BackgroundWorker) .
6. Коректна обробка виключень, що можуть виникати під час роботи.
7. Для успішного виконання роботи необхідно ознайомитися з наступними
темами: асинхронні операції (клас BackgroundWorker), класи File, FileStream,
Timer, DateTime, OpenFileDialog, SaveFileDialog, обробка виключень.
Вимоги до менеджера процесів
1. Можливість запуску програм: Калькулятор, Microsoft Word та ще трьох на
ваш вибір.
2. Перегляд список запущених процесів з інформацією про обсяг оперативної
пам'яті, виділений під процес, часу, коли був запущений процес, пріоритет
процесу, кількість потоків, які запущені процесом. Відобразити у вигляді
таблиці.
3. Можливість зупинки вибраного процесу.
4. Можливість зміни пріоритету вибраного процесу.
B. Запушити виконану роботу у репозиторій на git.ztu.edu.ua або GitLab з назвою
DotNetLab3 та надати доступ до репозиторію викладачеві, який проводить
практичні заняття:
 Власенко Олег Васильович (wellwisher.vls@gmail.com) Савчук Іван Олександрович (kipz_sio@ztu.edu.ua) Чижмотря Олексій Володимирович (4ov.ztu@gmail.com)Лабораторна робота №3
Тема: Багатопотоковість у C#.
Мета роботи: навчитися працювати з потоками та
процесами у мові C#.
Виділений час: 18 годин (6 годин практичних робіт та 12
годин самостійної роботи).
Завдання:
A. Розробити дві програми:
1) шифрування файлів;
2) менеджер процесів.
Програмний код має бути написаний максимально універсально без
прив’язки у класах, що реалізують основний функціонал до інтерфейсу.
Передбачається, що дані класи потрібно буде використовувати в наступних
лабораторних роботах.
Вимоги до програми шифрування файлів
1. Графічний інтерфейс користувача з можливістю вводу ключа для
шифрування та діалогу вибору довільного файлу, який буде шифруватись
або розшифровуватись.
2. Здатність працювати з файлами довільного розміру та формату.
3. В процесі шифрування, повинен відображатись індикатор прогресу (0-100%)
та час, який пройшов від запуску шифрування.
4. По завершенні шифрування повинне бути відображене вікно з інформацією
про розмір зашифрованого файла, його назву та час, затрачений на
шифрування.
5. Необхідно запобігти «підвисанню» вікна при здійсненні операції шифрування
(шифрування здійснюватись в окремому обчислювальному потоці за
допомогою класу BackgroundWorker) .
6. Коректна обробка виключень, що можуть виникати під час роботи.
7. Для успішного виконання роботи необхідно ознайомитися з наступними
темами: асинхронні операції (клас BackgroundWorker), класи File, FileStream,
Timer, DateTime, OpenFileDialog, SaveFileDialog, обробка виключень.
Вимоги до менеджера процесів
1. Можливість запуску програм: Калькулятор, Microsoft Word та ще трьох на
ваш вибір.
2. Перегляд список запущених процесів з інформацією про обсяг оперативної
пам'яті, виділений під процес, часу, коли був запущений процес, пріоритет
процесу, кількість потоків, які запущені процесом. Відобразити у вигляді
таблиці.
3. Можливість зупинки вибраного процесу.
4. Можливість зміни пріоритету вибраного процесу.
B. Запушити виконану роботу у репозиторій на git.ztu.edu.ua або GitLab з назвою
DotNetLab3 та надати доступ до репозиторію викладачеві, який проводить
практичні заняття:
 Власенко Олег Васильович (wellwisher.vls@gmail.com) Савчук Іван Олександрович (kipz_sio@ztu.edu.ua) Чижмотря Олексій Володимирович (4ov.ztu@gmail.com)Лабораторна робота №3
Тема: Багатопотоковість у C#.
Мета роботи: навчитися працювати з потоками та
процесами у мові C#.
Виділений час: 18 годин (6 годин практичних робіт та 12
годин самостійної роботи).
Завдання:
A. Розробити дві програми:
1) шифрування файлів;
2) менеджер процесів.
Програмний код має бути написаний максимально універсально без
прив’язки у класах, що реалізують основний функціонал до інтерфейсу.
Передбачається, що дані класи потрібно буде використовувати в наступних
лабораторних роботах.
Вимоги до програми шифрування файлів
1. Графічний інтерфейс користувача з можливістю вводу ключа для
шифрування та діалогу вибору довільного файлу, який буде шифруватись
або розшифровуватись.
2. Здатність працювати з файлами довільного розміру та формату.
3. В процесі шифрування, повинен відображатись індикатор прогресу (0-100%)
та час, який пройшов від запуску шифрування.
4. По завершенні шифрування повинне бути відображене вікно з інформацією
про розмір зашифрованого файла, його назву та час, затрачений на
шифрування.
5. Необхідно запобігти «підвисанню» вікна при здійсненні операції шифрування
(шифрування здійснюватись в окремому обчислювальному потоці за
допомогою класу BackgroundWorker) .
6. Коректна обробка виключень, що можуть виникати під час роботи.
7. Для успішного виконання роботи необхідно ознайомитися з наступними
темами: асинхронні операції (клас BackgroundWorker), класи File, FileStream,
Timer, DateTime, OpenFileDialog, SaveFileDialog, обробка виключень.
Вимоги до менеджера процесів
1. Можливість запуску програм: Калькулятор, Microsoft Word та ще трьох на
ваш вибір.
2. Перегляд список запущених процесів з інформацією про обсяг оперативної
пам'яті, виділений під процес, часу, коли був запущений процес, пріоритет
процесу, кількість потоків, які запущені процесом. Відобразити у вигляді
таблиці.
3. Можливість зупинки вибраного процесу.
4. Можливість зміни пріоритету вибраного процесу.
B. Запушити виконану роботу у репозиторій на git.ztu.edu.ua або GitLab з назвою
DotNetLab3 та надати доступ до репозиторію викладачеві, який проводить
практичні заняття:
 Власенко Олег Васильович (wellwisher.vls@gmail.com) Савчук Іван Олександрович (kipz_sio@ztu.edu.ua) Чижмотря Олексій Володимирович (4ov.ztu@gmail.com)Лабораторна робота №3
Тема: Багатопотоковість у C#.
Мета роботи: навчитися працювати з потоками та
процесами у мові C#.
Виділений час: 18 годин (6 годин практичних робіт та 12
годин самостійної роботи).
Завдання:
A. Розробити дві програми:
1) шифрування файлів;
2) менеджер процесів.
Програмний код має бути написаний максимально універсально без
прив’язки у класах, що реалізують основний функціонал до інтерфейсу.
Передбачається, що дані класи потрібно буде використовувати в наступних
лабораторних роботах.
Вимоги до програми шифрування файлів
1. Графічний інтерфейс користувача з можливістю вводу ключа для
шифрування та діалогу вибору довільного файлу, який буде шифруватись
або розшифровуватись.
2. Здатність працювати з файлами довільного розміру та формату.
3. В процесі шифрування, повинен відображатись індикатор прогресу (0-100%)
та час, який пройшов від запуску шифрування.
4. По завершенні шифрування повинне бути відображене вікно з інформацією
про розмір зашифрованого файла, його назву та час, затрачений на
шифрування.
5. Необхідно запобігти «підвисанню» вікна при здійсненні операції шифрування
(шифрування здійснюватись в окремому обчислювальному потоці за
допомогою класу BackgroundWorker) .
6. Коректна обробка виключень, що можуть виникати під час роботи.
7. Для успішного виконання роботи необхідно ознайомитися з наступними
темами: асинхронні операції (клас BackgroundWorker), класи File, FileStream,
Timer, DateTime, OpenFileDialog, SaveFileDialog, обробка виключень.
Вимоги до менеджера процесів
1. Можливість запуску програм: Калькулятор, Microsoft Word та ще трьох на
ваш вибір.
2. Перегляд список запущених процесів з інформацією про обсяг оперативної
пам'яті, виділений під процес, часу, коли був запущений процес, пріоритет
процесу, кількість потоків, які запущені процесом. Відобразити у вигляді
таблиці.
3. Можливість зупинки вибраного процесу.
4. Можливість зміни пріоритету вибраного процесу.
B. Запушити виконану роботу у репозиторій на git.ztu.edu.ua або GitLab з назвою
DotNetLab3 та надати доступ до репозиторію викладачеві, який проводить
практичні заняття:
 Власенко Олег Васильович (wellwisher.vls@gmail.com) Савчук Іван Олександрович (kipz_sio@ztu.edu.ua) Чижмотря Олексій Володимирович (4ov.ztu@gmail.com)Лабораторна робота №3
Тема: Багатопотоковість у C#.
Мета роботи: навчитися працювати з потоками та
процесами у мові C#.
Виділений час: 18 годин (6 годин практичних робіт та 12
годин самостійної роботи).
Завдання:
A. Розробити дві програми:
1) шифрування файлів;
2) менеджер процесів.
Програмний код має бути написаний максимально універсально без
прив’язки у класах, що реалізують основний функціонал до інтерфейсу.
Передбачається, що дані класи потрібно буде використовувати в наступних
лабораторних роботах.
Вимоги до програми шифрування файлів
1. Графічний інтерфейс користувача з можливістю вводу ключа для
шифрування та діалогу вибору довільного файлу, який буде шифруватись
або розшифровуватись.
2. Здатність працювати з файлами довільного розміру та формату.
3. В процесі шифрування, повинен відображатись індикатор прогресу (0-100%)
та час, який пройшов від запуску шифрування.
4. По завершенні шифрування повинне бути відображене вікно з інформацією
про розмір зашифрованого файла, його назву та час, затрачений на
шифрування.
5. Необхідно запобігти «підвисанню» вікна при здійсненні операції шифрування
(шифрування здійснюватись в окремому обчислювальному потоці за
допомогою класу BackgroundWorker) .
6. Коректна обробка виключень, що можуть виникати під час роботи.
7. Для успішного виконання роботи необхідно ознайомитися з наступними
темами: асинхронні операції (клас BackgroundWorker), класи File, FileStream,
Timer, DateTime, OpenFileDialog, SaveFileDialog, обробка виключень.
Вимоги до менеджера процесів
1. Можливість запуску програм: Калькулятор, Microsoft Word та ще трьох на
ваш вибір.
2. Перегляд список запущених процесів з інформацією про обсяг оперативної
пам'яті, виділений під процес, часу, коли був запущений процес, пріоритет
процесу, кількість потоків, які запущені процесом. Відобразити у вигляді
таблиці.
3. Можливість зупинки вибраного процесу.
4. Можливість зміни пріоритету вибраного процесу.
B. Запушити виконану роботу у репозиторій на git.ztu.edu.ua або GitLab з назвою
DotNetLab3 та надати доступ до репозиторію викладачеві, який проводить
практичні заняття:
 Власенко Олег Васильович (wellwisher.vls@gmail.com) Савчук Іван Олександрович (kipz_sio@ztu.edu.ua) Чижмотря Олексій Володимирович (4ov.ztu@gmail.com)Лабораторна робота №3
Тема: Багатопотоковість у C#.
Мета роботи: навчитися працювати з потоками та
процесами у мові C#.
Виділений час: 18 годин (6 годин практичних робіт та 12
годин самостійної роботи).
Завдання:
A. Розробити дві програми:
1) шифрування файлів;
2) менеджер процесів.
Програмний код має бути написаний максимально універсально без
прив’язки у класах, що реалізують основний функціонал до інтерфейсу.
Передбачається, що дані класи потрібно буде використовувати в наступних
лабораторних роботах.
Вимоги до програми шифрування файлів
1. Графічний інтерфейс користувача з можливістю вводу ключа для
шифрування та діалогу вибору довільного файлу, який буде шифруватись
або розшифровуватись.
2. Здатність працювати з файлами довільного розміру та формату.
3. В процесі шифрування, повинен відображатись індикатор прогресу (0-100%)
та час, який пройшов від запуску шифрування.
4. По завершенні шифрування повинне бути відображене вікно з інформацією
про розмір зашифрованого файла, його назву та час, затрачений на
шифрування.
5. Необхідно запобігти «підвисанню» вікна при здійсненні операції шифрування
(шифрування здійснюватись в окремому обчислювальному потоці за
допомогою класу BackgroundWorker) .
6. Коректна обробка виключень, що можуть виникати під час роботи.
7. Для успішного виконання роботи необхідно ознайомитися з наступними
темами: асинхронні операції (клас BackgroundWorker), класи File, FileStream,
Timer, DateTime, OpenFileDialog, SaveFileDialog, обробка виключень.
Вимоги до менеджера процесів
1. Можливість запуску програм: Калькулятор, Microsoft Word та ще трьох на
ваш вибір.
2. Перегляд список запущених процесів з інформацією про обсяг оперативної
пам'яті, виділений під процес, часу, коли був запущений процес, пріоритет
процесу, кількість потоків, які запущені процесом. Відобразити у вигляді
таблиці.
3. Можливість зупинки вибраного процесу.
4. Можливість зміни пріоритету вибраного процесу.
B. Запушити виконану роботу у репозиторій на git.ztu.edu.ua або GitLab з назвою
DotNetLab3 та надати доступ до репозиторію викладачеві, який проводить
практичні заняття:
 Власенко Олег Васильович (wellwisher.vls@gmail.com) Савчук Іван Олександрович (kipz_sio@ztu.edu.ua) Чижмотря Олексій Володимирович (4ov.ztu@gmail.com)Лабораторна робота №3
Тема: Багатопотоковість у C#.
Мета роботи: навчитися працювати з потоками та
процесами у мові C#.
Виділений час: 18 годин (6 годин практичних робіт та 12
годин самостійної роботи).
Завдання:
A. Розробити дві програми:
1) шифрування файлів;
2) менеджер процесів.
Програмний код має бути написаний максимально універсально без
прив’язки у класах, що реалізують основний функціонал до інтерфейсу.
Передбачається, що дані класи потрібно буде використовувати в наступних
лабораторних роботах.
Вимоги до програми шифрування файлів
1. Графічний інтерфейс користувача з можливістю вводу ключа для
шифрування та діалогу вибору довільного файлу, який буде шифруватись
або розшифровуватись.
2. Здатність працювати з файлами довільного розміру та формату.
3. В процесі шифрування, повинен відображатись індикатор прогресу (0-100%)
та час, який пройшов від запуску шифрування.
4. По завершенні шифрування повинне бути відображене вікно з інформацією
про розмір зашифрованого файла, його назву та час, затрачений на
шифрування.
5. Необхідно запобігти «підвисанню» вікна при здійсненні операції шифрування
(шифрування здійснюватись в окремому обчислювальному потоці за
допомогою класу BackgroundWorker) .
6. Коректна обробка виключень, що можуть виникати під час роботи.
7. Для успішного виконання роботи необхідно ознайомитися з наступними
темами: асинхронні операції (клас BackgroundWorker), класи File, FileStream,
Timer, DateTime, OpenFileDialog, SaveFileDialog, обробка виключень.
Вимоги до менеджера процесів
1. Можливість запуску програм: Калькулятор, Microsoft Word та ще трьох на
ваш вибір.
2. Перегляд список запущених процесів з інформацією про обсяг оперативної
пам'яті, виділений під процес, часу, коли був запущений процес, пріоритет
процесу, кількість потоків, які запущені процесом. Відобразити у вигляді
таблиці.
3. Можливість зупинки вибраного процесу.
4. Можливість зміни пріоритету вибраного процесу.
B. Запушити виконану роботу у репозиторій на git.ztu.edu.ua або GitLab з назвою
DotNetLab3 та надати доступ до репозиторію викладачеві, який проводить
практичні заняття:
 Власенко Олег Васильович (wellwisher.vls@gmail.com) Савчук Іван Олександрович (kipz_sio@ztu.edu.ua) Чижмотря Олексій Володимирович (4ov.ztu@gmail.com)Лабораторна робота №3
Тема: Багатопотоковість у C#.
Мета роботи: навчитися працювати з потоками та
процесами у мові C#.
Виділений час: 18 годин (6 годин практичних робіт та 12
годин самостійної роботи).
Завдання:
A. Розробити дві програми:
1) шифрування файлів;
2) менеджер процесів.
Програмний код має бути написаний максимально універсально без
прив’язки у класах, що реалізують основний функціонал до інтерфейсу.
Передбачається, що дані класи потрібно буде використовувати в наступних
лабораторних роботах.
Вимоги до програми шифрування файлів
1. Графічний інтерфейс користувача з можливістю вводу ключа для
шифрування та діалогу вибору довільного файлу, який буде шифруватись
або розшифровуватись.
2. Здатність працювати з файлами довільного розміру та формату.
3. В процесі шифрування, повинен відображатись індикатор прогресу (0-100%)
та час, який пройшов від запуску шифрування.
4. По завершенні шифрування повинне бути відображене вікно з інформацією
про розмір зашифрованого файла, його назву та час, затрачений на
шифрування.
5. Необхідно запобігти «підвисанню» вікна при здійсненні операції шифрування
(шифрування здійснюватись в окремому обчислювальному потоці за
допомогою класу BackgroundWorker) .
6. Коректна обробка виключень, що можуть виникати під час роботи.
7. Для успішного виконання роботи необхідно ознайомитися з наступними
темами: асинхронні операції (клас BackgroundWorker), класи File, FileStream,
Timer, DateTime, OpenFileDialog, SaveFileDialog, обробка виключень.
Вимоги до менеджера процесів
1. Можливість запуску програм: Калькулятор, Microsoft Word та ще трьох на
ваш вибір.
2. Перегляд список запущених процесів з інформацією про обсяг оперативної
пам'яті, виділений під процес, часу, коли був запущений процес, пріоритет
процесу, кількість потоків, які запущені процесом. Відобразити у вигляді
таблиці.
3. Можливість зупинки вибраного процесу.
4. Можливість зміни пріоритету вибраного процесу.
B. Запушити виконану роботу у репозиторій на git.ztu.edu.ua або GitLab з назвою
DotNetLab3 та надати доступ до репозиторію викладачеві, який проводить
практичні заняття:
 Власенко Олег Васильович (wellwisher.vls@gmail.com) Савчук Іван Олександрович (kipz_sio@ztu.edu.ua) Чижмотря Олексій Володимирович (4ov.ztu@gmail.com)Лабораторна робота №3
Тема: Багатопотоковість у C#.
Мета роботи: навчитися працювати з потоками та
процесами у мові C#.
Виділений час: 18 годин (6 годин практичних робіт та 12
годин самостійної роботи).
Завдання:
A. Розробити дві програми:
1) шифрування файлів;
2) менеджер процесів.
Програмний код має бути написаний максимально універсально без
прив’язки у класах, що реалізують основний функціонал до інтерфейсу.
Передбачається, що дані класи потрібно буде використовувати в наступних
лабораторних роботах.
Вимоги до програми шифрування файлів
1. Графічний інтерфейс користувача з можливістю вводу ключа для
шифрування та діалогу вибору довільного файлу, який буде шифруватись
або розшифровуватись.
2. Здатність працювати з файлами довільного розміру та формату.
3. В процесі шифрування, повинен відображатись індикатор прогресу (0-100%)
та час, який пройшов від запуску шифрування.
4. По завершенні шифрування повинне бути відображене вікно з інформацією
про розмір зашифрованого файла, його назву та час, затрачений на
шифрування.
5. Необхідно запобігти «підвисанню» вікна при здійсненні операції шифрування
(шифрування здійснюватись в окремому обчислювальному потоці за
допомогою класу BackgroundWorker) .
6. Коректна обробка виключень, що можуть виникати під час роботи.
7. Для успішного виконання роботи необхідно ознайомитися з наступними
темами: асинхронні операції (клас BackgroundWorker), класи File, FileStream,
Timer, DateTime, OpenFileDialog, SaveFileDialog, обробка виключень.
Вимоги до менеджера процесів
1. Можливість запуску програм: Калькулятор, Microsoft Word та ще трьох на
ваш вибір.
2. Перегляд список запущених процесів з інформацією про обсяг оперативної
пам'яті, виділений під процес, часу, коли був запущений процес, пріоритет
процесу, кількість потоків, які запущені процесом. Відобразити у вигляді
таблиці.
3. Можливість зупинки вибраного процесу.
4. Можливість зміни пріоритету вибраного процесу.
B. Запушити виконану роботу у репозиторій на git.ztu.edu.ua або GitLab з назвою
DotNetLab3 та надати доступ до репозиторію викладачеві, який проводить
практичні заняття:
 Власенко Олег Васильович (wellwisher.vls@gmail.com) Савчук Іван Олександрович (kipz_sio@ztu.edu.ua) Чижмотря Олексій Володимирович (4ov.ztu@gmail.com)Лабораторна робота №3
Тема: Багатопотоковість у C#.
Мета роботи: навчитися працювати з потоками та
процесами у мові C#.
Виділений час: 18 годин (6 годин практичних робіт та 12
годин самостійної роботи).
Завдання:
A. Розробити дві програми:
1) шифрування файлів;
2) менеджер процесів.
Програмний код має бути написаний максимально універсально без
прив’язки у класах, що реалізують основний функціонал до інтерфейсу.
Передбачається, що дані класи потрібно буде використовувати в наступних
лабораторних роботах.
Вимоги до програми шифрування файлів
1. Графічний інтерфейс користувача з можливістю вводу ключа для
шифрування та діалогу вибору довільного файлу, який буде шифруватись
або розшифровуватись.
2. Здатність працювати з файлами довільного розміру та формату.
3. В процесі шифрування, повинен відображатись індикатор прогресу (0-100%)
та час, який пройшов від запуску шифрування.
4. По завершенні шифрування повинне бути відображене вікно з інформацією
про розмір зашифрованого файла, його назву та час, затрачений на
шифрування.
5. Необхідно запобігти «підвисанню» вікна при здійсненні операції шифрування
(шифрування здійснюватись в окремому обчислювальному потоці за
допомогою класу BackgroundWorker) .
6. Коректна обробка виключень, що можуть виникати під час роботи.
7. Для успішного виконання роботи необхідно ознайомитися з наступними
темами: асинхронні операції (клас BackgroundWorker), класи File, FileStream,
Timer, DateTime, OpenFileDialog, SaveFileDialog, обробка виключень.
Вимоги до менеджера процесів
1. Можливість запуску програм: Калькулятор, Microsoft Word та ще трьох на
ваш вибір.
2. Перегляд список запущених процесів з інформацією про обсяг оперативної
пам'яті, виділений під процес, часу, коли був запущений процес, пріоритет
процесу, кількість потоків, які запущені процесом. Відобразити у вигляді
таблиці.
3. Можливість зупинки вибраного процесу.
4. Можливість зміни пріоритету вибраного процесу.
B. Запушити виконану роботу у репозиторій на git.ztu.edu.ua або GitLab з назвою
DotNetLab3 та надати доступ до репозиторію викладачеві, який проводить
практичні заняття:
 Власенко Олег Васильович (wellwisher.vls@gmail.com) Савчук Іван Олександрович (kipz_sio@ztu.edu.ua) Чижмотря Олексій Володимирович (4ov.ztu@gmail.com)Лабораторна робота №3
Тема: Багатопотоковість у C#.
Мета роботи: навчитися працювати з потоками та
процесами у мові C#.
Виділений час: 18 годин (6 годин практичних робіт та 12
годин самостійної роботи).
Завдання:
A. Розробити дві програми:
1) шифрування файлів;
2) менеджер процесів.
Програмний код має бути написаний максимально універсально без
прив’язки у класах, що реалізують основний функціонал до інтерфейсу.
Передбачається, що дані класи потрібно буде використовувати в наступних
лабораторних роботах.
Вимоги до програми шифрування файлів
1. Графічний інтерфейс користувача з можливістю вводу ключа для
шифрування та діалогу вибору довільного файлу, який буде шифруватись
або розшифровуватись.
2. Здатність працювати з файлами довільного розміру та формату.
3. В процесі шифрування, повинен відображатись індикатор прогресу (0-100%)
та час, який пройшов від запуску шифрування.
4. По завершенні шифрування повинне бути відображене вікно з інформацією
про розмір зашифрованого файла, його назву та час, затрачений на
шифрування.
5. Необхідно запобігти «підвисанню» вікна при здійсненні операції шифрування
(шифрування здійснюватись в окремому обчислювальному потоці за
допомогою класу BackgroundWorker) .
6. Коректна обробка виключень, що можуть виникати під час роботи.
7. Для успішного виконання роботи необхідно ознайомитися з наступними
темами: асинхронні операції (клас BackgroundWorker), класи File, FileStream,
Timer, DateTime, OpenFileDialog, SaveFileDialog, обробка виключень.
Вимоги до менеджера процесів
1. Можливість запуску програм: Калькулятор, Microsoft Word та ще трьох на
ваш вибір.
2. Перегляд список запущених процесів з інформацією про обсяг оперативної
пам'яті, виділений під процес, часу, коли був запущений процес, пріоритет
процесу, кількість потоків, які запущені процесом. Відобразити у вигляді
таблиці.
3. Можливість зупинки вибраного процесу.
4. Можливість зміни пріоритету вибраного процесу.
B. Запушити виконану роботу у репозиторій на git.ztu.edu.ua або GitLab з назвою
DotNetLab3 та надати доступ до репозиторію викладачеві, який проводить
практичні заняття:
 Власенко Олег Васильович (wellwisher.vls@gmail.com) Савчук Іван Олександрович (kipz_sio@ztu.edu.ua) Чижмотря Олексій Володимирович (4ov.ztu@gmail.com)Лабораторна робота №3
Тема: Багатопотоковість у C#.
Мета роботи: навчитися працювати з потоками та
процесами у мові C#.
Виділений час: 18 годин (6 годин практичних робіт та 12
годин самостійної роботи).
Завдання:
A. Розробити дві програми:
1) шифрування файлів;
2) менеджер процесів.
Програмний код має бути написаний максимально універсально без
прив’язки у класах, що реалізують основний функціонал до інтерфейсу.
Передбачається, що дані класи потрібно буде використовувати в наступних
лабораторних роботах.
Вимоги до програми шифрування файлів
1. Графічний інтерфейс користувача з можливістю вводу ключа для
шифрування та діалогу вибору довільного файлу, який буде шифруватись
або розшифровуватись.
2. Здатність працювати з файлами довільного розміру та формату.
3. В процесі шифрування, повинен відображатись індикатор прогресу (0-100%)
та час, який пройшов від запуску шифрування.
4. По завершенні шифрування повинне бути відображене вікно з інформацією
про розмір зашифрованого файла, його назву та час, затрачений на
шифрування.
5. Необхідно запобігти «підвисанню» вікна при здійсненні операції шифрування
(шифрування здійснюватись в окремому обчислювальному потоці за
допомогою класу BackgroundWorker) .
6. Коректна обробка виключень, що можуть виникати під час роботи.
7. Для успішного виконання роботи необхідно ознайомитися з наступними
темами: асинхронні операції (клас BackgroundWorker), класи File, FileStream,
Timer, DateTime, OpenFileDialog, SaveFileDialog, обробка виключень.
Вимоги до менеджера процесів
1. Можливість запуску програм: Калькулятор, Microsoft Word та ще трьох на
ваш вибір.
2. Перегляд список запущених процесів з інформацією про обсяг оперативної
пам'яті, виділений під процес, часу, коли був запущений процес, пріоритет
процесу, кількість потоків, які запущені процесом. Відобразити у вигляді
таблиці.
3. Можливість зупинки вибраного процесу.
4. Можливість зміни пріоритету вибраного процесу.
B. Запушити виконану роботу у репозиторій на git.ztu.edu.ua або GitLab з назвою
DotNetLab3 та надати доступ до репозиторію викладачеві, який проводить
практичні заняття:
 Власенко Олег Васильович (wellwisher.vls@gmail.com) Савчук Іван Олександрович (kipz_sio@ztu.edu.ua) Чижмотря Олексій Володимирович (4ov.ztu@gmail.com)Лабораторна робота №3
Тема: Багатопотоковість у C#.
Мета роботи: навчитися працювати з потоками та
процесами у мові C#.
Виділений час: 18 годин (6 годин практичних робіт та 12
годин самостійної роботи).
Завдання:
A. Розробити дві програми:
1) шифрування файлів;
2) менеджер процесів.
Програмний код має бути написаний максимально універсально без
прив’язки у класах, що реалізують основний функціонал до інтерфейсу.
Передбачається, що дані класи потрібно буде використовувати в наступних
лабораторних роботах.
Вимоги до програми шифрування файлів
1. Графічний інтерфейс користувача з можливістю вводу ключа для
шифрування та діалогу вибору довільного файлу, який буде шифруватись
або розшифровуватись.
2. Здатність працювати з файлами довільного розміру та формату.
3. В процесі шифрування, повинен відображатись індикатор прогресу (0-100%)
та час, який пройшов від запуску шифрування.
4. По завершенні шифрування повинне бути відображене вікно з інформацією
про розмір зашифрованого файла, його назву та час, затрачений на
шифрування.
5. Необхідно запобігти «підвисанню» вікна при здійсненні операції шифрування
(шифрування здійснюватись в окремому обчислювальному потоці за
допомогою класу BackgroundWorker) .
6. Коректна обробка виключень, що можуть виникати під час роботи.
7. Для успішного виконання роботи необхідно ознайомитися з наступними
темами: асинхронні операції (клас BackgroundWorker), класи File, FileStream,
Timer, DateTime, OpenFileDialog, SaveFileDialog, обробка виключень.
Вимоги до менеджера процесів
1. Можливість запуску програм: Калькулятор, Microsoft Word та ще трьох на
ваш вибір.
2. Перегляд список запущених процесів з інформацією про обсяг оперативної
пам'яті, виділений під процес, часу, коли був запущений процес, пріоритет
процесу, кількість потоків, які запущені процесом. Відобразити у вигляді
таблиці.
3. Можливість зупинки вибраного процесу.
4. Можливість зміни пріоритету вибраного процесу.
B. Запушити виконану роботу у репозиторій на git.ztu.edu.ua або GitLab з назвою
DotNetLab3 та надати доступ до репозиторію викладачеві, який проводить
практичні заняття:
 Власенко Олег Васильович (wellwisher.vls@gmail.com) Савчук Іван Олександрович (kipz_sio@ztu.edu.ua) Чижмотря Олексій Володимирович (4ov.ztu@gmail.com)Лабораторна робота №3
Тема: Багатопотоковість у C#.
Мета роботи: навчитися працювати з потоками та
процесами у мові C#.
Виділений час: 18 годин (6 годин практичних робіт та 12
годин самостійної роботи).
Завдання:
A. Розробити дві програми:
1) шифрування файлів;
2) менеджер процесів.
Програмний код має бути написаний максимально універсально без
прив’язки у класах, що реалізують основний функціонал до інтерфейсу.
Передбачається, що дані класи потрібно буде використовувати в наступних
лабораторних роботах.
Вимоги до програми шифрування файлів
1. Графічний інтерфейс користувача з можливістю вводу ключа для
шифрування та діалогу вибору довільного файлу, який буде шифруватись
або розшифровуватись.
2. Здатність працювати з файлами довільного розміру та формату.
3. В процесі шифрування, повинен відображатись індикатор прогресу (0-100%)
та час, який пройшов від запуску шифрування.
4. По завершенні шифрування повинне бути відображене вікно з інформацією
про розмір зашифрованого файла, його назву та час, затрачений на
шифрування.
5. Необхідно запобігти «підвисанню» вікна при здійсненні операції шифрування
(шифрування здійснюватись в окремому обчислювальному потоці за
допомогою класу BackgroundWorker) .
6. Коректна обробка виключень, що можуть виникати під час роботи.
7. Для успішного виконання роботи необхідно ознайомитися з наступними
темами: асинхронні операції (клас BackgroundWorker), класи File, FileStream,
Timer, DateTime, OpenFileDialog, SaveFileDialog, обробка виключень.
Вимоги до менеджера процесів
1. Можливість запуску програм: Калькулятор, Microsoft Word та ще трьох на
ваш вибір.
2. Перегляд список запущених процесів з інформацією про обсяг оперативної
пам'яті, виділений під процес, часу, коли був запущений процес, пріоритет
процесу, кількість потоків, які запущені процесом. Відобразити у вигляді
таблиці.
3. Можливість зупинки вибраного процесу.
4. Можливість зміни пріоритету вибраного процесу.
B. Запушити виконану роботу у репозиторій на git.ztu.edu.ua або GitLab з назвою
DotNetLab3 та надати доступ до репозиторію викладачеві, який проводить
практичні заняття:
 Власенко Олег Васильович (wellwisher.vls@gmail.com) Савчук Іван Олександрович (kipz_sio@ztu.edu.ua) Чижмотря Олексій Володимирович (4ov.ztu@gmail.com)Лабораторна робота №3
Тема: Багатопотоковість у C#.
Мета роботи: навчитися працювати з потоками та
процесами у мові C#.
Виділений час: 18 годин (6 годин практичних робіт та 12
годин самостійної роботи).
Завдання:
A. Розробити дві програми:
1) шифрування файлів;
2) менеджер процесів.
Програмний код має бути написаний максимально універсально без
прив’язки у класах, що реалізують основний функціонал до інтерфейсу.
Передбачається, що дані класи потрібно буде використовувати в наступних
лабораторних роботах.
Вимоги до програми шифрування файлів
1. Графічний інтерфейс користувача з можливістю вводу ключа для
шифрування та діалогу вибору довільного файлу, який буде шифруватись
або розшифровуватись.
2. Здатність працювати з файлами довільного розміру та формату.
3. В процесі шифрування, повинен відображатись індикатор прогресу (0-100%)
та час, який пройшов від запуску шифрування.
4. По завершенні шифрування повинне бути відображене вікно з інформацією
про розмір зашифрованого файла, його назву та час, затрачений на
шифрування.
5. Необхідно запобігти «підвисанню» вікна при здійсненні операції шифрування
(шифрування здійснюватись в окремому обчислювальному потоці за
допомогою класу BackgroundWorker) .
6. Коректна обробка виключень, що можуть виникати під час роботи.
7. Для успішного виконання роботи необхідно ознайомитися з наступними
темами: асинхронні операції (клас BackgroundWorker), класи File, FileStream,
Timer, DateTime, OpenFileDialog, SaveFileDialog, обробка виключень.
Вимоги до менеджера процесів
1. Можливість запуску програм: Калькулятор, Microsoft Word та ще трьох на
ваш вибір.
2. Перегляд список запущених процесів з інформацією про обсяг оперативної
пам'яті, виділений під процес, часу, коли був запущений процес, пріоритет
процесу, кількість потоків, які запущені процесом. Відобразити у вигляді
таблиці.
3. Можливість зупинки вибраного процесу.
4. Можливість зміни пріоритету вибраного процесу.
B. Запушити виконану роботу у репозиторій на git.ztu.edu.ua або GitLab з назвою
DotNetLab3 та надати доступ до репозиторію викладачеві, який проводить
практичні заняття:
 Власенко Олег Васильович (wellwisher.vls@gmail.com) Савчук Іван Олександрович (kipz_sio@ztu.edu.ua) Чижмотря Олексій Володимирович (4ov.ztu@gmail.com)Лабораторна робота №3
Тема: Багатопотоковість у C#.
Мета роботи: навчитися працювати з потоками та
процесами у мові C#.
Виділений час: 18 годин (6 годин практичних робіт та 12
годин самостійної роботи).
Завдання:
A. Розробити дві програми:
1) шифрування файлів;
2) менеджер процесів.
Програмний код має бути написаний максимально універсально без
прив’язки у класах, що реалізують основний функціонал до інтерфейсу.
Передбачається, що дані класи потрібно буде використовувати в наступних
лабораторних роботах.
Вимоги до програми шифрування файлів
1. Графічний інтерфейс користувача з можливістю вводу ключа для
шифрування та діалогу вибору довільного файлу, який буде шифруватись
або розшифровуватись.
2. Здатність працювати з файлами довільного розміру та формату.
3. В процесі шифрування, повинен відображатись індикатор прогресу (0-100%)
та час, який пройшов від запуску шифрування.
4. По завершенні шифрування повинне бути відображене вікно з інформацією
про розмір зашифрованого файла, його назву та час, затрачений на
шифрування.
5. Необхідно запобігти «підвисанню» вікна при здійсненні операції шифрування
(шифрування здійснюватись в окремому обчислювальному потоці за
допомогою класу BackgroundWorker) .
6. Коректна обробка виключень, що можуть виникати під час роботи.
7. Для успішного виконання роботи необхідно ознайомитися з наступними
темами: асинхронні операції (клас BackgroundWorker), класи File, FileStream,
Timer, DateTime, OpenFileDialog, SaveFileDialog, обробка виключень.
Вимоги до менеджера процесів
1. Можливість запуску програм: Калькулятор, Microsoft Word та ще трьох на
ваш вибір.
2. Перегляд список запущених процесів з інформацією про обсяг оперативної
пам'яті, виділений під процес, часу, коли був запущений процес, пріоритет
процесу, кількість потоків, які запущені процесом. Відобразити у вигляді
таблиці.
3. Можливість зупинки вибраного процесу.
4. Можливість зміни пріоритету вибраного процесу.
B. Запушити виконану роботу у репозиторій на git.ztu.edu.ua або GitLab з назвою
DotNetLab3 та надати доступ до репозиторію викладачеві, який проводить
практичні заняття:
 Власенко Олег Васильович (wellwisher.vls@gmail.com) Савчук Іван Олександрович (kipz_sio@ztu.edu.ua) Чижмотря Олексій Володимирович (4ov.ztu@gmail.com)Лабораторна робота №3
Тема: Багатопотоковість у C#.
Мета роботи: навчитися працювати з потоками та
процесами у мові C#.
Виділений час: 18 годин (6 годин практичних робіт та 12
годин самостійної роботи).
Завдання:
A. Розробити дві програми:
1) шифрування файлів;
2) менеджер процесів.
Програмний код має бути написаний максимально універсально без
прив’язки у класах, що реалізують основний функціонал до інтерфейсу.
Передбачається, що дані класи потрібно буде використовувати в наступних
лабораторних роботах.
Вимоги до програми шифрування файлів
1. Графічний інтерфейс користувача з можливістю вводу ключа для
шифрування та діалогу вибору довільного файлу, який буде шифруватись
або розшифровуватись.
2. Здатність працювати з файлами довільного розміру та формату.
3. В процесі шифрування, повинен відображатись індикатор прогресу (0-100%)
та час, який пройшов від запуску шифрування.
4. По завершенні шифрування повинне бути відображене вікно з інформацією
про розмір зашифрованого файла, його назву та час, затрачений на
шифрування.
5. Необхідно запобігти «підвисанню» вікна при здійсненні операції шифрування
(шифрування здійснюватись в окремому обчислювальному потоці за
допомогою класу BackgroundWorker) .
6. Коректна обробка виключень, що можуть виникати під час роботи.
7. Для успішного виконання роботи необхідно ознайомитися з наступними
темами: асинхронні операції (клас BackgroundWorker), класи File, FileStream,
Timer, DateTime, OpenFileDialog, SaveFileDialog, обробка виключень.
Вимоги до менеджера процесів
1. Можливість запуску програм: Калькулятор, Microsoft Word та ще трьох на
ваш вибір.
2. Перегляд список запущених процесів з інформацією про обсяг оперативної
пам'яті, виділений під процес, часу, коли був запущений процес, пріоритет
процесу, кількість потоків, які запущені процесом. Відобразити у вигляді
таблиці.
3. Можливість зупинки вибраного процесу.
4. Можливість зміни пріоритету вибраного процесу.
B. Запушити виконану роботу у репозиторій на git.ztu.edu.ua або GitLab з назвою
DotNetLab3 та надати доступ до репозиторію викладачеві, який проводить
практичні заняття:
 Власенко Олег Васильович (wellwisher.vls@gmail.com) Савчук Іван Олександрович (kipz_sio@ztu.edu.ua) Чижмотря Олексій Володимирович (4ov.ztu@gmail.com)Лабораторна робота №3
Тема: Багатопотоковість у C#.
Мета роботи: навчитися працювати з потоками та
процесами у мові C#.
Виділений час: 18 годин (6 годин практичних робіт та 12
годин самостійної роботи).
Завдання:
A. Розробити дві програми:
1) шифрування файлів;
2) менеджер процесів.
Програмний код має бути написаний максимально універсально без
прив’язки у класах, що реалізують основний функціонал до інтерфейсу.
Передбачається, що дані класи потрібно буде використовувати в наступних
лабораторних роботах.
Вимоги до програми шифрування файлів
1. Графічний інтерфейс користувача з можливістю вводу ключа для
шифрування та діалогу вибору довільного файлу, який буде шифруватись
або розшифровуватись.
2. Здатність працювати з файлами довільного розміру та формату.
3. В процесі шифрування, повинен відображатись індикатор прогресу (0-100%)
та час, який пройшов від запуску шифрування.
4. По завершенні шифрування повинне бути відображене вікно з інформацією
про розмір зашифрованого файла, його назву та час, затрачений на
шифрування.
5. Необхідно запобігти «підвисанню» вікна при здійсненні операції шифрування
(шифрування здійснюватись в окремому обчислювальному потоці за
допомогою класу BackgroundWorker) .
6. Коректна обробка виключень, що можуть виникати під час роботи.
7. Для успішного виконання роботи необхідно ознайомитися з наступними
темами: асинхронні операції (клас BackgroundWorker), класи File, FileStream,
Timer, DateTime, OpenFileDialog, SaveFileDialog, обробка виключень.
Вимоги до менеджера процесів
1. Можливість запуску програм: Калькулятор, Microsoft Word та ще трьох на
ваш вибір.
2. Перегляд список запущених процесів з інформацією про обсяг оперативної
пам'яті, виділений під процес, часу, коли був запущений процес, пріоритет
процесу, кількість потоків, які запущені процесом. Відобразити у вигляді
таблиці.
3. Можливість зупинки вибраного процесу.
4. Можливість зміни пріоритету вибраного процесу.
B. Запушити виконану роботу у репозиторій на git.ztu.edu.ua або GitLab з назвою
DotNetLab3 та надати доступ до репозиторію викладачеві, який проводить
практичні заняття:
 Власенко Олег Васильович (wellwisher.vls@gmail.com) Савчук Іван Олександрович (kipz_sio@ztu.edu.ua) Чижмотря Олексій Володимирович (4ov.ztu@gmail.com)Лабораторна робота №3
Тема: Багатопотоковість у C#.
Мета роботи: навчитися працювати з потоками та
процесами у мові C#.
Виділений час: 18 годин (6 годин практичних робіт та 12
годин самостійної роботи).
Завдання:
A. Розробити дві програми:
1) шифрування файлів;
2) менеджер процесів.
Програмний код має бути написаний максимально універсально без
прив’язки у класах, що реалізують основний функціонал до інтерфейсу.
Передбачається, що дані класи потрібно буде використовувати в наступних
лабораторних роботах.
Вимоги до програми шифрування файлів
1. Графічний інтерфейс користувача з можливістю вводу ключа для
шифрування та діалогу вибору довільного файлу, який буде шифруватись
або розшифровуватись.
2. Здатність працювати з файлами довільного розміру та формату.
3. В процесі шифрування, повинен відображатись індикатор прогресу (0-100%)
та час, який пройшов від запуску шифрування.
4. По завершенні шифрування повинне бути відображене вікно з інформацією
про розмір зашифрованого файла, його назву та час, затрачений на
шифрування.
5. Необхідно запобігти «підвисанню» вікна при здійсненні операції шифрування
(шифрування здійснюватись в окремому обчислювальному потоці за
допомогою класу BackgroundWorker) .
6. Коректна обробка виключень, що можуть виникати під час роботи.
7. Для успішного виконання роботи необхідно ознайомитися з наступними
темами: асинхронні операції (клас BackgroundWorker), класи File, FileStream,
Timer, DateTime, OpenFileDialog, SaveFileDialog, обробка виключень.
Вимоги до менеджера процесів
1. Можливість запуску програм: Калькулятор, Microsoft Word та ще трьох на
ваш вибір.
2. Перегляд список запущених процесів з інформацією про обсяг оперативної
пам'яті, виділений під процес, часу, коли був запущений процес, пріоритет
процесу, кількість потоків, які запущені процесом. Відобразити у вигляді
таблиці.
3. Можливість зупинки вибраного процесу.
4. Можливість зміни пріоритету вибраного процесу.
B. Запушити виконану роботу у репозиторій на git.ztu.edu.ua або GitLab з назвою
DotNetLab3 та надати доступ до репозиторію викладачеві, який проводить
практичні заняття:
 Власенко Олег Васильович (wellwisher.vls@gmail.com) Савчук Іван Олександрович (kipz_sio@ztu.edu.ua) Чижмотря Олексій Володимирович (4ov.ztu@gmail.com)Лабораторна робота №3
Тема: Багатопотоковість у C#.
Мета роботи: навчитися працювати з потоками та
процесами у мові C#.
Виділений час: 18 годин (6 годин практичних робіт та 12
годин самостійної роботи).
Завдання:
A. Розробити дві програми:
1) шифрування файлів;
2) менеджер процесів.
Програмний код має бути написаний максимально універсально без
прив’язки у класах, що реалізують основний функціонал до інтерфейсу.
Передбачається, що дані класи потрібно буде використовувати в наступних
лабораторних роботах.
Вимоги до програми шифрування файлів
1. Графічний інтерфейс користувача з можливістю вводу ключа для
шифрування та діалогу вибору довільного файлу, який буде шифруватись
або розшифровуватись.
2. Здатність працювати з файлами довільного розміру та формату.
3. В процесі шифрування, повинен відображатись індикатор прогресу (0-100%)
та час, який пройшов від запуску шифрування.
4. По завершенні шифрування повинне бути відображене вікно з інформацією
про розмір зашифрованого файла, його назву та час, затрачений на
шифрування.
5. Необхідно запобігти «підвисанню» вікна при здійсненні операції шифрування
(шифрування здійснюватись в окремому обчислювальному потоці за
допомогою класу BackgroundWorker) .
6. Коректна обробка виключень, що можуть виникати під час роботи.
7. Для успішного виконання роботи необхідно ознайомитися з наступними
темами: асинхронні операції (клас BackgroundWorker), класи File, FileStream,
Timer, DateTime, OpenFileDialog, SaveFileDialog, обробка виключень.
Вимоги до менеджера процесів
1. Можливість запуску програм: Калькулятор, Microsoft Word та ще трьох на
ваш вибір.
2. Перегляд список запущених процесів з інформацією про обсяг оперативної
пам'яті, виділений під процес, часу, коли був запущений процес, пріоритет
процесу, кількість потоків, які запущені процесом. Відобразити у вигляді
таблиці.
3. Можливість зупинки вибраного процесу.
4. Можливість зміни пріоритету вибраного процесу.
B. Запушити виконану роботу у репозиторій на git.ztu.edu.ua або GitLab з назвою
DotNetLab3 та надати доступ до репозиторію викладачеві, який проводить
практичні заняття:
 Власенко Олег Васильович (wellwisher.vls@gmail.com) Савчук Іван Олександрович (kipz_sio@ztu.edu.ua) Чижмотря Олексій Володимирович (4ov.ztu@gmail.com)Лабораторна робота №3
Тема: Багатопотоковість у C#.
Мета роботи: навчитися працювати з потоками та
процесами у мові C#.
Виділений час: 18 годин (6 годин практичних робіт та 12
годин самостійної роботи).
Завдання:
A. Розробити дві програми:
1) шифрування файлів;
2) менеджер процесів.
Програмний код має бути написаний максимально універсально без
прив’язки у класах, що реалізують основний функціонал до інтерфейсу.
Передбачається, що дані класи потрібно буде використовувати в наступних
лабораторних роботах.
Вимоги до програми шифрування файлів
1. Графічний інтерфейс користувача з можливістю вводу ключа для
шифрування та діалогу вибору довільного файлу, який буде шифруватись
або розшифровуватись.
2. Здатність працювати з файлами довільного розміру та формату.
3. В процесі шифрування, повинен відображатись індикатор прогресу (0-100%)
та час, який пройшов від запуску шифрування.
4. По завершенні шифрування повинне бути відображене вікно з інформацією
про розмір зашифрованого файла, його назву та час, затрачений на
шифрування.
5. Необхідно запобігти «підвисанню» вікна при здійсненні операції шифрування
(шифрування здійснюватись в окремому обчислювальному потоці за
допомогою класу BackgroundWorker) .
6. Коректна обробка виключень, що можуть виникати під час роботи.
7. Для успішного виконання роботи необхідно ознайомитися з наступними
темами: асинхронні операції (клас BackgroundWorker), класи File, FileStream,
Timer, DateTime, OpenFileDialog, SaveFileDialog, обробка виключень.
Вимоги до менеджера процесів
1. Можливість запуску програм: Калькулятор, Microsoft Word та ще трьох на
ваш вибір.
2. Перегляд список запущених процесів з інформацією про обсяг оперативної
пам'яті, виділений під процес, часу, коли був запущений процес, пріоритет
процесу, кількість потоків, які запущені процесом. Відобразити у вигляді
таблиці.
3. Можливість зупинки вибраного процесу.
4. Можливість зміни пріоритету вибраного процесу.
B. Запушити виконану роботу у репозиторій на git.ztu.edu.ua або GitLab з назвою
DotNetLab3 та надати доступ до репозиторію викладачеві, який проводить
практичні заняття:
 Власенко Олег Васильович (wellwisher.vls@gmail.com) Савчук Іван Олександрович (kipz_sio@ztu.edu.ua) Чижмотря Олексій Володимирович (4ov.ztu@gmail.com)Лабораторна робота №3
Тема: Багатопотоковість у C#.
Мета роботи: навчитися працювати з потоками та
процесами у мові C#.
Виділений час: 18 годин (6 годин практичних робіт та 12
годин самостійної роботи).
Завдання:
A. Розробити дві програми:
1) шифрування файлів;
2) менеджер процесів.
Програмний код має бути написаний максимально універсально без
прив’язки у класах, що реалізують основний функціонал до інтерфейсу.
Передбачається, що дані класи потрібно буде використовувати в наступних
лабораторних роботах.
Вимоги до програми шифрування файлів
1. Графічний інтерфейс користувача з можливістю вводу ключа для
шифрування та діалогу вибору довільного файлу, який буде шифруватись
або розшифровуватись.
2. Здатність працювати з файлами довільного розміру та формату.
3. В процесі шифрування, повинен відображатись індикатор прогресу (0-100%)
та час, який пройшов від запуску шифрування.
4. По завершенні шифрування повинне бути відображене вікно з інформацією
про розмір зашифрованого файла, його назву та час, затрачений на
шифрування.
5. Необхідно запобігти «підвисанню» вікна при здійсненні операції шифрування
(шифрування здійснюватись в окремому обчислювальному потоці за
допомогою класу BackgroundWorker) .
6. Коректна обробка виключень, що можуть виникати під час роботи.
7. Для успішного виконання роботи необхідно ознайомитися з наступними
темами: асинхронні операції (клас BackgroundWorker), класи File, FileStream,
Timer, DateTime, OpenFileDialog, SaveFileDialog, обробка виключень.
Вимоги до менеджера процесів
1. Можливість запуску програм: Калькулятор, Microsoft Word та ще трьох на
ваш вибір.
2. Перегляд список запущених процесів з інформацією про обсяг оперативної
пам'яті, виділений під процес, часу, коли був запущений процес, пріоритет
процесу, кількість потоків, які запущені процесом. Відобразити у вигляді
таблиці.
3. Можливість зупинки вибраного процесу.
4. Можливість зміни пріоритету вибраного процесу.
B. Запушити виконану роботу у репозиторій на git.ztu.edu.ua або GitLab з назвою
DotNetLab3 та надати доступ до репозиторію викладачеві, який проводить
практичні заняття:
 Власенко Олег Васильович (wellwisher.vls@gmail.com) Савчук Іван Олександрович (kipz_sio@ztu.edu.ua) Чижмотря Олексій Володимирович (4ov.ztu@gmail.com)Лабораторна робота №3
Тема: Багатопотоковість у C#.
Мета роботи: навчитися працювати з потоками та
процесами у мові C#.
Виділений час: 18 годин (6 годин практичних робіт та 12
годин самостійної роботи).
Завдання:
A. Розробити дві програми:
1) шифрування файлів;
2) менеджер процесів.
Програмний код має бути написаний максимально універсально без
прив’язки у класах, що реалізують основний функціонал до інтерфейсу.
Передбачається, що дані класи потрібно буде використовувати в наступних
лабораторних роботах.
Вимоги до програми шифрування файлів
1. Графічний інтерфейс користувача з можливістю вводу ключа для
шифрування та діалогу вибору довільного файлу, який буде шифруватись
або розшифровуватись.
2. Здатність працювати з файлами довільного розміру та формату.
3. В процесі шифрування, повинен відображатись індикатор прогресу (0-100%)
та час, який пройшов від запуску шифрування.
4. По завершенні шифрування повинне бути відображене вікно з інформацією
про розмір зашифрованого файла, його назву та час, затрачений на
шифрування.
5. Необхідно запобігти «підвисанню» вікна при здійсненні операції шифрування
(шифрування здійснюватись в окремому обчислювальному потоці за
допомогою класу BackgroundWorker) .
6. Коректна обробка виключень, що можуть виникати під час роботи.
7. Для успішного виконання роботи необхідно ознайомитися з наступними
темами: асинхронні операції (клас BackgroundWorker), класи File, FileStream,
Timer, DateTime, OpenFileDialog, SaveFileDialog, обробка виключень.
Вимоги до менеджера процесів
1. Можливість запуску програм: Калькулятор, Microsoft Word та ще трьох на
ваш вибір.
2. Перегляд список запущених процесів з інформацією про обсяг оперативної
пам'яті, виділений під процес, часу, коли був запущений процес, пріоритет
процесу, кількість потоків, які запущені процесом. Відобразити у вигляді
таблиці.
3. Можливість зупинки вибраного процесу.
4. Можливість зміни пріоритету вибраного процесу.
B. Запушити виконану роботу у репозиторій на git.ztu.edu.ua або GitLab з назвою
DotNetLab3 та надати доступ до репозиторію викладачеві, який проводить
практичні заняття:
 Власенко Олег Васильович (wellwisher.vls@gmail.com) Савчук Іван Олександрович (kipz_sio@ztu.edu.ua) Чижмотря Олексій Володимирович (4ov.ztu@gmail.com)Лабораторна робота №3
Тема: Багатопотоковість у C#.
Мета роботи: навчитися працювати з потоками та
процесами у мові C#.
Виділений час: 18 годин (6 годин практичних робіт та 12
годин самостійної роботи).
Завдання:
A. Розробити дві програми:
1) шифрування файлів;
2) менеджер процесів.
Програмний код має бути написаний максимально універсально без
прив’язки у класах, що реалізують основний функціонал до інтерфейсу.
Передбачається, що дані класи потрібно буде використовувати в наступних
лабораторних роботах.
Вимоги до програми шифрування файлів
1. Графічний інтерфейс користувача з можливістю вводу ключа для
шифрування та діалогу вибору довільного файлу, який буде шифруватись
або розшифровуватись.
2. Здатність працювати з файлами довільного розміру та формату.
3. В процесі шифрування, повинен відображатись індикатор прогресу (0-100%)
та час, який пройшов від запуску шифрування.
4. По завершенні шифрування повинне бути відображене вікно з інформацією
про розмір зашифрованого файла, його назву та час, затрачений на
шифрування.
5. Необхідно запобігти «підвисанню» вікна при здійсненні операції шифрування
(шифрування здійснюватись в окремому обчислювальному потоці за
допомогою класу BackgroundWorker) .
6. Коректна обробка виключень, що можуть виникати під час роботи.
7. Для успішного виконання роботи необхідно ознайомитися з наступними
темами: асинхронні операції (клас BackgroundWorker), класи File, FileStream,
Timer, DateTime, OpenFileDialog, SaveFileDialog, обробка виключень.
Вимоги до менеджера процесів
1. Можливість запуску програм: Калькулятор, Microsoft Word та ще трьох на
ваш вибір.
2. Перегляд список запущених процесів з інформацією про обсяг оперативної
пам'яті, виділений під процес, часу, коли був запущений процес, пріоритет
процесу, кількість потоків, які запущені процесом. Відобразити у вигляді
таблиці.
3. Можливість зупинки вибраного процесу.
4. Можливість зміни пріоритету вибраного процесу.
B. Запушити виконану роботу у репозиторій на git.ztu.edu.ua або GitLab з назвою
DotNetLab3 та надати доступ до репозиторію викладачеві, який проводить
практичні заняття:
 Власенко Олег Васильович (wellwisher.vls@gmail.com) Савчук Іван Олександрович (kipz_sio@ztu.edu.ua) Чижмотря Олексій Володимирович (4ov.ztu@gmail.com)Лабораторна робота №3
Тема: Багатопотоковість у C#.
Мета роботи: навчитися працювати з потоками та
процесами у мові C#.
Виділений час: 18 годин (6 годин практичних робіт та 12
годин самостійної роботи).
Завдання:
A. Розробити дві програми:
1) шифрування файлів;
2) менеджер процесів.
Програмний код має бути написаний максимально універсально без
прив’язки у класах, що реалізують основний функціонал до інтерфейсу.
Передбачається, що дані класи потрібно буде використовувати в наступних
лабораторних роботах.
Вимоги до програми шифрування файлів
1. Графічний інтерфейс користувача з можливістю вводу ключа для
шифрування та діалогу вибору довільного файлу, який буде шифруватись
або розшифровуватись.
2. Здатність працювати з файлами довільного розміру та формату.
3. В процесі шифрування, повинен відображатись індикатор прогресу (0-100%)
та час, який пройшов від запуску шифрування.
4. По завершенні шифрування повинне бути відображене вікно з інформацією
про розмір зашифрованого файла, його назву та час, затрачений на
шифрування.
5. Необхідно запобігти «підвисанню» вікна при здійсненні операції шифрування
(шифрування здійснюватись в окремому обчислювальному потоці за
допомогою класу BackgroundWorker) .
6. Коректна обробка виключень, що можуть виникати під час роботи.
7. Для успішного виконання роботи необхідно ознайомитися з наступними
темами: асинхронні операції (клас BackgroundWorker), класи File, FileStream,
Timer, DateTime, OpenFileDialog, SaveFileDialog, обробка виключень.
Вимоги до менеджера процесів
1. Можливість запуску програм: Калькулятор, Microsoft Word та ще трьох на
ваш вибір.
2. Перегляд список запущених процесів з інформацією про обсяг оперативної
пам'яті, виділений під процес, часу, коли був запущений процес, пріоритет
процесу, кількість потоків, які запущені процесом. Відобразити у вигляді
таблиці.
3. Можливість зупинки вибраного процесу.
4. Можливість зміни пріоритету вибраного процесу.
B. Запушити виконану роботу у репозиторій на git.ztu.edu.ua або GitLab з назвою
DotNetLab3 та надати доступ до репозиторію викладачеві, який проводить
практичні заняття:
 Власенко Олег Васильович (wellwisher.vls@gmail.com) Савчук Іван Олександрович (kipz_sio@ztu.edu.ua) Чижмотря Олексій Володимирович (4ov.ztu@gmail.com)Лабораторна робота №3
Тема: Багатопотоковість у C#.
Мета роботи: навчитися працювати з потоками та
процесами у мові C#.
Виділений час: 18 годин (6 годин практичних робіт та 12
годин самостійної роботи).
Завдання:
A. Розробити дві програми:
1) шифрування файлів;
2) менеджер процесів.
Програмний код має бути написаний максимально універсально без
прив’язки у класах, що реалізують основний функціонал до інтерфейсу.
Передбачається, що дані класи потрібно буде використовувати в наступних
лабораторних роботах.
Вимоги до програми шифрування файлів
1. Графічний інтерфейс користувача з можливістю вводу ключа для
шифрування та діалогу вибору довільного файлу, який буде шифруватись
або розшифровуватись.
2. Здатність працювати з файлами довільного розміру та формату.
3. В процесі шифрування, повинен відображатись індикатор прогресу (0-100%)
та час, який пройшов від запуску шифрування.
4. По завершенні шифрування повинне бути відображене вікно з інформацією
про розмір зашифрованого файла, його назву та час, затрачений на
шифрування.
5. Необхідно запобігти «підвисанню» вікна при здійсненні операції шифрування
(шифрування здійснюватись в окремому обчислювальному потоці за
допомогою класу BackgroundWorker) .
6. Коректна обробка виключень, що можуть виникати під час роботи.
7. Для успішного виконання роботи необхідно ознайомитися з наступними
темами: асинхронні операції (клас BackgroundWorker), класи File, FileStream,
Timer, DateTime, OpenFileDialog, SaveFileDialog, обробка виключень.
Вимоги до менеджера процесів
1. Можливість запуску програм: Калькулятор, Microsoft Word та ще трьох на
ваш вибір.
2. Перегляд список запущених процесів з інформацією про обсяг оперативної
пам'яті, виділений під процес, часу, коли був запущений процес, пріоритет
процесу, кількість потоків, які запущені процесом. Відобразити у вигляді
таблиці.
3. Можливість зупинки вибраного процесу.
4. Можливість зміни пріоритету вибраного процесу.
B. Запушити виконану роботу у репозиторій на git.ztu.edu.ua або GitLab з назвою
DotNetLab3 та надати доступ до репозиторію викладачеві, який проводить
практичні заняття:
 Власенко Олег Васильович (wellwisher.vls@gmail.com) Савчук Іван Олександрович (kipz_sio@ztu.edu.ua) Чижмотря Олексій Володимирович (4ov.ztu@gmail.com)Лабораторна робота №3
Тема: Багатопотоковість у C#.
Мета роботи: навчитися працювати з потоками та
процесами у мові C#.
Виділений час: 18 годин (6 годин практичних робіт та 12
годин самостійної роботи).
Завдання:
A. Розробити дві програми:
1) шифрування файлів;
2) менеджер процесів.
Програмний код має бути написаний максимально універсально без
прив’язки у класах, що реалізують основний функціонал до інтерфейсу.
Передбачається, що дані класи потрібно буде використовувати в наступних
лабораторних роботах.
Вимоги до програми шифрування файлів
1. Графічний інтерфейс користувача з можливістю вводу ключа для
шифрування та діалогу вибору довільного файлу, який буде шифруватись
або розшифровуватись.
2. Здатність працювати з файлами довільного розміру та формату.
3. В процесі шифрування, повинен відображатись індикатор прогресу (0-100%)
та час, який пройшов від запуску шифрування.
4. По завершенні шифрування повинне бути відображене вікно з інформацією
про розмір зашифрованого файла, його назву та час, затрачений на
шифрування.
5. Необхідно запобігти «підвисанню» вікна при здійсненні операції шифрування
(шифрування здійснюватись в окремому обчислювальному потоці за
допомогою класу BackgroundWorker) .
6. Коректна обробка виключень, що можуть виникати під час роботи.
7. Для успішного виконання роботи необхідно ознайомитися з наступними
темами: асинхронні операції (клас BackgroundWorker), класи File, FileStream,
Timer, DateTime, OpenFileDialog, SaveFileDialog, обробка виключень.
Вимоги до менеджера процесів
1. Можливість запуску програм: Калькулятор, Microsoft Word та ще трьох на
ваш вибір.
2. Перегляд список запущених процесів з інформацією про обсяг оперативної
пам'яті, виділений під процес, часу, коли був запущений процес, пріоритет
процесу, кількість потоків, які запущені процесом. Відобразити у вигляді
таблиці.
3. Можливість зупинки вибраного процесу.
4. Можливість зміни пріоритету вибраного процесу.
B. Запушити виконану роботу у репозиторій на git.ztu.edu.ua або GitLab з назвою
DotNetLab3 та надати доступ до репозиторію викладачеві, який проводить
практичні заняття:
 Власенко Олег Васильович (wellwisher.vls@gmail.com) Савчук Іван Олександрович (kipz_sio@ztu.edu.ua) Чижмотря Олексій Володимирович (4ov.ztu@gmail.com)Лабораторна робота №3
Тема: Багатопотоковість у C#.
Мета роботи: навчитися працювати з потоками та
процесами у мові C#.
Виділений час: 18 годин (6 годин практичних робіт та 12
годин самостійної роботи).
Завдання:
A. Розробити дві програми:
1) шифрування файлів;
2) менеджер процесів.
Програмний код має бути написаний максимально універсально без
прив’язки у класах, що реалізують основний функціонал до інтерфейсу.
Передбачається, що дані класи потрібно буде використовувати в наступних
лабораторних роботах.
Вимоги до програми шифрування файлів
1. Графічний інтерфейс користувача з можливістю вводу ключа для
шифрування та діалогу вибору довільного файлу, який буде шифруватись
або розшифровуватись.
2. Здатність працювати з файлами довільного розміру та формату.
3. В процесі шифрування, повинен відображатись індикатор прогресу (0-100%)
та час, який пройшов від запуску шифрування.
4. По завершенні шифрування повинне бути відображене вікно з інформацією
про розмір зашифрованого файла, його назву та час, затрачений на
шифрування.
5. Необхідно запобігти «підвисанню» вікна при здійсненні операції шифрування
(шифрування здійснюватись в окремому обчислювальному потоці за
допомогою класу BackgroundWorker) .
6. Коректна обробка виключень, що можуть виникати під час роботи.
7. Для успішного виконання роботи необхідно ознайомитися з наступними
темами: асинхронні операції (клас BackgroundWorker), класи File, FileStream,
Timer, DateTime, OpenFileDialog, SaveFileDialog, обробка виключень.
Вимоги до менеджера процесів
1. Можливість запуску програм: Калькулятор, Microsoft Word та ще трьох на
ваш вибір.
2. Перегляд список запущених процесів з інформацією про обсяг оперативної
пам'яті, виділений під процес, часу, коли був запущений процес, пріоритет
процесу, кількість потоків, які запущені процесом. Відобразити у вигляді
таблиці.
3. Можливість зупинки вибраного процесу.
4. Можливість зміни пріоритету вибраного процесу.
B. Запушити виконану роботу у репозиторій на git.ztu.edu.ua або GitLab з назвою
DotNetLab3 та надати доступ до репозиторію викладачеві, який проводить
практичні заняття:
 Власенко Олег Васильович (wellwisher.vls@gmail.com) Савчук Іван Олександрович (kipz_sio@ztu.edu.ua) Чижмотря Олексій Володимирович (4ov.ztu@gmail.com)Лабораторна робота №3
Тема: Багатопотоковість у C#.
Мета роботи: навчитися працювати з потоками та
процесами у мові C#.
Виділений час: 18 годин (6 годин практичних робіт та 12
годин самостійної роботи).
Завдання:
A. Розробити дві програми:
1) шифрування файлів;
2) менеджер процесів.
Програмний код має бути написаний максимально універсально без
прив’язки у класах, що реалізують основний функціонал до інтерфейсу.
Передбачається, що дані класи потрібно буде використовувати в наступних
лабораторних роботах.
Вимоги до програми шифрування файлів
1. Графічний інтерфейс користувача з можливістю вводу ключа для
шифрування та діалогу вибору довільного файлу, який буде шифруватись
або розшифровуватись.
2. Здатність працювати з файлами довільного розміру та формату.
3. В процесі шифрування, повинен відображатись індикатор прогресу (0-100%)
та час, який пройшов від запуску шифрування.
4. По завершенні шифрування повинне бути відображене вікно з інформацією
про розмір зашифрованого файла, його назву та час, затрачений на
шифрування.
5. Необхідно запобігти «підвисанню» вікна при здійсненні операції шифрування
(шифрування здійснюватись в окремому обчислювальному потоці за
допомогою класу BackgroundWorker) .
6. Коректна обробка виключень, що можуть виникати під час роботи.
7. Для успішного виконання роботи необхідно ознайомитися з наступними
темами: асинхронні операції (клас BackgroundWorker), класи File, FileStream,
Timer, DateTime, OpenFileDialog, SaveFileDialog, обробка виключень.
Вимоги до менеджера процесів
1. Можливість запуску програм: Калькулятор, Microsoft Word та ще трьох на
ваш вибір.
2. Перегляд список запущених процесів з інформацією про обсяг оперативної
пам'яті, виділений під процес, часу, коли був запущений процес, пріоритет
процесу, кількість потоків, які запущені процесом. Відобразити у вигляді
таблиці.
3. Можливість зупинки вибраного процесу.
4. Можливість зміни пріоритету вибраного процесу.
B. Запушити виконану роботу у репозиторій на git.ztu.edu.ua або GitLab з назвою
DotNetLab3 та надати доступ до репозиторію викладачеві, який проводить
практичні заняття:
 Власенко Олег Васильович (wellwisher.vls@gmail.com) Савчук Іван Олександрович (kipz_sio@ztu.edu.ua) Чижмотря Олексій Володимирович (4ov.ztu@gmail.com)Лабораторна робота №3
Тема: Багатопотоковість у C#.
Мета роботи: навчитися працювати з потоками та
процесами у мові C#.
Виділений час: 18 годин (6 годин практичних робіт та 12
годин самостійної роботи).
Завдання:
A. Розробити дві програми:
1) шифрування файлів;
2) менеджер процесів.
Програмний код має бути написаний максимально універсально без
прив’язки у класах, що реалізують основний функціонал до інтерфейсу.
Передбачається, що дані класи потрібно буде використовувати в наступних
лабораторних роботах.
Вимоги до програми шифрування файлів
1. Графічний інтерфейс користувача з можливістю вводу ключа для
шифрування та діалогу вибору довільного файлу, який буде шифруватись
або розшифровуватись.
2. Здатність працювати з файлами довільного розміру та формату.
3. В процесі шифрування, повинен відображатись індикатор прогресу (0-100%)
та час, який пройшов від запуску шифрування.
4. По завершенні шифрування повинне бути відображене вікно з інформацією
про розмір зашифрованого файла, його назву та час, затрачений на
шифрування.
5. Необхідно запобігти «підвисанню» вікна при здійсненні операції шифрування
(шифрування здійснюватись в окремому обчислювальному потоці за
допомогою класу BackgroundWorker) .
6. Коректна обробка виключень, що можуть виникати під час роботи.
7. Для успішного виконання роботи необхідно ознайомитися з наступними
темами: асинхронні операції (клас BackgroundWorker), класи File, FileStream,
Timer, DateTime, OpenFileDialog, SaveFileDialog, обробка виключень.
Вимоги до менеджера процесів
1. Можливість запуску програм: Калькулятор, Microsoft Word та ще трьох на
ваш вибір.
2. Перегляд список запущених процесів з інформацією про обсяг оперативної
пам'яті, виділений під процес, часу, коли був запущений процес, пріоритет
процесу, кількість потоків, які запущені процесом. Відобразити у вигляді
таблиці.
3. Можливість зупинки вибраного процесу.
4. Можливість зміни пріоритету вибраного процесу.
B. Запушити виконану роботу у репозиторій на git.ztu.edu.ua або GitLab з назвою
DotNetLab3 та надати доступ до репозиторію викладачеві, який проводить
практичні заняття:
 Власенко Олег Васильович (wellwisher.vls@gmail.com) Савчук Іван Олександрович (kipz_sio@ztu.edu.ua) Чижмотря Олексій Володимирович (4ov.ztu@gmail.com)Лабораторна робота №3
Тема: Багатопотоковість у C#.
Мета роботи: навчитися працювати з потоками та
процесами у мові C#.
Виділений час: 18 годин (6 годин практичних робіт та 12
годин самостійної роботи).
Завдання:
A. Розробити дві програми:
1) шифрування файлів;
2) менеджер процесів.
Програмний код має бути написаний максимально універсально без
прив’язки у класах, що реалізують основний функціонал до інтерфейсу.
Передбачається, що дані класи потрібно буде використовувати в наступних
лабораторних роботах.
Вимоги до програми шифрування файлів
1. Графічний інтерфейс користувача з можливістю вводу ключа для
шифрування та діалогу вибору довільного файлу, який буде шифруватись
або розшифровуватись.
2. Здатність працювати з файлами довільного розміру та формату.
3. В процесі шифрування, повинен відображатись індикатор прогресу (0-100%)
та час, який пройшов від запуску шифрування.
4. По завершенні шифрування повинне бути відображене вікно з інформацією
про розмір зашифрованого файла, його назву та час, затрачений на
шифрування.
5. Необхідно запобігти «підвисанню» вікна при здійсненні операції шифрування
(шифрування здійснюватись в окремому обчислювальному потоці за
допомогою класу BackgroundWorker) .
6. Коректна обробка виключень, що можуть виникати під час роботи.
7. Для успішного виконання роботи необхідно ознайомитися з наступними
темами: асинхронні операції (клас BackgroundWorker), класи File, FileStream,
Timer, DateTime, OpenFileDialog, SaveFileDialog, обробка виключень.
Вимоги до менеджера процесів
1. Можливість запуску програм: Калькулятор, Microsoft Word та ще трьох на
ваш вибір.
2. Перегляд список запущених процесів з інформацією про обсяг оперативної
пам'яті, виділений під процес, часу, коли був запущений процес, пріоритет
процесу, кількість потоків, які запущені процесом. Відобразити у вигляді
таблиці.
3. Можливість зупинки вибраного процесу.
4. Можливість зміни пріоритету вибраного процесу.
B. Запушити виконану роботу у репозиторій на git.ztu.edu.ua або GitLab з назвою
DotNetLab3 та надати доступ до репозиторію викладачеві, який проводить
практичні заняття:
 Власенко Олег Васильович (wellwisher.vls@gmail.com) Савчук Іван Олександрович (kipz_sio@ztu.edu.ua) Чижмотря Олексій Володимирович (4ov.ztu@gmail.com)Лабораторна робота №3
Тема: Багатопотоковість у C#.
Мета роботи: навчитися працювати з потоками та
процесами у мові C#.
Виділений час: 18 годин (6 годин практичних робіт та 12
годин самостійної роботи).
Завдання:
A. Розробити дві програми:
1) шифрування файлів;
2) менеджер процесів.
Програмний код має бути написаний максимально універсально без
прив’язки у класах, що реалізують основний функціонал до інтерфейсу.
Передбачається, що дані класи потрібно буде використовувати в наступних
лабораторних роботах.
Вимоги до програми шифрування файлів
1. Графічний інтерфейс користувача з можливістю вводу ключа для
шифрування та діалогу вибору довільного файлу, який буде шифруватись
або розшифровуватись.
2. Здатність працювати з файлами довільного розміру та формату.
3. В процесі шифрування, повинен відображатись індикатор прогресу (0-100%)
та час, який пройшов від запуску шифрування.
4. По завершенні шифрування повинне бути відображене вікно з інформацією
про розмір зашифрованого файла, його назву та час, затрачений на
шифрування.
5. Необхідно запобігти «підвисанню» вікна при здійсненні операції шифрування
(шифрування здійснюватись в окремому обчислювальному потоці за
допомогою класу BackgroundWorker) .
6. Коректна обробка виключень, що можуть виникати під час роботи.
7. Для успішного виконання роботи необхідно ознайомитися з наступними
темами: асинхронні операції (клас BackgroundWorker), класи File, FileStream,
Timer, DateTime, OpenFileDialog, SaveFileDialog, обробка виключень.
Вимоги до менеджера процесів
1. Можливість запуску програм: Калькулятор, Microsoft Word та ще трьох на
ваш вибір.
2. Перегляд список запущених процесів з інформацією про обсяг оперативної
пам'яті, виділений під процес, часу, коли був запущений процес, пріоритет
процесу, кількість потоків, які запущені процесом. Відобразити у вигляді
таблиці.
3. Можливість зупинки вибраного процесу.
4. Можливість зміни пріоритету вибраного процесу.
B. Запушити виконану роботу у репозиторій на git.ztu.edu.ua або GitLab з назвою
DotNetLab3 та надати доступ до репозиторію викладачеві, який проводить
практичні заняття:
 Власенко Олег Васильович (wellwisher.vls@gmail.com) Савчук Іван Олександрович (kipz_sio@ztu.edu.ua) Чижмотря Олексій Володимирович (4ov.ztu@gmail.com)Лабораторна робота №3
Тема: Багатопотоковість у C#.
Мета роботи: навчитися працювати з потоками та
процесами у мові C#.
Виділений час: 18 годин (6 годин практичних робіт та 12
годин самостійної роботи).
Завдання:
A. Розробити дві програми:
1) шифрування файлів;
2) менеджер процесів.
Програмний код має бути написаний максимально універсально без
прив’язки у класах, що реалізують основний функціонал до інтерфейсу.
Передбачається, що дані класи потрібно буде використовувати в наступних
лабораторних роботах.
Вимоги до програми шифрування файлів
1. Графічний інтерфейс користувача з можливістю вводу ключа для
шифрування та діалогу вибору довільного файлу, який буде шифруватись
або розшифровуватись.
2. Здатність працювати з файлами довільного розміру та формату.
3. В процесі шифрування, повинен відображатись індикатор прогресу (0-100%)
та час, який пройшов від запуску шифрування.
4. По завершенні шифрування повинне бути відображене вікно з інформацією
про розмір зашифрованого файла, його назву та час, затрачений на
шифрування.
5. Необхідно запобігти «підвисанню» вікна при здійсненні операції шифрування
(шифрування здійснюватись в окремому обчислювальному потоці за
допомогою класу BackgroundWorker) .
6. Коректна обробка виключень, що можуть виникати під час роботи.
7. Для успішного виконання роботи необхідно ознайомитися з наступними
темами: асинхронні операції (клас BackgroundWorker), класи File, FileStream,
Timer, DateTime, OpenFileDialog, SaveFileDialog, обробка виключень.
Вимоги до менеджера процесів
1. Можливість запуску програм: Калькулятор, Microsoft Word та ще трьох на
ваш вибір.
2. Перегляд список запущених процесів з інформацією про обсяг оперативної
пам'яті, виділений під процес, часу, коли був запущений процес, пріоритет
процесу, кількість потоків, які запущені процесом. Відобразити у вигляді
таблиці.
3. Можливість зупинки вибраного процесу.
4. Можливість зміни пріоритету вибраного процесу.
B. Запушити виконану роботу у репозиторій на git.ztu.edu.ua або GitLab з назвою
DotNetLab3 та надати доступ до репозиторію викладачеві, який проводить
практичні заняття:
 Власенко Олег Васильович (wellwisher.vls@gmail.com) Савчук Іван Олександрович (kipz_sio@ztu.edu.ua) Чижмотря Олексій Володимирович (4ov.ztu@gmail.com)Лабораторна робота №3
Тема: Багатопотоковість у C#.
Мета роботи: навчитися працювати з потоками та
процесами у мові C#.
Виділений час: 18 годин (6 годин практичних робіт та 12
годин самостійної роботи).
Завдання:
A. Розробити дві програми:
1) шифрування файлів;
2) менеджер процесів.
Програмний код має бути написаний максимально універсально без
прив’язки у класах, що реалізують основний функціонал до інтерфейсу.
Передбачається, що дані класи потрібно буде використовувати в наступних
лабораторних роботах.
Вимоги до програми шифрування файлів
1. Графічний інтерфейс користувача з можливістю вводу ключа для
шифрування та діалогу вибору довільного файлу, який буде шифруватись
або розшифровуватись.
2. Здатність працювати з файлами довільного розміру та формату.
3. В процесі шифрування, повинен відображатись індикатор прогресу (0-100%)
та час, який пройшов від запуску шифрування.
4. По завершенні шифрування повинне бути відображене вікно з інформацією
про розмір зашифрованого файла, його назву та час, затрачений на
шифрування.
5. Необхідно запобігти «підвисанню» вікна при здійсненні операції шифрування
(шифрування здійснюватись в окремому обчислювальному потоці за
допомогою класу BackgroundWorker) .
6. Коректна обробка виключень, що можуть виникати під час роботи.
7. Для успішного виконання роботи необхідно ознайомитися з наступними
темами: асинхронні операції (клас BackgroundWorker), класи File, FileStream,
Timer, DateTime, OpenFileDialog, SaveFileDialog, обробка виключень.
Вимоги до менеджера процесів
1. Можливість запуску програм: Калькулятор, Microsoft Word та ще трьох на
ваш вибір.
2. Перегляд список запущених процесів з інформацією про обсяг оперативної
пам'яті, виділений під процес, часу, коли був запущений процес, пріоритет
процесу, кількість потоків, які запущені процесом. Відобразити у вигляді
таблиці.
3. Можливість зупинки вибраного процесу.
4. Можливість зміни пріоритету вибраного процесу.
B. Запушити виконану роботу у репозиторій на git.ztu.edu.ua або GitLab з назвою
DotNetLab3 та надати доступ до репозиторію викладачеві, який проводить
практичні заняття:
 Власенко Олег Васильович (wellwisher.vls@gmail.com) Савчук Іван Олександрович (kipz_sio@ztu.edu.ua) Чижмотря Олексій Володимирович (4ov.ztu@gmail.com)Лабораторна робота №3
Тема: Багатопотоковість у C#.
Мета роботи: навчитися працювати з потоками та
процесами у мові C#.
Виділений час: 18 годин (6 годин практичних робіт та 12
годин самостійної роботи).
Завдання:
A. Розробити дві програми:
1) шифрування файлів;
2) менеджер процесів.
Програмний код має бути написаний максимально універсально без
прив’язки у класах, що реалізують основний функціонал до інтерфейсу.
Передбачається, що дані класи потрібно буде використовувати в наступних
лабораторних роботах.
Вимоги до програми шифрування файлів
1. Графічний інтерфейс користувача з можливістю вводу ключа для
шифрування та діалогу вибору довільного файлу, який буде шифруватись
або розшифровуватись.
2. Здатність працювати з файлами довільного розміру та формату.
3. В процесі шифрування, повинен відображатись індикатор прогресу (0-100%)
та час, який пройшов від запуску шифрування.
4. По завершенні шифрування повинне бути відображене вікно з інформацією
про розмір зашифрованого файла, його назву та час, затрачений на
шифрування.
5. Необхідно запобігти «підвисанню» вікна при здійсненні операції шифрування
(шифрування здійснюватись в окремому обчислювальному потоці за
допомогою класу BackgroundWorker) .
6. Коректна обробка виключень, що можуть виникати під час роботи.
7. Для успішного виконання роботи необхідно ознайомитися з наступними
темами: асинхронні операції (клас BackgroundWorker), класи File, FileStream,
Timer, DateTime, OpenFileDialog, SaveFileDialog, обробка виключень.
Вимоги до менеджера процесів
1. Можливість запуску програм: Калькулятор, Microsoft Word та ще трьох на
ваш вибір.
2. Перегляд список запущених процесів з інформацією про обсяг оперативної
пам'яті, виділений під процес, часу, коли був запущений процес, пріоритет
процесу, кількість потоків, які запущені процесом. Відобразити у вигляді
таблиці.
3. Можливість зупинки вибраного процесу.
4. Можливість зміни пріоритету вибраного процесу.
B. Запушити виконану роботу у репозиторій на git.ztu.edu.ua або GitLab з назвою
DotNetLab3 та надати доступ до репозиторію викладачеві, який проводить
практичні заняття:
 Власенко Олег Васильович (wellwisher.vls@gmail.com) Савчук Іван Олександрович (kipz_sio@ztu.edu.ua) Чижмотря Олексій Володимирович (4ov.ztu@gmail.com)Лабораторна робота №3
Тема: Багатопотоковість у C#.
Мета роботи: навчитися працювати з потоками та
процесами у мові C#.
Виділений час: 18 годин (6 годин практичних робіт та 12
годин самостійної роботи).
Завдання:
A. Розробити дві програми:
1) шифрування файлів;
2) менеджер процесів.
Програмний код має бути написаний максимально універсально без
прив’язки у класах, що реалізують основний функціонал до інтерфейсу.
Передбачається, що дані класи потрібно буде використовувати в наступних
лабораторних роботах.
Вимоги до програми шифрування файлів
1. Графічний інтерфейс користувача з можливістю вводу ключа для
шифрування та діалогу вибору довільного файлу, який буде шифруватись
або розшифровуватись.
2. Здатність працювати з файлами довільного розміру та формату.
3. В процесі шифрування, повинен відображатись індикатор прогресу (0-100%)
та час, який пройшов від запуску шифрування.
4. По завершенні шифрування повинне бути відображене вікно з інформацією
про розмір зашифрованого файла, його назву та час, затрачений на
шифрування.
5. Необхідно запобігти «підвисанню» вікна при здійсненні операції шифрування
(шифрування здійснюватись в окремому обчислювальному потоці за
допомогою класу BackgroundWorker) .
6. Коректна обробка виключень, що можуть виникати під час роботи.
7. Для успішного виконання роботи необхідно ознайомитися з наступними
темами: асинхронні операції (клас BackgroundWorker), класи File, FileStream,
Timer, DateTime, OpenFileDialog, SaveFileDialog, обробка виключень.
Вимоги до менеджера процесів
1. Можливість запуску програм: Калькулятор, Microsoft Word та ще трьох на
ваш вибір.
2. Перегляд список запущених процесів з інформацією про обсяг оперативної
пам'яті, виділений під процес, часу, коли був запущений процес, пріоритет
процесу, кількість потоків, які запущені процесом. Відобразити у вигляді
таблиці.
3. Можливість зупинки вибраного процесу.
4. Можливість зміни пріоритету вибраного процесу.
B. Запушити виконану роботу у репозиторій на git.ztu.edu.ua або GitLab з назвою
DotNetLab3 та надати доступ до репозиторію викладачеві, який проводить
практичні заняття:
 Власенко Олег Васильович (wellwisher.vls@gmail.com) Савчук Іван Олександрович (kipz_sio@ztu.edu.ua) Чижмотря Олексій Володимирович (4ov.ztu@gmail.com)Лабораторна робота №3
Тема: Багатопотоковість у C#.
Мета роботи: навчитися працювати з потоками та
процесами у мові C#.
Виділений час: 18 годин (6 годин практичних робіт та 12
годин самостійної роботи).
Завдання:
A. Розробити дві програми:
1) шифрування файлів;
2) менеджер процесів.
Програмний код має бути написаний максимально універсально без
прив’язки у класах, що реалізують основний функціонал до інтерфейсу.
Передбачається, що дані класи потрібно буде використовувати в наступних
лабораторних роботах.
Вимоги до програми шифрування файлів
1. Графічний інтерфейс користувача з можливістю вводу ключа для
шифрування та діалогу вибору довільного файлу, який буде шифруватись
або розшифровуватись.
2. Здатність працювати з файлами довільного розміру та формату.
3. В процесі шифрування, повинен відображатись індикатор прогресу (0-100%)
та час, який пройшов від запуску шифрування.
4. По завершенні шифрування повинне бути відображене вікно з інформацією
про розмір зашифрованого файла, його назву та час, затрачений на
шифрування.
5. Необхідно запобігти «підвисанню» вікна при здійсненні операції шифрування
(шифрування здійснюватись в окремому обчислювальному потоці за
допомогою класу BackgroundWorker) .
6. Коректна обробка виключень, що можуть виникати під час роботи.
7. Для успішного виконання роботи необхідно ознайомитися з наступними
темами: асинхронні операції (клас BackgroundWorker), класи File, FileStream,
Timer, DateTime, OpenFileDialog, SaveFileDialog, обробка виключень.
Вимоги до менеджера процесів
1. Можливість запуску програм: Калькулятор, Microsoft Word та ще трьох на
ваш вибір.
2. Перегляд список запущених процесів з інформацією про обсяг оперативної
пам'яті, виділений під процес, часу, коли був запущений процес, пріоритет
процесу, кількість потоків, які запущені процесом. Відобразити у вигляді
таблиці.
3. Можливість зупинки вибраного процесу.
4. Можливість зміни пріоритету вибраного процесу.
B. Запушити виконану роботу у репозиторій на git.ztu.edu.ua або GitLab з назвою
DotNetLab3 та надати доступ до репозиторію викладачеві, який проводить
практичні заняття:
 Власенко Олег Васильович (wellwisher.vls@gmail.com) Савчук Іван Олександрович (kipz_sio@ztu.edu.ua) Чижмотря Олексій Володимирович (4ov.ztu@gmail.com)Лабораторна робота №3
Тема: Багатопотоковість у C#.
Мета роботи: навчитися працювати з потоками та
процесами у мові C#.
Виділений час: 18 годин (6 годин практичних робіт та 12
годин самостійної роботи).
Завдання:
A. Розробити дві програми:
1) шифрування файлів;
2) менеджер процесів.
Програмний код має бути написаний максимально універсально без
прив’язки у класах, що реалізують основний функціонал до інтерфейсу.
Передбачається, що дані класи потрібно буде використовувати в наступних
лабораторних роботах.
Вимоги до програми шифрування файлів
1. Графічний інтерфейс користувача з можливістю вводу ключа для
шифрування та діалогу вибору довільного файлу, який буде шифруватись
або розшифровуватись.
2. Здатність працювати з файлами довільного розміру та формату.
3. В процесі шифрування, повинен відображатись індикатор прогресу (0-100%)
та час, який пройшов від запуску шифрування.
4. По завершенні шифрування повинне бути відображене вікно з інформацією
про розмір зашифрованого файла, його назву та час, затрачений на
шифрування.
5. Необхідно запобігти «підвисанню» вікна при здійсненні операції шифрування
(шифрування здійснюватись в окремому обчислювальному потоці за
допомогою класу BackgroundWorker) .
6. Коректна обробка виключень, що можуть виникати під час роботи.
7. Для успішного виконання роботи необхідно ознайомитися з наступними
темами: асинхронні операції (клас BackgroundWorker), класи File, FileStream,
Timer, DateTime, OpenFileDialog, SaveFileDialog, обробка виключень.
Вимоги до менеджера процесів
1. Можливість запуску програм: Калькулятор, Microsoft Word та ще трьох на
ваш вибір.
2. Перегляд список запущених процесів з інформацією про обсяг оперативної
пам'яті, виділений під процес, часу, коли був запущений процес, пріоритет
процесу, кількість потоків, які запущені процесом. Відобразити у вигляді
таблиці.
3. Можливість зупинки вибраного процесу.
4. Можливість зміни пріоритету вибраного процесу.
B. Запушити виконану роботу у репозиторій на git.ztu.edu.ua або GitLab з назвою
DotNetLab3 та надати доступ до репозиторію викладачеві, який проводить
практичні заняття:
 Власенко Олег Васильович (wellwisher.vls@gmail.com) Савчук Іван Олександрович (kipz_sio@ztu.edu.ua) Чижмотря Олексій Володимирович (4ov.ztu@gmail.com)Лабораторна робота №3
Тема: Багатопотоковість у C#.
Мета роботи: навчитися працювати з потоками та
процесами у мові C#.
Виділений час: 18 годин (6 годин практичних робіт та 12
годин самостійної роботи).
Завдання:
A. Розробити дві програми:
1) шифрування файлів;
2) менеджер процесів.
Програмний код має бути написаний максимально універсально без
прив’язки у класах, що реалізують основний функціонал до інтерфейсу.
Передбачається, що дані класи потрібно буде використовувати в наступних
лабораторних роботах.
Вимоги до програми шифрування файлів
1. Графічний інтерфейс користувача з можливістю вводу ключа для
шифрування та діалогу вибору довільного файлу, який буде шифруватись
або розшифровуватись.
2. Здатність працювати з файлами довільного розміру та формату.
3. В процесі шифрування, повинен відображатись індикатор прогресу (0-100%)
та час, який пройшов від запуску шифрування.
4. По завершенні шифрування повинне бути відображене вікно з інформацією
про розмір зашифрованого файла, його назву та час, затрачений на
шифрування.
5. Необхідно запобігти «підвисанню» вікна при здійсненні операції шифрування
(шифрування здійснюватись в окремому обчислювальному потоці за
допомогою класу BackgroundWorker) .
6. Коректна обробка виключень, що можуть виникати під час роботи.
7. Для успішного виконання роботи необхідно ознайомитися з наступними
темами: асинхронні операції (клас BackgroundWorker), класи File, FileStream,
Timer, DateTime, OpenFileDialog, SaveFileDialog, обробка виключень.
Вимоги до менеджера процесів
1. Можливість запуску програм: Калькулятор, Microsoft Word та ще трьох на
ваш вибір.
2. Перегляд список запущених процесів з інформацією про обсяг оперативної
пам'яті, виділений під процес, часу, коли був запущений процес, пріоритет
процесу, кількість потоків, які запущені процесом. Відобразити у вигляді
таблиці.
3. Можливість зупинки вибраного процесу.
4. Можливість зміни пріоритету вибраного процесу.
B. Запушити виконану роботу у репозиторій на git.ztu.edu.ua або GitLab з назвою
DotNetLab3 та надати доступ до репозиторію викладачеві, який проводить
практичні заняття:
 Власенко Олег Васильович (wellwisher.vls@gmail.com) Савчук Іван Олександрович (kipz_sio@ztu.edu.ua) Чижмотря Олексій Володимирович (4ov.ztu@gmail.com)Лабораторна робота №3
Тема: Багатопотоковість у C#.
Мета роботи: навчитися працювати з потоками та
процесами у мові C#.
Виділений час: 18 годин (6 годин практичних робіт та 12
годин самостійної роботи).
Завдання:
A. Розробити дві програми:
1) шифрування файлів;
2) менеджер процесів.
Програмний код має бути написаний максимально універсально без
прив’язки у класах, що реалізують основний функціонал до інтерфейсу.
Передбачається, що дані класи потрібно буде використовувати в наступних
лабораторних роботах.
Вимоги до програми шифрування файлів
1. Графічний інтерфейс користувача з можливістю вводу ключа для
шифрування та діалогу вибору довільного файлу, який буде шифруватись
або розшифровуватись.
2. Здатність працювати з файлами довільного розміру та формату.
3. В процесі шифрування, повинен відображатись індикатор прогресу (0-100%)
та час, який пройшов від запуску шифрування.
4. По завершенні шифрування повинне бути відображене вікно з інформацією
про розмір зашифрованого файла, його назву та час, затрачений на
шифрування.
5. Необхідно запобігти «підвисанню» вікна при здійсненні операції шифрування
(шифрування здійснюватись в окремому обчислювальному потоці за
допомогою класу BackgroundWorker) .
6. Коректна обробка виключень, що можуть виникати під час роботи.
7. Для успішного виконання роботи необхідно ознайомитися з наступними
темами: асинхронні операції (клас BackgroundWorker), класи File, FileStream,
Timer, DateTime, OpenFileDialog, SaveFileDialog, обробка виключень.
Вимоги до менеджера процесів
1. Можливість запуску програм: Калькулятор, Microsoft Word та ще трьох на
ваш вибір.
2. Перегляд список запущених процесів з інформацією про обсяг оперативної
пам'яті, виділений під процес, часу, коли був запущений процес, пріоритет
процесу, кількість потоків, які запущені процесом. Відобразити у вигляді
таблиці.
3. Можливість зупинки вибраного процесу.
4. Можливість зміни пріоритету вибраного процесу.
B. Запушити виконану роботу у репозиторій на git.ztu.edu.ua або GitLab з назвою
DotNetLab3 та надати доступ до репозиторію викладачеві, який проводить
практичні заняття:
 Власенко Олег Васильович (wellwisher.vls@gmail.com) Савчук Іван Олександрович (kipz_sio@ztu.edu.ua) Чижмотря Олексій Володимирович (4ov.ztu@gmail.com)Лабораторна робота №3
Тема: Багатопотоковість у C#.
Мета роботи: навчитися працювати з потоками та
процесами у мові C#.
Виділений час: 18 годин (6 годин практичних робіт та 12
годин самостійної роботи).
Завдання:
A. Розробити дві програми:
1) шифрування файлів;
2) менеджер процесів.
Програмний код має бути написаний максимально універсально без
прив’язки у класах, що реалізують основний функціонал до інтерфейсу.
Передбачається, що дані класи потрібно буде використовувати в наступних
лабораторних роботах.
Вимоги до програми шифрування файлів
1. Графічний інтерфейс користувача з можливістю вводу ключа для
шифрування та діалогу вибору довільного файлу, який буде шифруватись
або розшифровуватись.
2. Здатність працювати з файлами довільного розміру та формату.
3. В процесі шифрування, повинен відображатись індикатор прогресу (0-100%)
та час, який пройшов від запуску шифрування.
4. По завершенні шифрування повинне бути відображене вікно з інформацією
про розмір зашифрованого файла, його назву та час, затрачений на
шифрування.
5. Необхідно запобігти «підвисанню» вікна при здійсненні операції шифрування
(шифрування здійснюватись в окремому обчислювальному потоці за
допомогою класу BackgroundWorker) .
6. Коректна обробка виключень, що можуть виникати під час роботи.
7. Для успішного виконання роботи необхідно ознайомитися з наступними
темами: асинхронні операції (клас BackgroundWorker), класи File, FileStream,
Timer, DateTime, OpenFileDialog, SaveFileDialog, обробка виключень.
Вимоги до менеджера процесів
1. Можливість запуску програм: Калькулятор, Microsoft Word та ще трьох на
ваш вибір.
2. Перегляд список запущених процесів з інформацією про обсяг оперативної
пам'яті, виділений під процес, часу, коли був запущений процес, пріоритет
процесу, кількість потоків, які запущені процесом. Відобразити у вигляді
таблиці.
3. Можливість зупинки вибраного процесу.
4. Можливість зміни пріоритету вибраного процесу.
B. Запушити виконану роботу у репозиторій на git.ztu.edu.ua або GitLab з назвою
DotNetLab3 та надати доступ до репозиторію викладачеві, який проводить
практичні заняття:
 Власенко Олег Васильович (wellwisher.vls@gmail.com) Савчук Іван Олександрович (kipz_sio@ztu.edu.ua) Чижмотря Олексій Володимирович (4ov.ztu@gmail.com)Лабораторна робота №3
Тема: Багатопотоковість у C#.
Мета роботи: навчитися працювати з потоками та
процесами у мові C#.
Виділений час: 18 годин (6 годин практичних робіт та 12
годин самостійної роботи).
Завдання:
A. Розробити дві програми:
1) шифрування файлів;
2) менеджер процесів.
Програмний код має бути написаний максимально універсально без
прив’язки у класах, що реалізують основний функціонал до інтерфейсу.
Передбачається, що дані класи потрібно буде використовувати в наступних
лабораторних роботах.
Вимоги до програми шифрування файлів
1. Графічний інтерфейс користувача з можливістю вводу ключа для
шифрування та діалогу вибору довільного файлу, який буде шифруватись
або розшифровуватись.
2. Здатність працювати з файлами довільного розміру та формату.
3. В процесі шифрування, повинен відображатись індикатор прогресу (0-100%)
та час, який пройшов від запуску шифрування.
4. По завершенні шифрування повинне бути відображене вікно з інформацією
про розмір зашифрованого файла, його назву та час, затрачений на
шифрування.
5. Необхідно запобігти «підвисанню» вікна при здійсненні операції шифрування
(шифрування здійснюватись в окремому обчислювальному потоці за
допомогою класу BackgroundWorker) .
6. Коректна обробка виключень, що можуть виникати під час роботи.
7. Для успішного виконання роботи необхідно ознайомитися з наступними
темами: асинхронні операції (клас BackgroundWorker), класи File, FileStream,
Timer, DateTime, OpenFileDialog, SaveFileDialog, обробка виключень.
Вимоги до менеджера процесів
1. Можливість запуску програм: Калькулятор, Microsoft Word та ще трьох на
ваш вибір.
2. Перегляд список запущених процесів з інформацією про обсяг оперативної
пам'яті, виділений під процес, часу, коли був запущений процес, пріоритет
процесу, кількість потоків, які запущені процесом. Відобразити у вигляді
таблиці.
3. Можливість зупинки вибраного процесу.
4. Можливість зміни пріоритету вибраного процесу.
B. Запушити виконану роботу у репозиторій на git.ztu.edu.ua або GitLab з назвою
DotNetLab3 та надати доступ до репозиторію викладачеві, який проводить
практичні заняття:
 Власенко Олег Васильович (wellwisher.vls@gmail.com) Савчук Іван Олександрович (kipz_sio@ztu.edu.ua) Чижмотря Олексій Володимирович (4ov.ztu@gmail.com)Лабораторна робота №3
Тема: Багатопотоковість у C#.
Мета роботи: навчитися працювати з потоками та
процесами у мові C#.
Виділений час: 18 годин (6 годин практичних робіт та 12
годин самостійної роботи).
Завдання:
A. Розробити дві програми:
1) шифрування файлів;
2) менеджер процесів.
Програмний код має бути написаний максимально універсально без
прив’язки у класах, що реалізують основний функціонал до інтерфейсу.
Передбачається, що дані класи потрібно буде використовувати в наступних
лабораторних роботах.
Вимоги до програми шифрування файлів
1. Графічний інтерфейс користувача з можливістю вводу ключа для
шифрування та діалогу вибору довільного файлу, який буде шифруватись
або розшифровуватись.
2. Здатність працювати з файлами довільного розміру та формату.
3. В процесі шифрування, повинен відображатись індикатор прогресу (0-100%)
та час, який пройшов від запуску шифрування.
4. По завершенні шифрування повинне бути відображене вікно з інформацією
про розмір зашифрованого файла, його назву та час, затрачений на
шифрування.
5. Необхідно запобігти «підвисанню» вікна при здійсненні операції шифрування
(шифрування здійснюватись в окремому обчислювальному потоці за
допомогою класу BackgroundWorker) .
6. Коректна обробка виключень, що можуть виникати під час роботи.
7. Для успішного виконання роботи необхідно ознайомитися з наступними
темами: асинхронні операції (клас BackgroundWorker), класи File, FileStream,
Timer, DateTime, OpenFileDialog, SaveFileDialog, обробка виключень.
Вимоги до менеджера процесів
1. Можливість запуску програм: Калькулятор, Microsoft Word та ще трьох на
ваш вибір.
2. Перегляд список запущених процесів з інформацією про обсяг оперативної
пам'яті, виділений під процес, часу, коли був запущений процес, пріоритет
процесу, кількість потоків, які запущені процесом. Відобразити у вигляді
таблиці.
3. Можливість зупинки вибраного процесу.
4. Можливість зміни пріоритету вибраного процесу.
B. Запушити виконану роботу у репозиторій на git.ztu.edu.ua або GitLab з назвою
DotNetLab3 та надати доступ до репозиторію викладачеві, який проводить
практичні заняття:
 Власенко Олег Васильович (wellwisher.vls@gmail.com) Савчук Іван Олександрович (kipz_sio@ztu.edu.ua) Чижмотря Олексій Володимирович (4ov.ztu@gmail.com)Лабораторна робота №3
Тема: Багатопотоковість у C#.
Мета роботи: навчитися працювати з потоками та
процесами у мові C#.
Виділений час: 18 годин (6 годин практичних робіт та 12
годин самостійної роботи).
Завдання:
A. Розробити дві програми:
1) шифрування файлів;
2) менеджер процесів.
Програмний код має бути написаний максимально універсально без
прив’язки у класах, що реалізують основний функціонал до інтерфейсу.
Передбачається, що дані класи потрібно буде використовувати в наступних
лабораторних роботах.
Вимоги до програми шифрування файлів
1. Графічний інтерфейс користувача з можливістю вводу ключа для
шифрування та діалогу вибору довільного файлу, який буде шифруватись
або розшифровуватись.
2. Здатність працювати з файлами довільного розміру та формату.
3. В процесі шифрування, повинен відображатись індикатор прогресу (0-100%)
та час, який пройшов від запуску шифрування.
4. По завершенні шифрування повинне бути відображене вікно з інформацією
про розмір зашифрованого файла, його назву та час, затрачений на
шифрування.
5. Необхідно запобігти «підвисанню» вікна при здійсненні операції шифрування
(шифрування здійснюватись в окремому обчислювальному потоці за
допомогою класу BackgroundWorker) .
6. Коректна обробка виключень, що можуть виникати під час роботи.
7. Для успішного виконання роботи необхідно ознайомитися з наступними
темами: асинхронні операції (клас BackgroundWorker), класи File, FileStream,
Timer, DateTime, OpenFileDialog, SaveFileDialog, обробка виключень.
Вимоги до менеджера процесів
1. Можливість запуску програм: Калькулятор, Microsoft Word та ще трьох на
ваш вибір.
2. Перегляд список запущених процесів з інформацією про обсяг оперативної
пам'яті, виділений під процес, часу, коли був запущений процес, пріоритет
процесу, кількість потоків, які запущені процесом. Відобразити у вигляді
таблиці.
3. Можливість зупинки вибраного процесу.
4. Можливість зміни пріоритету вибраного процесу.
B. Запушити виконану роботу у репозиторій на git.ztu.edu.ua або GitLab з назвою
DotNetLab3 та надати доступ до репозиторію викладачеві, який проводить
практичні заняття:
 Власенко Олег Васильович (wellwisher.vls@gmail.com) Савчук Іван Олександрович (kipz_sio@ztu.edu.ua) Чижмотря Олексій Володимирович (4ov.ztu@gmail.com)Лабораторна робота №3
Тема: Багатопотоковість у C#.
Мета роботи: навчитися працювати з потоками та
процесами у мові C#.
Виділений час: 18 годин (6 годин практичних робіт та 12
годин самостійної роботи).
Завдання:
A. Розробити дві програми:
1) шифрування файлів;
2) менеджер процесів.
Програмний код має бути написаний максимально універсально без
прив’язки у класах, що реалізують основний функціонал до інтерфейсу.
Передбачається, що дані класи потрібно буде використовувати в наступних
лабораторних роботах.
Вимоги до програми шифрування файлів
1. Графічний інтерфейс користувача з можливістю вводу ключа для
шифрування та діалогу вибору довільного файлу, який буде шифруватись
або розшифровуватись.
2. Здатність працювати з файлами довільного розміру та формату.
3. В процесі шифрування, повинен відображатись індикатор прогресу (0-100%)
та час, який пройшов від запуску шифрування.
4. По завершенні шифрування повинне бути відображене вікно з інформацією
про розмір зашифрованого файла, його назву та час, затрачений на
шифрування.
5. Необхідно запобігти «підвисанню» вікна при здійсненні операції шифрування
(шифрування здійснюватись в окремому обчислювальному потоці за
допомогою класу BackgroundWorker) .
6. Коректна обробка виключень, що можуть виникати під час роботи.
7. Для успішного виконання роботи необхідно ознайомитися з наступними
темами: асинхронні операції (клас BackgroundWorker), класи File, FileStream,
Timer, DateTime, OpenFileDialog, SaveFileDialog, обробка виключень.
Вимоги до менеджера процесів
1. Можливість запуску програм: Калькулятор, Microsoft Word та ще трьох на
ваш вибір.
2. Перегляд список запущених процесів з інформацією про обсяг оперативної
пам'яті, виділений під процес, часу, коли був запущений процес, пріоритет
процесу, кількість потоків, які запущені процесом. Відобразити у вигляді
таблиці.
3. Можливість зупинки вибраного процесу.
4. Можливість зміни пріоритету вибраного процесу.
B. Запушити виконану роботу у репозиторій на git.ztu.edu.ua або GitLab з назвою
DotNetLab3 та надати доступ до репозиторію викладачеві, який проводить
практичні заняття:
 Власенко Олег Васильович (wellwisher.vls@gmail.com) Савчук Іван Олександрович (kipz_sio@ztu.edu.ua) Чижмотря Олексій Володимирович (4ov.ztu@gmail.com)Лабораторна робота №3
Тема: Багатопотоковість у C#.
Мета роботи: навчитися працювати з потоками та
процесами у мові C#.
Виділений час: 18 годин (6 годин практичних робіт та 12
годин самостійної роботи).
Завдання:
A. Розробити дві програми:
1) шифрування файлів;
2) менеджер процесів.
Програмний код має бути написаний максимально універсально без
прив’язки у класах, що реалізують основний функціонал до інтерфейсу.
Передбачається, що дані класи потрібно буде використовувати в наступних
лабораторних роботах.
Вимоги до програми шифрування файлів
1. Графічний інтерфейс користувача з можливістю вводу ключа для
шифрування та діалогу вибору довільного файлу, який буде шифруватись
або розшифровуватись.
2. Здатність працювати з файлами довільного розміру та формату.
3. В процесі шифрування, повинен відображатись індикатор прогресу (0-100%)
та час, який пройшов від запуску шифрування.
4. По завершенні шифрування повинне бути відображене вікно з інформацією
про розмір зашифрованого файла, його назву та час, затрачений на
шифрування.
5. Необхідно запобігти «підвисанню» вікна при здійсненні операції шифрування
(шифрування здійснюватись в окремому обчислювальному потоці за
допомогою класу BackgroundWorker) .
6. Коректна обробка виключень, що можуть виникати під час роботи.
7. Для успішного виконання роботи необхідно ознайомитися з наступними
темами: асинхронні операції (клас BackgroundWorker), класи File, FileStream,
Timer, DateTime, OpenFileDialog, SaveFileDialog, обробка виключень.
Вимоги до менеджера процесів
1. Можливість запуску програм: Калькулятор, Microsoft Word та ще трьох на
ваш вибір.
2. Перегляд список запущених процесів з інформацією про обсяг оперативної
пам'яті, виділений під процес, часу, коли був запущений процес, пріоритет
процесу, кількість потоків, які запущені процесом. Відобразити у вигляді
таблиці.
3. Можливість зупинки вибраного процесу.
4. Можливість зміни пріоритету вибраного процесу.
B. Запушити виконану роботу у репозиторій на git.ztu.edu.ua або GitLab з назвою
DotNetLab3 та надати доступ до репозиторію викладачеві, який проводить
практичні заняття:
 Власенко Олег Васильович (wellwisher.vls@gmail.com) Савчук Іван Олександрович (kipz_sio@ztu.edu.ua) Чижмотря Олексій Володимирович (4ov.ztu@gmail.com)Лабораторна робота №3
Тема: Багатопотоковість у C#.
Мета роботи: навчитися працювати з потоками та
процесами у мові C#.
Виділений час: 18 годин (6 годин практичних робіт та 12
годин самостійної роботи).
Завдання:
A. Розробити дві програми:
1) шифрування файлів;
2) менеджер процесів.
Програмний код має бути написаний максимально універсально без
прив’язки у класах, що реалізують основний функціонал до інтерфейсу.
Передбачається, що дані класи потрібно буде використовувати в наступних
лабораторних роботах.
Вимоги до програми шифрування файлів
1. Графічний інтерфейс користувача з можливістю вводу ключа для
шифрування та діалогу вибору довільного файлу, який буде шифруватись
або розшифровуватись.
2. Здатність працювати з файлами довільного розміру та формату.
3. В процесі шифрування, повинен відображатись індикатор прогресу (0-100%)
та час, який пройшов від запуску шифрування.
4. По завершенні шифрування повинне бути відображене вікно з інформацією
про розмір зашифрованого файла, його назву та час, затрачений на
шифрування.
5. Необхідно запобігти «підвисанню» вікна при здійсненні операції шифрування
(шифрування здійснюватись в окремому обчислювальному потоці за
допомогою класу BackgroundWorker) .
6. Коректна обробка виключень, що можуть виникати під час роботи.
7. Для успішного виконання роботи необхідно ознайомитися з наступними
темами: асинхронні операції (клас BackgroundWorker), класи File, FileStream,
Timer, DateTime, OpenFileDialog, SaveFileDialog, обробка виключень.
Вимоги до менеджера процесів
1. Можливість запуску програм: Калькулятор, Microsoft Word та ще трьох на
ваш вибір.
2. Перегляд список запущених процесів з інформацією про обсяг оперативної
пам'яті, виділений під процес, часу, коли був запущений процес, пріоритет
процесу, кількість потоків, які запущені процесом. Відобразити у вигляді
таблиці.
3. Можливість зупинки вибраного процесу.
4. Можливість зміни пріоритету вибраного процесу.
B. Запушити виконану роботу у репозиторій на git.ztu.edu.ua або GitLab з назвою
DotNetLab3 та надати доступ до репозиторію викладачеві, який проводить
практичні заняття:
 Власенко Олег Васильович (wellwisher.vls@gmail.com) Савчук Іван Олександрович (kipz_sio@ztu.edu.ua) Чижмотря Олексій Володимирович (4ov.ztu@gmail.com)Лабораторна робота №3
Тема: Багатопотоковість у C#.
Мета роботи: навчитися працювати з потоками та
процесами у мові C#.
Виділений час: 18 годин (6 годин практичних робіт та 12
годин самостійної роботи).
Завдання:
A. Розробити дві програми:
1) шифрування файлів;
2) менеджер процесів.
Програмний код має бути написаний максимально універсально без
прив’язки у класах, що реалізують основний функціонал до інтерфейсу.
Передбачається, що дані класи потрібно буде використовувати в наступних
лабораторних роботах.
Вимоги до програми шифрування файлів
1. Графічний інтерфейс користувача з можливістю вводу ключа для
шифрування та діалогу вибору довільного файлу, який буде шифруватись
або розшифровуватись.
2. Здатність працювати з файлами довільного розміру та формату.
3. В процесі шифрування, повинен відображатись індикатор прогресу (0-100%)
та час, який пройшов від запуску шифрування.
4. По завершенні шифрування повинне бути відображене вікно з інформацією
про розмір зашифрованого файла, його назву та час, затрачений на
шифрування.
5. Необхідно запобігти «підвисанню» вікна при здійсненні операції шифрування
(шифрування здійснюватись в окремому обчислювальному потоці за
допомогою класу BackgroundWorker) .
6. Коректна обробка виключень, що можуть виникати під час роботи.
7. Для успішного виконання роботи необхідно ознайомитися з наступними
темами: асинхронні операції (клас BackgroundWorker), класи File, FileStream,
Timer, DateTime, OpenFileDialog, SaveFileDialog, обробка виключень.
Вимоги до менеджера процесів
1. Можливість запуску програм: Калькулятор, Microsoft Word та ще трьох на
ваш вибір.
2. Перегляд список запущених процесів з інформацією про обсяг оперативної
пам'яті, виділений під процес, часу, коли був запущений процес, пріоритет
процесу, кількість потоків, які запущені процесом. Відобразити у вигляді
таблиці.
3. Можливість зупинки вибраного процесу.
4. Можливість зміни пріоритету вибраного процесу.
B. Запушити виконану роботу у репозиторій на git.ztu.edu.ua або GitLab з назвою
DotNetLab3 та надати доступ до репозиторію викладачеві, який проводить
практичні заняття:
 Власенко Олег Васильович (wellwisher.vls@gmail.com) Савчук Іван Олександрович (kipz_sio@ztu.edu.ua) Чижмотря Олексій Володимирович (4ov.ztu@gmail.com)Лабораторна робота №3
Тема: Багатопотоковість у C#.
Мета роботи: навчитися працювати з потоками та
процесами у мові C#.
Виділений час: 18 годин (6 годин практичних робіт та 12
годин самостійної роботи).
Завдання:
A. Розробити дві програми:
1) шифрування файлів;
2) менеджер процесів.
Програмний код має бути написаний максимально універсально без
прив’язки у класах, що реалізують основний функціонал до інтерфейсу.
Передбачається, що дані класи потрібно буде використовувати в наступних
лабораторних роботах.
Вимоги до програми шифрування файлів
1. Графічний інтерфейс користувача з можливістю вводу ключа для
шифрування та діалогу вибору довільного файлу, який буде шифруватись
або розшифровуватись.
2. Здатність працювати з файлами довільного розміру та формату.
3. В процесі шифрування, повинен відображатись індикатор прогресу (0-100%)
та час, який пройшов від запуску шифрування.
4. По завершенні шифрування повинне бути відображене вікно з інформацією
про розмір зашифрованого файла, його назву та час, затрачений на
шифрування.
5. Необхідно запобігти «підвисанню» вікна при здійсненні операції шифрування
(шифрування здійснюватись в окремому обчислювальному потоці за
допомогою класу BackgroundWorker) .
6. Коректна обробка виключень, що можуть виникати під час роботи.
7. Для успішного виконання роботи необхідно ознайомитися з наступними
темами: асинхронні операції (клас BackgroundWorker), класи File, FileStream,
Timer, DateTime, OpenFileDialog, SaveFileDialog, обробка виключень.
Вимоги до менеджера процесів
1. Можливість запуску програм: Калькулятор, Microsoft Word та ще трьох на
ваш вибір.
2. Перегляд список запущених процесів з інформацією про обсяг оперативної
пам'яті, виділений під процес, часу, коли був запущений процес, пріоритет
процесу, кількість потоків, які запущені процесом. Відобразити у вигляді
таблиці.
3. Можливість зупинки вибраного процесу.
4. Можливість зміни пріоритету вибраного процесу.
B. Запушити виконану роботу у репозиторій на git.ztu.edu.ua або GitLab з назвою
DotNetLab3 та надати доступ до репозиторію викладачеві, який проводить
практичні заняття:
 Власенко Олег Васильович (wellwisher.vls@gmail.com) Савчук Іван Олександрович (kipz_sio@ztu.edu.ua) Чижмотря Олексій Володимирович (4ov.ztu@gmail.com)Лабораторна робота №3
Тема: Багатопотоковість у C#.
Мета роботи: навчитися працювати з потоками та
процесами у мові C#.
Виділений час: 18 годин (6 годин практичних робіт та 12
годин самостійної роботи).
Завдання:
A. Розробити дві програми:
1) шифрування файлів;
2) менеджер процесів.
Програмний код має бути написаний максимально універсально без
прив’язки у класах, що реалізують основний функціонал до інтерфейсу.
Передбачається, що дані класи потрібно буде використовувати в наступних
лабораторних роботах.
Вимоги до програми шифрування файлів
1. Графічний інтерфейс користувача з можливістю вводу ключа для
шифрування та діалогу вибору довільного файлу, який буде шифруватись
або розшифровуватись.
2. Здатність працювати з файлами довільного розміру та формату.
3. В процесі шифрування, повинен відображатись індикатор прогресу (0-100%)
та час, який пройшов від запуску шифрування.
4. По завершенні шифрування повинне бути відображене вікно з інформацією
про розмір зашифрованого файла, його назву та час, затрачений на
шифрування.
5. Необхідно запобігти «підвисанню» вікна при здійсненні операції шифрування
(шифрування здійснюватись в окремому обчислювальному потоці за
допомогою класу BackgroundWorker) .
6. Коректна обробка виключень, що можуть виникати під час роботи.
7. Для успішного виконання роботи необхідно ознайомитися з наступними
темами: асинхронні операції (клас BackgroundWorker), класи File, FileStream,
Timer, DateTime, OpenFileDialog, SaveFileDialog, обробка виключень.
Вимоги до менеджера процесів
1. Можливість запуску програм: Калькулятор, Microsoft Word та ще трьох на
ваш вибір.
2. Перегляд список запущених процесів з інформацією про обсяг оперативної
пам'яті, виділений під процес, часу, коли був запущений процес, пріоритет
процесу, кількість потоків, які запущені процесом. Відобразити у вигляді
таблиці.
3. Можливість зупинки вибраного процесу.
4. Можливість зміни пріоритету вибраного процесу.
B. Запушити виконану роботу у репозиторій на git.ztu.edu.ua або GitLab з назвою
DotNetLab3 та надати доступ до репозиторію викладачеві, який проводить
практичні заняття:
 Власенко Олег Васильович (wellwisher.vls@gmail.com) Савчук Іван Олександрович (kipz_sio@ztu.edu.ua) Чижмотря Олексій Володимирович (4ov.ztu@gmail.com)Лабораторна робота №3
Тема: Багатопотоковість у C#.
Мета роботи: навчитися працювати з потоками та
процесами у мові C#.
Виділений час: 18 годин (6 годин практичних робіт та 12
годин самостійної роботи).
Завдання:
A. Розробити дві програми:
1) шифрування файлів;
2) менеджер процесів.
Програмний код має бути написаний максимально універсально без
прив’язки у класах, що реалізують основний функціонал до інтерфейсу.
Передбачається, що дані класи потрібно буде використовувати в наступних
лабораторних роботах.
Вимоги до програми шифрування файлів
1. Графічний інтерфейс користувача з можливістю вводу ключа для
шифрування та діалогу вибору довільного файлу, який буде шифруватись
або розшифровуватись.
2. Здатність працювати з файлами довільного розміру та формату.
3. В процесі шифрування, повинен відображатись індикатор прогресу (0-100%)
та час, який пройшов від запуску шифрування.
4. По завершенні шифрування повинне бути відображене вікно з інформацією
про розмір зашифрованого файла, його назву та час, затрачений на
шифрування.
5. Необхідно запобігти «підвисанню» вікна при здійсненні операції шифрування
(шифрування здійснюватись в окремому обчислювальному потоці за
допомогою класу BackgroundWorker) .
6. Коректна обробка виключень, що можуть виникати під час роботи.
7. Для успішного виконання роботи необхідно ознайомитися з наступними
темами: асинхронні операції (клас BackgroundWorker), класи File, FileStream,
Timer, DateTime, OpenFileDialog, SaveFileDialog, обробка виключень.
Вимоги до менеджера процесів
1. Можливість запуску програм: Калькулятор, Microsoft Word та ще трьох на
ваш вибір.
2. Перегляд список запущених процесів з інформацією про обсяг оперативної
пам'яті, виділений під процес, часу, коли був запущений процес, пріоритет
процесу, кількість потоків, які запущені процесом. Відобразити у вигляді
таблиці.
3. Можливість зупинки вибраного процесу.
4. Можливість зміни пріоритету вибраного процесу.
B. Запушити виконану роботу у репозиторій на git.ztu.edu.ua або GitLab з назвою
DotNetLab3 та надати доступ до репозиторію викладачеві, який проводить
практичні заняття:
 Власенко Олег Васильович (wellwisher.vls@gmail.com) Савчук Іван Олександрович (kipz_sio@ztu.edu.ua) Чижмотря Олексій Володимирович (4ov.ztu@gmail.com)Лабораторна робота №3
Тема: Багатопотоковість у C#.
Мета роботи: навчитися працювати з потоками та
процесами у мові C#.
Виділений час: 18 годин (6 годин практичних робіт та 12
годин самостійної роботи).
Завдання:
A. Розробити дві програми:
1) шифрування файлів;
2) менеджер процесів.
Програмний код має бути написаний максимально універсально без
прив’язки у класах, що реалізують основний функціонал до інтерфейсу.
Передбачається, що дані класи потрібно буде використовувати в наступних
лабораторних роботах.
Вимоги до програми шифрування файлів
1. Графічний інтерфейс користувача з можливістю вводу ключа для
шифрування та діалогу вибору довільного файлу, який буде шифруватись
або розшифровуватись.
2. Здатність працювати з файлами довільного розміру та формату.
3. В процесі шифрування, повинен відображатись індикатор прогресу (0-100%)
та час, який пройшов від запуску шифрування.
4. По завершенні шифрування повинне бути відображене вікно з інформацією
про розмір зашифрованого файла, його назву та час, затрачений на
шифрування.
5. Необхідно запобігти «підвисанню» вікна при здійсненні операції шифрування
(шифрування здійснюватись в окремому обчислювальному потоці за
допомогою класу BackgroundWorker) .
6. Коректна обробка виключень, що можуть виникати під час роботи.
7. Для успішного виконання роботи необхідно ознайомитися з наступними
темами: асинхронні операції (клас BackgroundWorker), класи File, FileStream,
Timer, DateTime, OpenFileDialog, SaveFileDialog, обробка виключень.
Вимоги до менеджера процесів
1. Можливість запуску програм: Калькулятор, Microsoft Word та ще трьох на
ваш вибір.
2. Перегляд список запущених процесів з інформацією про обсяг оперативної
пам'яті, виділений під процес, часу, коли був запущений процес, пріоритет
процесу, кількість потоків, які запущені процесом. Відобразити у вигляді
таблиці.
3. Можливість зупинки вибраного процесу.
4. Можливість зміни пріоритету вибраного процесу.
B. Запушити виконану роботу у репозиторій на git.ztu.edu.ua або GitLab з назвою
DotNetLab3 та надати доступ до репозиторію викладачеві, який проводить
практичні заняття:
 Власенко Олег Васильович (wellwisher.vls@gmail.com) Савчук Іван Олександрович (kipz_sio@ztu.edu.ua) Чижмотря Олексій Володимирович (4ov.ztu@gmail.com)Лабораторна робота №3
Тема: Багатопотоковість у C#.
Мета роботи: навчитися працювати з потоками та
процесами у мові C#.
Виділений час: 18 годин (6 годин практичних робіт та 12
годин самостійної роботи).
Завдання:
A. Розробити дві програми:
1) шифрування файлів;
2) менеджер процесів.
Програмний код має бути написаний максимально універсально без
прив’язки у класах, що реалізують основний функціонал до інтерфейсу.
Передбачається, що дані класи потрібно буде використовувати в наступних
лабораторних роботах.
Вимоги до програми шифрування файлів
1. Графічний інтерфейс користувача з можливістю вводу ключа для
шифрування та діалогу вибору довільного файлу, який буде шифруватись
або розшифровуватись.
2. Здатність працювати з файлами довільного розміру та формату.
3. В процесі шифрування, повинен відображатись індикатор прогресу (0-100%)
та час, який пройшов від запуску шифрування.
4. По завершенні шифрування повинне бути відображене вікно з інформацією
про розмір зашифрованого файла, його назву та час, затрачений на
шифрування.
5. Необхідно запобігти «підвисанню» вікна при здійсненні операції шифрування
(шифрування здійснюватись в окремому обчислювальному потоці за
допомогою класу BackgroundWorker) .
6. Коректна обробка виключень, що можуть виникати під час роботи.
7. Для успішного виконання роботи необхідно ознайомитися з наступними
темами: асинхронні операції (клас BackgroundWorker), класи File, FileStream,
Timer, DateTime, OpenFileDialog, SaveFileDialog, обробка виключень.
Вимоги до менеджера процесів
1. Можливість запуску програм: Калькулятор, Microsoft Word та ще трьох на
ваш вибір.
2. Перегляд список запущених процесів з інформацією про обсяг оперативної
пам'яті, виділений під процес, часу, коли був запущений процес, пріоритет
процесу, кількість потоків, які запущені процесом. Відобразити у вигляді
таблиці.
3. Можливість зупинки вибраного процесу.
4. Можливість зміни пріоритету вибраного процесу.
B. Запушити виконану роботу у репозиторій на git.ztu.edu.ua або GitLab з назвою
DotNetLab3 та надати доступ до репозиторію викладачеві, який проводить
практичні заняття:
 Власенко Олег Васильович (wellwisher.vls@gmail.com) Савчук Іван Олександрович (kipz_sio@ztu.edu.ua) Чижмотря Олексій Володимирович (4ov.ztu@gmail.com)Лабораторна робота №3
Тема: Багатопотоковість у C#.
Мета роботи: навчитися працювати з потоками та
процесами у мові C#.
Виділений час: 18 годин (6 годин практичних робіт та 12
годин самостійної роботи).
Завдання:
A. Розробити дві програми:
1) шифрування файлів;
2) менеджер процесів.
Програмний код має бути написаний максимально універсально без
прив’язки у класах, що реалізують основний функціонал до інтерфейсу.
Передбачається, що дані класи потрібно буде використовувати в наступних
лабораторних роботах.
Вимоги до програми шифрування файлів
1. Графічний інтерфейс користувача з можливістю вводу ключа для
шифрування та діалогу вибору довільного файлу, який буде шифруватись
або розшифровуватись.
2. Здатність працювати з файлами довільного розміру та формату.
3. В процесі шифрування, повинен відображатись індикатор прогресу (0-100%)
та час, який пройшов від запуску шифрування.
4. По завершенні шифрування повинне бути відображене вікно з інформацією
про розмір зашифрованого файла, його назву та час, затрачений на
шифрування.
5. Необхідно запобігти «підвисанню» вікна при здійсненні операції шифрування
(шифрування здійснюватись в окремому обчислювальному потоці за
допомогою класу BackgroundWorker) .
6. Коректна обробка виключень, що можуть виникати під час роботи.
7. Для успішного виконання роботи необхідно ознайомитися з наступними
темами: асинхронні операції (клас BackgroundWorker), класи File, FileStream,
Timer, DateTime, OpenFileDialog, SaveFileDialog, обробка виключень.
Вимоги до менеджера процесів
1. Можливість запуску програм: Калькулятор, Microsoft Word та ще трьох на
ваш вибір.
2. Перегляд список запущених процесів з інформацією про обсяг оперативної
пам'яті, виділений під процес, часу, коли був запущений процес, пріоритет
процесу, кількість потоків, які запущені процесом. Відобразити у вигляді
таблиці.
3. Можливість зупинки вибраного процесу.
4. Можливість зміни пріоритету вибраного процесу.
B. Запушити виконану роботу у репозиторій на git.ztu.edu.ua або GitLab з назвою
DotNetLab3 та надати доступ до репозиторію викладачеві, який проводить
практичні заняття:
 Власенко Олег Васильович (wellwisher.vls@gmail.com) Савчук Іван Олександрович (kipz_sio@ztu.edu.ua) Чижмотря Олексій Володимирович (4ov.ztu@gmail.com)Лабораторна робота №3
Тема: Багатопотоковість у C#.
Мета роботи: навчитися працювати з потоками та
процесами у мові C#.
Виділений час: 18 годин (6 годин практичних робіт та 12
годин самостійної роботи).
Завдання:
A. Розробити дві програми:
1) шифрування файлів;
2) менеджер процесів.
Програмний код має бути написаний максимально універсально без
прив’язки у класах, що реалізують основний функціонал до інтерфейсу.
Передбачається, що дані класи потрібно буде використовувати в наступних
лабораторних роботах.
Вимоги до програми шифрування файлів
1. Графічний інтерфейс користувача з можливістю вводу ключа для
шифрування та діалогу вибору довільного файлу, який буде шифруватись
або розшифровуватись.
2. Здатність працювати з файлами довільного розміру та формату.
3. В процесі шифрування, повинен відображатись індикатор прогресу (0-100%)
та час, який пройшов від запуску шифрування.
4. По завершенні шифрування повинне бути відображене вікно з інформацією
про розмір зашифрованого файла, його назву та час, затрачений на
шифрування.
5. Необхідно запобігти «підвисанню» вікна при здійсненні операції шифрування
(шифрування здійснюватись в окремому обчислювальному потоці за
допомогою класу BackgroundWorker) .
6. Коректна обробка виключень, що можуть виникати під час роботи.
7. Для успішного виконання роботи необхідно ознайомитися з наступними
темами: асинхронні операції (клас BackgroundWorker), класи File, FileStream,
Timer, DateTime, OpenFileDialog, SaveFileDialog, обробка виключень.
Вимоги до менеджера процесів
1. Можливість запуску програм: Калькулятор, Microsoft Word та ще трьох на
ваш вибір.
2. Перегляд список запущених процесів з інформацією про обсяг оперативної
пам'яті, виділений під процес, часу, коли був запущений процес, пріоритет
процесу, кількість потоків, які запущені процесом. Відобразити у вигляді
таблиці.
3. Можливість зупинки вибраного процесу.
4. Можливість зміни пріоритету вибраного процесу.
B. Запушити виконану роботу у репозиторій на git.ztu.edu.ua або GitLab з назвою
DotNetLab3 та надати доступ до репозиторію викладачеві, який проводить
практичні заняття:
 Власенко Олег Васильович (wellwisher.vls@gmail.com) Савчук Іван Олександрович (kipz_sio@ztu.edu.ua) Чижмотря Олексій Володимирович (4ov.ztu@gmail.com)Лабораторна робота №3
Тема: Багатопотоковість у C#.
Мета роботи: навчитися працювати з потоками та
процесами у мові C#.
Виділений час: 18 годин (6 годин практичних робіт та 12
годин самостійної роботи).
Завдання:
A. Розробити дві програми:
1) шифрування файлів;
2) менеджер процесів.
Програмний код має бути написаний максимально універсально без
прив’язки у класах, що реалізують основний функціонал до інтерфейсу.
Передбачається, що дані класи потрібно буде використовувати в наступних
лабораторних роботах.
Вимоги до програми шифрування файлів
1. Графічний інтерфейс користувача з можливістю вводу ключа для
шифрування та діалогу вибору довільного файлу, який буде шифруватись
або розшифровуватись.
2. Здатність працювати з файлами довільного розміру та формату.
3. В процесі шифрування, повинен відображатись індикатор прогресу (0-100%)
та час, який пройшов від запуску шифрування.
4. По завершенні шифрування повинне бути відображене вікно з інформацією
про розмір зашифрованого файла, його назву та час, затрачений на
шифрування.
5. Необхідно запобігти «підвисанню» вікна при здійсненні операції шифрування
(шифрування здійснюватись в окремому обчислювальному потоці за
допомогою класу BackgroundWorker) .
6. Коректна обробка виключень, що можуть виникати під час роботи.
7. Для успішного виконання роботи необхідно ознайомитися з наступними
темами: асинхронні операції (клас BackgroundWorker), класи File, FileStream,
Timer, DateTime, OpenFileDialog, SaveFileDialog, обробка виключень.
Вимоги до менеджера процесів
1. Можливість запуску програм: Калькулятор, Microsoft Word та ще трьох на
ваш вибір.
2. Перегляд список запущених процесів з інформацією про обсяг оперативної
пам'яті, виділений під процес, часу, коли був запущений процес, пріоритет
процесу, кількість потоків, які запущені процесом. Відобразити у вигляді
таблиці.
3. Можливість зупинки вибраного процесу.
4. Можливість зміни пріоритету вибраного процесу.
B. Запушити виконану роботу у репозиторій на git.ztu.edu.ua або GitLab з назвою
DotNetLab3 та надати доступ до репозиторію викладачеві, який проводить
практичні заняття:
 Власенко Олег Васильович (wellwisher.vls@gmail.com) Савчук Іван Олександрович (kipz_sio@ztu.edu.ua) Чижмотря Олексій Володимирович (4ov.ztu@gmail.com)Лабораторна робота №3
Тема: Багатопотоковість у C#.
Мета роботи: навчитися працювати з потоками та
процесами у мові C#.
Виділений час: 18 годин (6 годин практичних робіт та 12
годин самостійної роботи).
Завдання:
A. Розробити дві програми:
1) шифрування файлів;
2) менеджер процесів.
Програмний код має бути написаний максимально універсально без
прив’язки у класах, що реалізують основний функціонал до інтерфейсу.
Передбачається, що дані класи потрібно буде використовувати в наступних
лабораторних роботах.
Вимоги до програми шифрування файлів
1. Графічний інтерфейс користувача з можливістю вводу ключа для
шифрування та діалогу вибору довільного файлу, який буде шифруватись
або розшифровуватись.
2. Здатність працювати з файлами довільного розміру та формату.
3. В процесі шифрування, повинен відображатись індикатор прогресу (0-100%)
та час, який пройшов від запуску шифрування.
4. По завершенні шифрування повинне бути відображене вікно з інформацією
про розмір зашифрованого файла, його назву та час, затрачений на
шифрування.
5. Необхідно запобігти «підвисанню» вікна при здійсненні операції шифрування
(шифрування здійснюватись в окремому обчислювальному потоці за
допомогою класу BackgroundWorker) .
6. Коректна обробка виключень, що можуть виникати під час роботи.
7. Для успішного виконання роботи необхідно ознайомитися з наступними
темами: асинхронні операції (клас BackgroundWorker), класи File, FileStream,
Timer, DateTime, OpenFileDialog, SaveFileDialog, обробка виключень.
Вимоги до менеджера процесів
1. Можливість запуску програм: Калькулятор, Microsoft Word та ще трьох на
ваш вибір.
2. Перегляд список запущених процесів з інформацією про обсяг оперативної
пам'яті, виділений під процес, часу, коли був запущений процес, пріоритет
процесу, кількість потоків, які запущені процесом. Відобразити у вигляді
таблиці.
3. Можливість зупинки вибраного процесу.
4. Можливість зміни пріоритету вибраного процесу.
B. Запушити виконану роботу у репозиторій на git.ztu.edu.ua або GitLab з назвою
DotNetLab3 та надати доступ до репозиторію викладачеві, який проводить
практичні заняття:
 Власенко Олег Васильович (wellwisher.vls@gmail.com) Савчук Іван Олександрович (kipz_sio@ztu.edu.ua) Чижмотря Олексій Володимирович (4ov.ztu@gmail.com)Лабораторна робота №3
Тема: Багатопотоковість у C#.
Мета роботи: навчитися працювати з потоками та
процесами у мові C#.
Виділений час: 18 годин (6 годин практичних робіт та 12
годин самостійної роботи).
Завдання:
A. Розробити дві програми:
1) шифрування файлів;
2) менеджер процесів.
Програмний код має бути написаний максимально універсально без
прив’язки у класах, що реалізують основний функціонал до інтерфейсу.
Передбачається, що дані класи потрібно буде використовувати в наступних
лабораторних роботах.
Вимоги до програми шифрування файлів
1. Графічний інтерфейс користувача з можливістю вводу ключа для
шифрування та діалогу вибору довільного файлу, який буде шифруватись
або розшифровуватись.
2. Здатність працювати з файлами довільного розміру та формату.
3. В процесі шифрування, повинен відображатись індикатор прогресу (0-100%)
та час, який пройшов від запуску шифрування.
4. По завершенні шифрування повинне бути відображене вікно з інформацією
про розмір зашифрованого файла, його назву та час, затрачений на
шифрування.
5. Необхідно запобігти «підвисанню» вікна при здійсненні операції шифрування
(шифрування здійснюватись в окремому обчислювальному потоці за
допомогою класу BackgroundWorker) .
6. Коректна обробка виключень, що можуть виникати під час роботи.
7. Для успішного виконання роботи необхідно ознайомитися з наступними
темами: асинхронні операції (клас BackgroundWorker), класи File, FileStream,
Timer, DateTime, OpenFileDialog, SaveFileDialog, обробка виключень.
Вимоги до менеджера процесів
1. Можливість запуску програм: Калькулятор, Microsoft Word та ще трьох на
ваш вибір.
2. Перегляд список запущених процесів з інформацією про обсяг оперативної
пам'яті, виділений під процес, часу, коли був запущений процес, пріоритет
процесу, кількість потоків, які запущені процесом. Відобразити у вигляді
таблиці.
3. Можливість зупинки вибраного процесу.
4. Можливість зміни пріоритету вибраного процесу.
B. Запушити виконану роботу у репозиторій на git.ztu.edu.ua або GitLab з назвою
DotNetLab3 та надати доступ до репозиторію викладачеві, який проводить
практичні заняття:
 Власенко Олег Васильович (wellwisher.vls@gmail.com) Савчук Іван Олександрович (kipz_sio@ztu.edu.ua) Чижмотря Олексій Володимирович (4ov.ztu@gmail.com)Лабораторна робота №3
Тема: Багатопотоковість у C#.
Мета роботи: навчитися працювати з потоками та
процесами у мові C#.
Виділений час: 18 годин (6 годин практичних робіт та 12
годин самостійної роботи).
Завдання:
A. Розробити дві програми:
1) шифрування файлів;
2) менеджер процесів.
Програмний код має бути написаний максимально універсально без
прив’язки у класах, що реалізують основний функціонал до інтерфейсу.
Передбачається, що дані класи потрібно буде використовувати в наступних
лабораторних роботах.
Вимоги до програми шифрування файлів
1. Графічний інтерфейс користувача з можливістю вводу ключа для
шифрування та діалогу вибору довільного файлу, який буде шифруватись
або розшифровуватись.
2. Здатність працювати з файлами довільного розміру та формату.
3. В процесі шифрування, повинен відображатись індикатор прогресу (0-100%)
та час, який пройшов від запуску шифрування.
4. По завершенні шифрування повинне бути відображене вікно з інформацією
про розмір зашифрованого файла, його назву та час, затрачений на
шифрування.
5. Необхідно запобігти «підвисанню» вікна при здійсненні операції шифрування
(шифрування здійснюватись в окремому обчислювальному потоці за
допомогою класу BackgroundWorker) .
6. Коректна обробка виключень, що можуть виникати під час роботи.
7. Для успішного виконання роботи необхідно ознайомитися з наступними
темами: асинхронні операції (клас BackgroundWorker), класи File, FileStream,
Timer, DateTime, OpenFileDialog, SaveFileDialog, обробка виключень.
Вимоги до менеджера процесів
1. Можливість запуску програм: Калькулятор, Microsoft Word та ще трьох на
ваш вибір.
2. Перегляд список запущених процесів з інформацією про обсяг оперативної
пам'яті, виділений під процес, часу, коли був запущений процес, пріоритет
процесу, кількість потоків, які запущені процесом. Відобразити у вигляді
таблиці.
3. Можливість зупинки вибраного процесу.
4. Можливість зміни пріоритету вибраного процесу.
B. Запушити виконану роботу у репозиторій на git.ztu.edu.ua або GitLab з назвою
DotNetLab3 та надати доступ до репозиторію викладачеві, який проводить
практичні заняття:
 Власенко Олег Васильович (wellwisher.vls@gmail.com) Савчук Іван Олександрович (kipz_sio@ztu.edu.ua) Чижмотря Олексій Володимирович (4ov.ztu@gmail.com)Лабораторна робота №3
Тема: Багатопотоковість у C#.
Мета роботи: навчитися працювати з потоками та
процесами у мові C#.
Виділений час: 18 годин (6 годин практичних робіт та 12
годин самостійної роботи).
Завдання:
A. Розробити дві програми:
1) шифрування файлів;
2) менеджер процесів.
Програмний код має бути написаний максимально універсально без
прив’язки у класах, що реалізують основний функціонал до інтерфейсу.
Передбачається, що дані класи потрібно буде використовувати в наступних
лабораторних роботах.
Вимоги до програми шифрування файлів
1. Графічний інтерфейс користувача з можливістю вводу ключа для
шифрування та діалогу вибору довільного файлу, який буде шифруватись
або розшифровуватись.
2. Здатність працювати з файлами довільного розміру та формату.
3. В процесі шифрування, повинен відображатись індикатор прогресу (0-100%)
та час, який пройшов від запуску шифрування.
4. По завершенні шифрування повинне бути відображене вікно з інформацією
про розмір зашифрованого файла, його назву та час, затрачений на
шифрування.
5. Необхідно запобігти «підвисанню» вікна при здійсненні операції шифрування
(шифрування здійснюватись в окремому обчислювальному потоці за
допомогою класу BackgroundWorker) .
6. Коректна обробка виключень, що можуть виникати під час роботи.
7. Для успішного виконання роботи необхідно ознайомитися з наступними
темами: асинхронні операції (клас BackgroundWorker), класи File, FileStream,
Timer, DateTime, OpenFileDialog, SaveFileDialog, обробка виключень.
Вимоги до менеджера процесів
1. Можливість запуску програм: Калькулятор, Microsoft Word та ще трьох на
ваш вибір.
2. Перегляд список запущених процесів з інформацією про обсяг оперативної
пам'яті, виділений під процес, часу, коли був запущений процес, пріоритет
процесу, кількість потоків, які запущені процесом. Відобразити у вигляді
таблиці.
3. Можливість зупинки вибраного процесу.
4. Можливість зміни пріоритету вибраного процесу.
B. Запушити виконану роботу у репозиторій на git.ztu.edu.ua або GitLab з назвою
DotNetLab3 та надати доступ до репозиторію викладачеві, який проводить
практичні заняття:
 Власенко Олег Васильович (wellwisher.vls@gmail.com) Савчук Іван Олександрович (kipz_sio@ztu.edu.ua) Чижмотря Олексій Володимирович (4ov.ztu@gmail.com)Лабораторна робота №3
Тема: Багатопотоковість у C#.
Мета роботи: навчитися працювати з потоками та
процесами у мові C#.
Виділений час: 18 годин (6 годин практичних робіт та 12
годин самостійної роботи).
Завдання:
A. Розробити дві програми:
1) шифрування файлів;
2) менеджер процесів.
Програмний код має бути написаний максимально універсально без
прив’язки у класах, що реалізують основний функціонал до інтерфейсу.
Передбачається, що дані класи потрібно буде використовувати в наступних
лабораторних роботах.
Вимоги до програми шифрування файлів
1. Графічний інтерфейс користувача з можливістю вводу ключа для
шифрування та діалогу вибору довільного файлу, який буде шифруватись
або розшифровуватись.
2. Здатність працювати з файлами довільного розміру та формату.
3. В процесі шифрування, повинен відображатись індикатор прогресу (0-100%)
та час, який пройшов від запуску шифрування.
4. По завершенні шифрування повинне бути відображене вікно з інформацією
про розмір зашифрованого файла, його назву та час, затрачений на
шифрування.
5. Необхідно запобігти «підвисанню» вікна при здійсненні операції шифрування
(шифрування здійснюватись в окремому обчислювальному потоці за
допомогою класу BackgroundWorker) .
6. Коректна обробка виключень, що можуть виникати під час роботи.
7. Для успішного виконання роботи необхідно ознайомитися з наступними
темами: асинхронні операції (клас BackgroundWorker), класи File, FileStream,
Timer, DateTime, OpenFileDialog, SaveFileDialog, обробка виключень.
Вимоги до менеджера процесів
1. Можливість запуску програм: Калькулятор, Microsoft Word та ще трьох на
ваш вибір.
2. Перегляд список запущених процесів з інформацією про обсяг оперативної
пам'яті, виділений під процес, часу, коли був запущений процес, пріоритет
процесу, кількість потоків, які запущені процесом. Відобразити у вигляді
таблиці.
3. Можливість зупинки вибраного процесу.
4. Можливість зміни пріоритету вибраного процесу.
B. Запушити виконану роботу у репозиторій на git.ztu.edu.ua або GitLab з назвою
DotNetLab3 та надати доступ до репозиторію викладачеві, який проводить
практичні заняття:
 Власенко Олег Васильович (wellwisher.vls@gmail.com) Савчук Іван Олександрович (kipz_sio@ztu.edu.ua) Чижмотря Олексій Володимирович (4ov.ztu@gmail.com)Лабораторна робота №3
Тема: Багатопотоковість у C#.
Мета роботи: навчитися працювати з потоками та
процесами у мові C#.
Виділений час: 18 годин (6 годин практичних робіт та 12
годин самостійної роботи).
Завдання:
A. Розробити дві програми:
1) шифрування файлів;
2) менеджер процесів.
Програмний код має бути написаний максимально універсально без
прив’язки у класах, що реалізують основний функціонал до інтерфейсу.
Передбачається, що дані класи потрібно буде використовувати в наступних
лабораторних роботах.
Вимоги до програми шифрування файлів
1. Графічний інтерфейс користувача з можливістю вводу ключа для
шифрування та діалогу вибору довільного файлу, який буде шифруватись
або розшифровуватись.
2. Здатність працювати з файлами довільного розміру та формату.
3. В процесі шифрування, повинен відображатись індикатор прогресу (0-100%)
та час, який пройшов від запуску шифрування.
4. По завершенні шифрування повинне бути відображене вікно з інформацією
про розмір зашифрованого файла, його назву та час, затрачений на
шифрування.
5. Необхідно запобігти «підвисанню» вікна при здійсненні операції шифрування
(шифрування здійснюватись в окремому обчислювальному потоці за
допомогою класу BackgroundWorker) .
6. Коректна обробка виключень, що можуть виникати під час роботи.
7. Для успішного виконання роботи необхідно ознайомитися з наступними
темами: асинхронні операції (клас BackgroundWorker), класи File, FileStream,
Timer, DateTime, OpenFileDialog, SaveFileDialog, обробка виключень.
Вимоги до менеджера процесів
1. Можливість запуску програм: Калькулятор, Microsoft Word та ще трьох на
ваш вибір.
2. Перегляд список запущених процесів з інформацією про обсяг оперативної
пам'яті, виділений під процес, часу, коли був запущений процес, пріоритет
процесу, кількість потоків, які запущені процесом. Відобразити у вигляді
таблиці.
3. Можливість зупинки вибраного процесу.
4. Можливість зміни пріоритету вибраного процесу.
B. Запушити виконану роботу у репозиторій на git.ztu.edu.ua або GitLab з назвою
DotNetLab3 та надати доступ до репозиторію викладачеві, який проводить
практичні заняття:
 Власенко Олег Васильович (wellwisher.vls@gmail.com) Савчук Іван Олександрович (kipz_sio@ztu.edu.ua) Чижмотря Олексій Володимирович (4ov.ztu@gmail.com)Лабораторна робота №3
Тема: Багатопотоковість у C#.
Мета роботи: навчитися працювати з потоками та
процесами у мові C#.
Виділений час: 18 годин (6 годин практичних робіт та 12
годин самостійної роботи).
Завдання:
A. Розробити дві програми:
1) шифрування файлів;
2) менеджер процесів.
Програмний код має бути написаний максимально універсально без
прив’язки у класах, що реалізують основний функціонал до інтерфейсу.
Передбачається, що дані класи потрібно буде використовувати в наступних
лабораторних роботах.
Вимоги до програми шифрування файлів
1. Графічний інтерфейс користувача з можливістю вводу ключа для
шифрування та діалогу вибору довільного файлу, який буде шифруватись
або розшифровуватись.
2. Здатність працювати з файлами довільного розміру та формату.
3. В процесі шифрування, повинен відображатись індикатор прогресу (0-100%)
та час, який пройшов від запуску шифрування.
4. По завершенні шифрування повинне бути відображене вікно з інформацією
про розмір зашифрованого файла, його назву та час, затрачений на
шифрування.
5. Необхідно запобігти «підвисанню» вікна при здійсненні операції шифрування
(шифрування здійснюватись в окремому обчислювальному потоці за
допомогою класу BackgroundWorker) .
6. Коректна обробка виключень, що можуть виникати під час роботи.
7. Для успішного виконання роботи необхідно ознайомитися з наступними
темами: асинхронні операції (клас BackgroundWorker), класи File, FileStream,
Timer, DateTime, OpenFileDialog, SaveFileDialog, обробка виключень.
Вимоги до менеджера процесів
1. Можливість запуску програм: Калькулятор, Microsoft Word та ще трьох на
ваш вибір.
2. Перегляд список запущених процесів з інформацією про обсяг оперативної
пам'яті, виділений під процес, часу, коли був запущений процес, пріоритет
процесу, кількість потоків, які запущені процесом. Відобразити у вигляді
таблиці.
3. Можливість зупинки вибраного процесу.
4. Можливість зміни пріоритету вибраного процесу.
B. Запушити виконану роботу у репозиторій на git.ztu.edu.ua або GitLab з назвою
DotNetLab3 та надати доступ до репозиторію викладачеві, який проводить
практичні заняття:
 Власенко Олег Васильович (wellwisher.vls@gmail.com) Савчук Іван Олександрович (kipz_sio@ztu.edu.ua) Чижмотря Олексій Володимирович (4ov.ztu@gmail.com)Лабораторна робота №3
Тема: Багатопотоковість у C#.
Мета роботи: навчитися працювати з потоками та
процесами у мові C#.
Виділений час: 18 годин (6 годин практичних робіт та 12
годин самостійної роботи).
Завдання:
A. Розробити дві програми:
1) шифрування файлів;
2) менеджер процесів.
Програмний код має бути написаний максимально універсально без
прив’язки у класах, що реалізують основний функціонал до інтерфейсу.
Передбачається, що дані класи потрібно буде використовувати в наступних
лабораторних роботах.
Вимоги до програми шифрування файлів
1. Графічний інтерфейс користувача з можливістю вводу ключа для
шифрування та діалогу вибору довільного файлу, який буде шифруватись
або розшифровуватись.
2. Здатність працювати з файлами довільного розміру та формату.
3. В процесі шифрування, повинен відображатись індикатор прогресу (0-100%)
та час, який пройшов від запуску шифрування.
4. По завершенні шифрування повинне бути відображене вікно з інформацією
про розмір зашифрованого файла, його назву та час, затрачений на
шифрування.
5. Необхідно запобігти «підвисанню» вікна при здійсненні операції шифрування
(шифрування здійснюватись в окремому обчислювальному потоці за
допомогою класу BackgroundWorker) .
6. Коректна обробка виключень, що можуть виникати під час роботи.
7. Для успішного виконання роботи необхідно ознайомитися з наступними
темами: асинхронні операції (клас BackgroundWorker), класи File, FileStream,
Timer, DateTime, OpenFileDialog, SaveFileDialog, обробка виключень.
Вимоги до менеджера процесів
1. Можливість запуску програм: Калькулятор, Microsoft Word та ще трьох на
ваш вибір.
2. Перегляд список запущених процесів з інформацією про обсяг оперативної
пам'яті, виділений під процес, часу, коли був запущений процес, пріоритет
процесу, кількість потоків, які запущені процесом. Відобразити у вигляді
таблиці.
3. Можливість зупинки вибраного процесу.
4. Можливість зміни пріоритету вибраного процесу.
B. Запушити виконану роботу у репозиторій на git.ztu.edu.ua або GitLab з назвою
DotNetLab3 та надати доступ до репозиторію викладачеві, який проводить
практичні заняття:
 Власенко Олег Васильович (wellwisher.vls@gmail.com) Савчук Іван Олександрович (kipz_sio@ztu.edu.ua) Чижмотря Олексій Володимирович (4ov.ztu@gmail.com)Лабораторна робота №3
Тема: Багатопотоковість у C#.
Мета роботи: навчитися працювати з потоками та
процесами у мові C#.
Виділений час: 18 годин (6 годин практичних робіт та 12
годин самостійної роботи).
Завдання:
A. Розробити дві програми:
1) шифрування файлів;
2) менеджер процесів.
Програмний код має бути написаний максимально універсально без
прив’язки у класах, що реалізують основний функціонал до інтерфейсу.
Передбачається, що дані класи потрібно буде використовувати в наступних
лабораторних роботах.
Вимоги до програми шифрування файлів
1. Графічний інтерфейс користувача з можливістю вводу ключа для
шифрування та діалогу вибору довільного файлу, який буде шифруватись
або розшифровуватись.
2. Здатність працювати з файлами довільного розміру та формату.
3. В процесі шифрування, повинен відображатись індикатор прогресу (0-100%)
та час, який пройшов від запуску шифрування.
4. По завершенні шифрування повинне бути відображене вікно з інформацією
про розмір зашифрованого файла, його назву та час, затрачений на
шифрування.
5. Необхідно запобігти «підвисанню» вікна при здійсненні операції шифрування
(шифрування здійснюватись в окремому обчислювальному потоці за
допомогою класу BackgroundWorker) .
6. Коректна обробка виключень, що можуть виникати під час роботи.
7. Для успішного виконання роботи необхідно ознайомитися з наступними
темами: асинхронні операції (клас BackgroundWorker), класи File, FileStream,
Timer, DateTime, OpenFileDialog, SaveFileDialog, обробка виключень.
Вимоги до менеджера процесів
1. Можливість запуску програм: Калькулятор, Microsoft Word та ще трьох на
ваш вибір.
2. Перегляд список запущених процесів з інформацією про обсяг оперативної
пам'яті, виділений під процес, часу, коли був запущений процес, пріоритет
процесу, кількість потоків, які запущені процесом. Відобразити у вигляді
таблиці.
3. Можливість зупинки вибраного процесу.
4. Можливість зміни пріоритету вибраного процесу.
B. Запушити виконану роботу у репозиторій на git.ztu.edu.ua або GitLab з назвою
DotNetLab3 та надати доступ до репозиторію викладачеві, який проводить
практичні заняття:
 Власенко Олег Васильович (wellwisher.vls@gmail.com) Савчук Іван Олександрович (kipz_sio@ztu.edu.ua) Чижмотря Олексій Володимирович (4ov.ztu@gmail.com)Лабораторна робота №3
Тема: Багатопотоковість у C#.
Мета роботи: навчитися працювати з потоками та
процесами у мові C#.
Виділений час: 18 годин (6 годин практичних робіт та 12
годин самостійної роботи).
Завдання:
A. Розробити дві програми:
1) шифрування файлів;
2) менеджер процесів.
Програмний код має бути написаний максимально універсально без
прив’язки у класах, що реалізують основний функціонал до інтерфейсу.
Передбачається, що дані класи потрібно буде використовувати в наступних
лабораторних роботах.
Вимоги до програми шифрування файлів
1. Графічний інтерфейс користувача з можливістю вводу ключа для
шифрування та діалогу вибору довільного файлу, який буде шифруватись
або розшифровуватись.
2. Здатність працювати з файлами довільного розміру та формату.
3. В процесі шифрування, повинен відображатись індикатор прогресу (0-100%)
та час, який пройшов від запуску шифрування.
4. По завершенні шифрування повинне бути відображене вікно з інформацією
про розмір зашифрованого файла, його назву та час, затрачений на
шифрування.
5. Необхідно запобігти «підвисанню» вікна при здійсненні операції шифрування
(шифрування здійснюватись в окремому обчислювальному потоці за
допомогою класу BackgroundWorker) .
6. Коректна обробка виключень, що можуть виникати під час роботи.
7. Для успішного виконання роботи необхідно ознайомитися з наступними
темами: асинхронні операції (клас BackgroundWorker), класи File, FileStream,
Timer, DateTime, OpenFileDialog, SaveFileDialog, обробка виключень.
Вимоги до менеджера процесів
1. Можливість запуску програм: Калькулятор, Microsoft Word та ще трьох на
ваш вибір.
2. Перегляд список запущених процесів з інформацією про обсяг оперативної
пам'яті, виділений під процес, часу, коли був запущений процес, пріоритет
процесу, кількість потоків, які запущені процесом. Відобразити у вигляді
таблиці.
3. Можливість зупинки вибраного процесу.
4. Можливість зміни пріоритету вибраного процесу.
B. Запушити виконану роботу у репозиторій на git.ztu.edu.ua або GitLab з назвою
DotNetLab3 та надати доступ до репозиторію викладачеві, який проводить
практичні заняття:
 Власенко Олег Васильович (wellwisher.vls@gmail.com) Савчук Іван Олександрович (kipz_sio@ztu.edu.ua) Чижмотря Олексій Володимирович (4ov.ztu@gmail.com)Лабораторна робота №3
Тема: Багатопотоковість у C#.
Мета роботи: навчитися працювати з потоками та
процесами у мові C#.
Виділений час: 18 годин (6 годин практичних робіт та 12
годин самостійної роботи).
Завдання:
A. Розробити дві програми:
1) шифрування файлів;
2) менеджер процесів.
Програмний код має бути написаний максимально універсально без
прив’язки у класах, що реалізують основний функціонал до інтерфейсу.
Передбачається, що дані класи потрібно буде використовувати в наступних
лабораторних роботах.
Вимоги до програми шифрування файлів
1. Графічний інтерфейс користувача з можливістю вводу ключа для
шифрування та діалогу вибору довільного файлу, який буде шифруватись
або розшифровуватись.
2. Здатність працювати з файлами довільного розміру та формату.
3. В процесі шифрування, повинен відображатись індикатор прогресу (0-100%)
та час, який пройшов від запуску шифрування.
4. По завершенні шифрування повинне бути відображене вікно з інформацією
про розмір зашифрованого файла, його назву та час, затрачений на
шифрування.
5. Необхідно запобігти «підвисанню» вікна при здійсненні операції шифрування
(шифрування здійснюватись в окремому обчислювальному потоці за
допомогою класу BackgroundWorker) .
6. Коректна обробка виключень, що можуть виникати під час роботи.
7. Для успішного виконання роботи необхідно ознайомитися з наступними
темами: асинхронні операції (клас BackgroundWorker), класи File, FileStream,
Timer, DateTime, OpenFileDialog, SaveFileDialog, обробка виключень.
Вимоги до менеджера процесів
1. Можливість запуску програм: Калькулятор, Microsoft Word та ще трьох на
ваш вибір.
2. Перегляд список запущених процесів з інформацією про обсяг оперативної
пам'яті, виділений під процес, часу, коли був запущений процес, пріоритет
процесу, кількість потоків, які запущені процесом. Відобразити у вигляді
таблиці.
3. Можливість зупинки вибраного процесу.
4. Можливість зміни пріоритету вибраного процесу.
B. Запушити виконану роботу у репозиторій на git.ztu.edu.ua або GitLab з назвою
DotNetLab3 та надати доступ до репозиторію викладачеві, який проводить
практичні заняття:
 Власенко Олег Васильович (wellwisher.vls@gmail.com) Савчук Іван Олександрович (kipz_sio@ztu.edu.ua) Чижмотря Олексій Володимирович (4ov.ztu@gmail.com)Лабораторна робота №3
Тема: Багатопотоковість у C#.
Мета роботи: навчитися працювати з потоками та
процесами у мові C#.
Виділений час: 18 годин (6 годин практичних робіт та 12
годин самостійної роботи).
Завдання:
A. Розробити дві програми:
1) шифрування файлів;
2) менеджер процесів.
Програмний код має бути написаний максимально універсально без
прив’язки у класах, що реалізують основний функціонал до інтерфейсу.
Передбачається, що дані класи потрібно буде використовувати в наступних
лабораторних роботах.
Вимоги до програми шифрування файлів
1. Графічний інтерфейс користувача з можливістю вводу ключа для
шифрування та діалогу вибору довільного файлу, який буде шифруватись
або розшифровуватись.
2. Здатність працювати з файлами довільного розміру та формату.
3. В процесі шифрування, повинен відображатись індикатор прогресу (0-100%)
та час, який пройшов від запуску шифрування.
4. По завершенні шифрування повинне бути відображене вікно з інформацією
про розмір зашифрованого файла, його назву та час, затрачений на
шифрування.
5. Необхідно запобігти «підвисанню» вікна при здійсненні операції шифрування
(шифрування здійснюватись в окремому обчислювальному потоці за
допомогою класу BackgroundWorker) .
6. Коректна обробка виключень, що можуть виникати під час роботи.
7. Для успішного виконання роботи необхідно ознайомитися з наступними
темами: асинхронні операції (клас BackgroundWorker), класи File, FileStream,
Timer, DateTime, OpenFileDialog, SaveFileDialog, обробка виключень.
Вимоги до менеджера процесів
1. Можливість запуску програм: Калькулятор, Microsoft Word та ще трьох на
ваш вибір.
2. Перегляд список запущених процесів з інформацією про обсяг оперативної
пам'яті, виділений під процес, часу, коли був запущений процес, пріоритет
процесу, кількість потоків, які запущені процесом. Відобразити у вигляді
таблиці.
3. Можливість зупинки вибраного процесу.
4. Можливість зміни пріоритету вибраного процесу.
B. Запушити виконану роботу у репозиторій на git.ztu.edu.ua або GitLab з назвою
DotNetLab3 та надати доступ до репозиторію викладачеві, який проводить
практичні заняття:
 Власенко Олег Васильович (wellwisher.vls@gmail.com) Савчук Іван Олександрович (kipz_sio@ztu.edu.ua) Чижмотря Олексій Володимирович (4ov.ztu@gmail.com)Лабораторна робота №3
Тема: Багатопотоковість у C#.
Мета роботи: навчитися працювати з потоками та
процесами у мові C#.
Виділений час: 18 годин (6 годин практичних робіт та 12
годин самостійної роботи).
Завдання:
A. Розробити дві програми:
1) шифрування файлів;
2) менеджер процесів.
Програмний код має бути написаний максимально універсально без
прив’язки у класах, що реалізують основний функціонал до інтерфейсу.
Передбачається, що дані класи потрібно буде використовувати в наступних
лабораторних роботах.
Вимоги до програми шифрування файлів
1. Графічний інтерфейс користувача з можливістю вводу ключа для
шифрування та діалогу вибору довільного файлу, який буде шифруватись
або розшифровуватись.
2. Здатність працювати з файлами довільного розміру та формату.
3. В процесі шифрування, повинен відображатись індикатор прогресу (0-100%)
та час, який пройшов від запуску шифрування.
4. По завершенні шифрування повинне бути відображене вікно з інформацією
про розмір зашифрованого файла, його назву та час, затрачений на
шифрування.
5. Необхідно запобігти «підвисанню» вікна при здійсненні операції шифрування
(шифрування здійснюватись в окремому обчислювальному потоці за
допомогою класу BackgroundWorker) .
6. Коректна обробка виключень, що можуть виникати під час роботи.
7. Для успішного виконання роботи необхідно ознайомитися з наступними
темами: асинхронні операції (клас BackgroundWorker), класи File, FileStream,
Timer, DateTime, OpenFileDialog, SaveFileDialog, обробка виключень.
Вимоги до менеджера процесів
1. Можливість запуску програм: Калькулятор, Microsoft Word та ще трьох на
ваш вибір.
2. Перегляд список запущених процесів з інформацією про обсяг оперативної
пам'яті, виділений під процес, часу, коли був запущений процес, пріоритет
процесу, кількість потоків, які запущені процесом. Відобразити у вигляді
таблиці.
3. Можливість зупинки вибраного процесу.
4. Можливість зміни пріоритету вибраного процесу.
B. Запушити виконану роботу у репозиторій на git.ztu.edu.ua або GitLab з назвою
DotNetLab3 та надати доступ до репозиторію викладачеві, який проводить
практичні заняття:
 Власенко Олег Васильович (wellwisher.vls@gmail.com) Савчук Іван Олександрович (kipz_sio@ztu.edu.ua) Чижмотря Олексій Володимирович (4ov.ztu@gmail.com)Лабораторна робота №3
Тема: Багатопотоковість у C#.
Мета роботи: навчитися працювати з потоками та
процесами у мові C#.
Виділений час: 18 годин (6 годин практичних робіт та 12
годин самостійної роботи).
Завдання:
A. Розробити дві програми:
1) шифрування файлів;
2) менеджер процесів.
Програмний код має бути написаний максимально універсально без
прив’язки у класах, що реалізують основний функціонал до інтерфейсу.
Передбачається, що дані класи потрібно буде використовувати в наступних
лабораторних роботах.
Вимоги до програми шифрування файлів
1. Графічний інтерфейс користувача з можливістю вводу ключа для
шифрування та діалогу вибору довільного файлу, який буде шифруватись
або розшифровуватись.
2. Здатність працювати з файлами довільного розміру та формату.
3. В процесі шифрування, повинен відображатись індикатор прогресу (0-100%)
та час, який пройшов від запуску шифрування.
4. По завершенні шифрування повинне бути відображене вікно з інформацією
про розмір зашифрованого файла, його назву та час, затрачений на
шифрування.
5. Необхідно запобігти «підвисанню» вікна при здійсненні операції шифрування
(шифрування здійснюватись в окремому обчислювальному потоці за
допомогою класу BackgroundWorker) .
6. Коректна обробка виключень, що можуть виникати під час роботи.
7. Для успішного виконання роботи необхідно ознайомитися з наступними
темами: асинхронні операції (клас BackgroundWorker), класи File, FileStream,
Timer, DateTime, OpenFileDialog, SaveFileDialog, обробка виключень.
Вимоги до менеджера процесів
1. Можливість запуску програм: Калькулятор, Microsoft Word та ще трьох на
ваш вибір.
2. Перегляд список запущених процесів з інформацією про обсяг оперативної
пам'яті, виділений під процес, часу, коли був запущений процес, пріоритет
процесу, кількість потоків, які запущені процесом. Відобразити у вигляді
таблиці.
3. Можливість зупинки вибраного процесу.
4. Можливість зміни пріоритету вибраного процесу.
B. Запушити виконану роботу у репозиторій на git.ztu.edu.ua або GitLab з назвою
DotNetLab3 та надати доступ до репозиторію викладачеві, який проводить
практичні заняття:
 Власенко Олег Васильович (wellwisher.vls@gmail.com) Савчук Іван Олександрович (kipz_sio@ztu.edu.ua) Чижмотря Олексій Володимирович (4ov.ztu@gmail.com)Лабораторна робота №3
Тема: Багатопотоковість у C#.
Мета роботи: навчитися працювати з потоками та
процесами у мові C#.
Виділений час: 18 годин (6 годин практичних робіт та 12
годин самостійної роботи).
Завдання:
A. Розробити дві програми:
1) шифрування файлів;
2) менеджер процесів.
Програмний код має бути написаний максимально універсально без
прив’язки у класах, що реалізують основний функціонал до інтерфейсу.
Передбачається, що дані класи потрібно буде використовувати в наступних
лабораторних роботах.
Вимоги до програми шифрування файлів
1. Графічний інтерфейс користувача з можливістю вводу ключа для
шифрування та діалогу вибору довільного файлу, який буде шифруватись
або розшифровуватись.
2. Здатність працювати з файлами довільного розміру та формату.
3. В процесі шифрування, повинен відображатись індикатор прогресу (0-100%)
та час, який пройшов від запуску шифрування.
4. По завершенні шифрування повинне бути відображене вікно з інформацією
про розмір зашифрованого файла, його назву та час, затрачений на
шифрування.
5. Необхідно запобігти «підвисанню» вікна при здійсненні операції шифрування
(шифрування здійснюватись в окремому обчислювальному потоці за
допомогою класу BackgroundWorker) .
6. Коректна обробка виключень, що можуть виникати під час роботи.
7. Для успішного виконання роботи необхідно ознайомитися з наступними
темами: асинхронні операції (клас BackgroundWorker), класи File, FileStream,
Timer, DateTime, OpenFileDialog, SaveFileDialog, обробка виключень.
Вимоги до менеджера процесів
1. Можливість запуску програм: Калькулятор, Microsoft Word та ще трьох на
ваш вибір.
2. Перегляд список запущених процесів з інформацією про обсяг оперативної
пам'яті, виділений під процес, часу, коли був запущений процес, пріоритет
процесу, кількість потоків, які запущені процесом. Відобразити у вигляді
таблиці.
3. Можливість зупинки вибраного процесу.
4. Можливість зміни пріоритету вибраного процесу.
B. Запушити виконану роботу у репозиторій на git.ztu.edu.ua або GitLab з назвою
DotNetLab3 та надати доступ до репозиторію викладачеві, який проводить
практичні заняття:
 Власенко Олег Васильович (wellwisher.vls@gmail.com) Савчук Іван Олександрович (kipz_sio@ztu.edu.ua) Чижмотря Олексій Володимирович (4ov.ztu@gmail.com)Лабораторна робота №3
Тема: Багатопотоковість у C#.
Мета роботи: навчитися працювати з потоками та
процесами у мові C#.
Виділений час: 18 годин (6 годин практичних робіт та 12
годин самостійної роботи).
Завдання:
A. Розробити дві програми:
1) шифрування файлів;
2) менеджер процесів.
Програмний код має бути написаний максимально універсально без
прив’язки у класах, що реалізують основний функціонал до інтерфейсу.
Передбачається, що дані класи потрібно буде використовувати в наступних
лабораторних роботах.
Вимоги до програми шифрування файлів
1. Графічний інтерфейс користувача з можливістю вводу ключа для
шифрування та діалогу вибору довільного файлу, який буде шифруватись
або розшифровуватись.
2. Здатність працювати з файлами довільного розміру та формату.
3. В процесі шифрування, повинен відображатись індикатор прогресу (0-100%)
та час, який пройшов від запуску шифрування.
4. По завершенні шифрування повинне бути відображене вікно з інформацією
про розмір зашифрованого файла, його назву та час, затрачений на
шифрування.
5. Необхідно запобігти «підвисанню» вікна при здійсненні операції шифрування
(шифрування здійснюватись в окремому обчислювальному потоці за
допомогою класу BackgroundWorker) .
6. Коректна обробка виключень, що можуть виникати під час роботи.
7. Для успішного виконання роботи необхідно ознайомитися з наступними
темами: асинхронні операції (клас BackgroundWorker), класи File, FileStream,
Timer, DateTime, OpenFileDialog, SaveFileDialog, обробка виключень.
Вимоги до менеджера процесів
1. Можливість запуску програм: Калькулятор, Microsoft Word та ще трьох на
ваш вибір.
2. Перегляд список запущених процесів з інформацією про обсяг оперативної
пам'яті, виділений під процес, часу, коли був запущений процес, пріоритет
процесу, кількість потоків, які запущені процесом. Відобразити у вигляді
таблиці.
3. Можливість зупинки вибраного процесу.
4. Можливість зміни пріоритету вибраного процесу.
B. Запушити виконану роботу у репозиторій на git.ztu.edu.ua або GitLab з назвою
DotNetLab3 та надати доступ до репозиторію викладачеві, який проводить
практичні заняття:
 Власенко Олег Васильович (wellwisher.vls@gmail.com) Савчук Іван Олександрович (kipz_sio@ztu.edu.ua) Чижмотря Олексій Володимирович (4ov.ztu@gmail.com)Лабораторна робота №3
Тема: Багатопотоковість у C#.
Мета роботи: навчитися працювати з потоками та
процесами у мові C#.
Виділений час: 18 годин (6 годин практичних робіт та 12
годин самостійної роботи).
Завдання:
A. Розробити дві програми:
1) шифрування файлів;
2) менеджер процесів.
Програмний код має бути написаний максимально універсально без
прив’язки у класах, що реалізують основний функціонал до інтерфейсу.
Передбачається, що дані класи потрібно буде використовувати в наступних
лабораторних роботах.
Вимоги до програми шифрування файлів
1. Графічний інтерфейс користувача з можливістю вводу ключа для
шифрування та діалогу вибору довільного файлу, який буде шифруватись
або розшифровуватись.
2. Здатність працювати з файлами довільного розміру та формату.
3. В процесі шифрування, повинен відображатись індикатор прогресу (0-100%)
та час, який пройшов від запуску шифрування.
4. По завершенні шифрування повинне бути відображене вікно з інформацією
про розмір зашифрованого файла, його назву та час, затрачений на
шифрування.
5. Необхідно запобігти «підвисанню» вікна при здійсненні операції шифрування
(шифрування здійснюватись в окремому обчислювальному потоці за
допомогою класу BackgroundWorker) .
6. Коректна обробка виключень, що можуть виникати під час роботи.
7. Для успішного виконання роботи необхідно ознайомитися з наступними
темами: асинхронні операції (клас BackgroundWorker), класи File, FileStream,
Timer, DateTime, OpenFileDialog, SaveFileDialog, обробка виключень.
Вимоги до менеджера процесів
1. Можливість запуску програм: Калькулятор, Microsoft Word та ще трьох на
ваш вибір.
2. Перегляд список запущених процесів з інформацією про обсяг оперативної
пам'яті, виділений під процес, часу, коли був запущений процес, пріоритет
процесу, кількість потоків, які запущені процесом. Відобразити у вигляді
таблиці.
3. Можливість зупинки вибраного процесу.
4. Можливість зміни пріоритету вибраного процесу.
B. Запушити виконану роботу у репозиторій на git.ztu.edu.ua або GitLab з назвою
DotNetLab3 та надати доступ до репозиторію викладачеві, який проводить
практичні заняття:
 Власенко Олег Васильович (wellwisher.vls@gmail.com) Савчук Іван Олександрович (kipz_sio@ztu.edu.ua) Чижмотря Олексій Володимирович (4ov.ztu@gmail.com)Лабораторна робота №3
Тема: Багатопотоковість у C#.
Мета роботи: навчитися працювати з потоками та
процесами у мові C#.
Виділений час: 18 годин (6 годин практичних робіт та 12
годин самостійної роботи).
Завдання:
A. Розробити дві програми:
1) шифрування файлів;
2) менеджер процесів.
Програмний код має бути написаний максимально універсально без
прив’язки у класах, що реалізують основний функціонал до інтерфейсу.
Передбачається, що дані класи потрібно буде використовувати в наступних
лабораторних роботах.
Вимоги до програми шифрування файлів
1. Графічний інтерфейс користувача з можливістю вводу ключа для
шифрування та діалогу вибору довільного файлу, який буде шифруватись
або розшифровуватись.
2. Здатність працювати з файлами довільного розміру та формату.
3. В процесі шифрування, повинен відображатись індикатор прогресу (0-100%)
та час, який пройшов від запуску шифрування.
4. По завершенні шифрування повинне бути відображене вікно з інформацією
про розмір зашифрованого файла, його назву та час, затрачений на
шифрування.
5. Необхідно запобігти «підвисанню» вікна при здійсненні операції шифрування
(шифрування здійснюватись в окремому обчислювальному потоці за
допомогою класу BackgroundWorker) .
6. Коректна обробка виключень, що можуть виникати під час роботи.
7. Для успішного виконання роботи необхідно ознайомитися з наступними
темами: асинхронні операції (клас BackgroundWorker), класи File, FileStream,
Timer, DateTime, OpenFileDialog, SaveFileDialog, обробка виключень.
Вимоги до менеджера процесів
1. Можливість запуску програм: Калькулятор, Microsoft Word та ще трьох на
ваш вибір.
2. Перегляд список запущених процесів з інформацією про обсяг оперативної
пам'яті, виділений під процес, часу, коли був запущений процес, пріоритет
процесу, кількість потоків, які запущені процесом. Відобразити у вигляді
таблиці.
3. Можливість зупинки вибраного процесу.
4. Можливість зміни пріоритету вибраного процесу.
B. Запушити виконану роботу у репозиторій на git.ztu.edu.ua або GitLab з назвою
DotNetLab3 та надати доступ до репозиторію викладачеві, який проводить
практичні заняття:
 Власенко Олег Васильович (wellwisher.vls@gmail.com) Савчук Іван Олександрович (kipz_sio@ztu.edu.ua) Чижмотря Олексій Володимирович (4ov.ztu@gmail.com)Лабораторна робота №3
Тема: Багатопотоковість у C#.
Мета роботи: навчитися працювати з потоками та
процесами у мові C#.
Виділений час: 18 годин (6 годин практичних робіт та 12
годин самостійної роботи).
Завдання:
A. Розробити дві програми:
1) шифрування файлів;
2) менеджер процесів.
Програмний код має бути написаний максимально універсально без
прив’язки у класах, що реалізують основний функціонал до інтерфейсу.
Передбачається, що дані класи потрібно буде використовувати в наступних
лабораторних роботах.
Вимоги до програми шифрування файлів
1. Графічний інтерфейс користувача з можливістю вводу ключа для
шифрування та діалогу вибору довільного файлу, який буде шифруватись
або розшифровуватись.
2. Здатність працювати з файлами довільного розміру та формату.
3. В процесі шифрування, повинен відображатись індикатор прогресу (0-100%)
та час, який пройшов від запуску шифрування.
4. По завершенні шифрування повинне бути відображене вікно з інформацією
про розмір зашифрованого файла, його назву та час, затрачений на
шифрування.
5. Необхідно запобігти «підвисанню» вікна при здійсненні операції шифрування
(шифрування здійснюватись в окремому обчислювальному потоці за
допомогою класу BackgroundWorker) .
6. Коректна обробка виключень, що можуть виникати під час роботи.
7. Для успішного виконання роботи необхідно ознайомитися з наступними
темами: асинхронні операції (клас BackgroundWorker), класи File, FileStream,
Timer, DateTime, OpenFileDialog, SaveFileDialog, обробка виключень.
Вимоги до менеджера процесів
1. Можливість запуску програм: Калькулятор, Microsoft Word та ще трьох на
ваш вибір.
2. Перегляд список запущених процесів з інформацією про обсяг оперативної
пам'яті, виділений під процес, часу, коли був запущений процес, пріоритет
процесу, кількість потоків, які запущені процесом. Відобразити у вигляді
таблиці.
3. Можливість зупинки вибраного процесу.
4. Можливість зміни пріоритету вибраного процесу.
B. Запушити виконану роботу у репозиторій на git.ztu.edu.ua або GitLab з назвою
DotNetLab3 та надати доступ до репозиторію викладачеві, який проводить
практичні заняття:
 Власенко Олег Васильович (wellwisher.vls@gmail.com) Савчук Іван Олександрович (kipz_sio@ztu.edu.ua) Чижмотря Олексій Володимирович (4ov.ztu@gmail.com)Лабораторна робота №3
Тема: Багатопотоковість у C#.
Мета роботи: навчитися працювати з потоками та
процесами у мові C#.
Виділений час: 18 годин (6 годин практичних робіт та 12
годин самостійної роботи).
Завдання:
A. Розробити дві програми:
1) шифрування файлів;
2) менеджер процесів.
Програмний код має бути написаний максимально універсально без
прив’язки у класах, що реалізують основний функціонал до інтерфейсу.
Передбачається, що дані класи потрібно буде використовувати в наступних
лабораторних роботах.
Вимоги до програми шифрування файлів
1. Графічний інтерфейс користувача з можливістю вводу ключа для
шифрування та діалогу вибору довільного файлу, який буде шифруватись
або розшифровуватись.
2. Здатність працювати з файлами довільного розміру та формату.
3. В процесі шифрування, повинен відображатись індикатор прогресу (0-100%)
та час, який пройшов від запуску шифрування.
4. По завершенні шифрування повинне бути відображене вікно з інформацією
про розмір зашифрованого файла, його назву та час, затрачений на
шифрування.
5. Необхідно запобігти «підвисанню» вікна при здійсненні операції шифрування
(шифрування здійснюватись в окремому обчислювальному потоці за
допомогою класу BackgroundWorker) .
6. Коректна обробка виключень, що можуть виникати під час роботи.
7. Для успішного виконання роботи необхідно ознайомитися з наступними
темами: асинхронні операції (клас BackgroundWorker), класи File, FileStream,
Timer, DateTime, OpenFileDialog, SaveFileDialog, обробка виключень.
Вимоги до менеджера процесів
1. Можливість запуску програм: Калькулятор, Microsoft Word та ще трьох на
ваш вибір.
2. Перегляд список запущених процесів з інформацією про обсяг оперативної
пам'яті, виділений під процес, часу, коли був запущений процес, пріоритет
процесу, кількість потоків, які запущені процесом. Відобразити у вигляді
таблиці.
3. Можливість зупинки вибраного процесу.
4. Можливість зміни пріоритету вибраного процесу.
B. Запушити виконану роботу у репозиторій на git.ztu.edu.ua або GitLab з назвою
DotNetLab3 та надати доступ до репозиторію викладачеві, який проводить
практичні заняття:
 Власенко Олег Васильович (wellwisher.vls@gmail.com) Савчук Іван Олександрович (kipz_sio@ztu.edu.ua) Чижмотря Олексій Володимирович (4ov.ztu@gmail.com)Лабораторна робота №3
Тема: Багатопотоковість у C#.
Мета роботи: навчитися працювати з потоками та
процесами у мові C#.
Виділений час: 18 годин (6 годин практичних робіт та 12
годин самостійної роботи).
Завдання:
A. Розробити дві програми:
1) шифрування файлів;
2) менеджер процесів.
Програмний код має бути написаний максимально універсально без
прив’язки у класах, що реалізують основний функціонал до інтерфейсу.
Передбачається, що дані класи потрібно буде використовувати в наступних
лабораторних роботах.
Вимоги до програми шифрування файлів
1. Графічний інтерфейс користувача з можливістю вводу ключа для
шифрування та діалогу вибору довільного файлу, який буде шифруватись
або розшифровуватись.
2. Здатність працювати з файлами довільного розміру та формату.
3. В процесі шифрування, повинен відображатись індикатор прогресу (0-100%)
та час, який пройшов від запуску шифрування.
4. По завершенні шифрування повинне бути відображене вікно з інформацією
про розмір зашифрованого файла, його назву та час, затрачений на
шифрування.
5. Необхідно запобігти «підвисанню» вікна при здійсненні операції шифрування
(шифрування здійснюватись в окремому обчислювальному потоці за
допомогою класу BackgroundWorker) .
6. Коректна обробка виключень, що можуть виникати під час роботи.
7. Для успішного виконання роботи необхідно ознайомитися з наступними
темами: асинхронні операції (клас BackgroundWorker), класи File, FileStream,
Timer, DateTime, OpenFileDialog, SaveFileDialog, обробка виключень.
Вимоги до менеджера процесів
1. Можливість запуску програм: Калькулятор, Microsoft Word та ще трьох на
ваш вибір.
2. Перегляд список запущених процесів з інформацією про обсяг оперативної
пам'яті, виділений під процес, часу, коли був запущений процес, пріоритет
процесу, кількість потоків, які запущені процесом. Відобразити у вигляді
таблиці.
3. Можливість зупинки вибраного процесу.
4. Можливість зміни пріоритету вибраного процесу.
B. Запушити виконану роботу у репозиторій на git.ztu.edu.ua або GitLab з назвою
DotNetLab3 та надати доступ до репозиторію викладачеві, який проводить
практичні заняття:
 Власенко Олег Васильович (wellwisher.vls@gmail.com) Савчук Іван Олександрович (kipz_sio@ztu.edu.ua) Чижмотря Олексій Володимирович (4ov.ztu@gmail.com)Лабораторна робота №3
Тема: Багатопотоковість у C#.
Мета роботи: навчитися працювати з потоками та
процесами у мові C#.
Виділений час: 18 годин (6 годин практичних робіт та 12
годин самостійної роботи).
Завдання:
A. Розробити дві програми:
1) шифрування файлів;
2) менеджер процесів.
Програмний код має бути написаний максимально універсально без
прив’язки у класах, що реалізують основний функціонал до інтерфейсу.
Передбачається, що дані класи потрібно буде використовувати в наступних
лабораторних роботах.
Вимоги до програми шифрування файлів
1. Графічний інтерфейс користувача з можливістю вводу ключа для
шифрування та діалогу вибору довільного файлу, який буде шифруватись
або розшифровуватись.
2. Здатність працювати з файлами довільного розміру та формату.
3. В процесі шифрування, повинен відображатись індикатор прогресу (0-100%)
та час, який пройшов від запуску шифрування.
4. По завершенні шифрування повинне бути відображене вікно з інформацією
про розмір зашифрованого файла, його назву та час, затрачений на
шифрування.
5. Необхідно запобігти «підвисанню» вікна при здійсненні операції шифрування
(шифрування здійснюватись в окремому обчислювальному потоці за
допомогою класу BackgroundWorker) .
6. Коректна обробка виключень, що можуть виникати під час роботи.
7. Для успішного виконання роботи необхідно ознайомитися з наступними
темами: асинхронні операції (клас BackgroundWorker), класи File, FileStream,
Timer, DateTime, OpenFileDialog, SaveFileDialog, обробка виключень.
Вимоги до менеджера процесів
1. Можливість запуску програм: Калькулятор, Microsoft Word та ще трьох на
ваш вибір.
2. Перегляд список запущених процесів з інформацією про обсяг оперативної
пам'яті, виділений під процес, часу, коли був запущений процес, пріоритет
процесу, кількість потоків, які запущені процесом. Відобразити у вигляді
таблиці.
3. Можливість зупинки вибраного процесу.
4. Можливість зміни пріоритету вибраного процесу.
B. Запушити виконану роботу у репозиторій на git.ztu.edu.ua або GitLab з назвою
DotNetLab3 та надати доступ до репозиторію викладачеві, який проводить
практичні заняття:
 Власенко Олег Васильович (wellwisher.vls@gmail.com) Савчук Іван Олександрович (kipz_sio@ztu.edu.ua) Чижмотря Олексій Володимирович (4ov.ztu@gmail.com)Лабораторна робота №3
Тема: Багатопотоковість у C#.
Мета роботи: навчитися працювати з потоками та
процесами у мові C#.
Виділений час: 18 годин (6 годин практичних робіт та 12
годин самостійної роботи).
Завдання:
A. Розробити дві програми:
1) шифрування файлів;
2) менеджер процесів.
Програмний код має бути написаний максимально універсально без
прив’язки у класах, що реалізують основний функціонал до інтерфейсу.
Передбачається, що дані класи потрібно буде використовувати в наступних
лабораторних роботах.
Вимоги до програми шифрування файлів
1. Графічний інтерфейс користувача з можливістю вводу ключа для
шифрування та діалогу вибору довільного файлу, який буде шифруватись
або розшифровуватись.
2. Здатність працювати з файлами довільного розміру та формату.
3. В процесі шифрування, повинен відображатись індикатор прогресу (0-100%)
та час, який пройшов від запуску шифрування.
4. По завершенні шифрування повинне бути відображене вікно з інформацією
про розмір зашифрованого файла, його назву та час, затрачений на
шифрування.
5. Необхідно запобігти «підвисанню» вікна при здійсненні операції шифрування
(шифрування здійснюватись в окремому обчислювальному потоці за
допомогою класу BackgroundWorker) .
6. Коректна обробка виключень, що можуть виникати під час роботи.
7. Для успішного виконання роботи необхідно ознайомитися з наступними
темами: асинхронні операції (клас BackgroundWorker), класи File, FileStream,
Timer, DateTime, OpenFileDialog, SaveFileDialog, обробка виключень.
Вимоги до менеджера процесів
1. Можливість запуску програм: Калькулятор, Microsoft Word та ще трьох на
ваш вибір.
2. Перегляд список запущених процесів з інформацією про обсяг оперативної
пам'яті, виділений під процес, часу, коли був запущений процес, пріоритет
процесу, кількість потоків, які запущені процесом. Відобразити у вигляді
таблиці.
3. Можливість зупинки вибраного процесу.
4. Можливість зміни пріоритету вибраного процесу.
B. Запушити виконану роботу у репозиторій на git.ztu.edu.ua або GitLab з назвою
DotNetLab3 та надати доступ до репозиторію викладачеві, який проводить
практичні заняття:
 Власенко Олег Васильович (wellwisher.vls@gmail.com) Савчук Іван Олександрович (kipz_sio@ztu.edu.ua) Чижмотря Олексій Володимирович (4ov.ztu@gmail.com)Лабораторна робота №3
Тема: Багатопотоковість у C#.
Мета роботи: навчитися працювати з потоками та
процесами у мові C#.
Виділений час: 18 годин (6 годин практичних робіт та 12
годин самостійної роботи).
Завдання:
A. Розробити дві програми:
1) шифрування файлів;
2) менеджер процесів.
Програмний код має бути написаний максимально універсально без
прив’язки у класах, що реалізують основний функціонал до інтерфейсу.
Передбачається, що дані класи потрібно буде використовувати в наступних
лабораторних роботах.
Вимоги до програми шифрування файлів
1. Графічний інтерфейс користувача з можливістю вводу ключа для
шифрування та діалогу вибору довільного файлу, який буде шифруватись
або розшифровуватись.
2. Здатність працювати з файлами довільного розміру та формату.
3. В процесі шифрування, повинен відображатись індикатор прогресу (0-100%)
та час, який пройшов від запуску шифрування.
4. По завершенні шифрування повинне бути відображене вікно з інформацією
про розмір зашифрованого файла, його назву та час, затрачений на
шифрування.
5. Необхідно запобігти «підвисанню» вікна при здійсненні операції шифрування
(шифрування здійснюватись в окремому обчислювальному потоці за
допомогою класу BackgroundWorker) .
6. Коректна обробка виключень, що можуть виникати під час роботи.
7. Для успішного виконання роботи необхідно ознайомитися з наступними
темами: асинхронні операції (клас BackgroundWorker), класи File, FileStream,
Timer, DateTime, OpenFileDialog, SaveFileDialog, обробка виключень.
Вимоги до менеджера процесів
1. Можливість запуску програм: Калькулятор, Microsoft Word та ще трьох на
ваш вибір.
2. Перегляд список запущених процесів з інформацією про обсяг оперативної
пам'яті, виділений під процес, часу, коли був запущений процес, пріоритет
процесу, кількість потоків, які запущені процесом. Відобразити у вигляді
таблиці.
3. Можливість зупинки вибраного процесу.
4. Можливість зміни пріоритету вибраного процесу.
B. Запушити виконану роботу у репозиторій на git.ztu.edu.ua або GitLab з назвою
DotNetLab3 та надати доступ до репозиторію викладачеві, який проводить
практичні заняття:
 Власенко Олег Васильович (wellwisher.vls@gmail.com) Савчук Іван Олександрович (kipz_sio@ztu.edu.ua) Чижмотря Олексій Володимирович (4ov.ztu@gmail.com)Лабораторна робота №3
Тема: Багатопотоковість у C#.
Мета роботи: навчитися працювати з потоками та
процесами у мові C#.
Виділений час: 18 годин (6 годин практичних робіт та 12
годин самостійної роботи).
Завдання:
A. Розробити дві програми:
1) шифрування файлів;
2) менеджер процесів.
Програмний код має бути написаний максимально універсально без
прив’язки у класах, що реалізують основний функціонал до інтерфейсу.
Передбачається, що дані класи потрібно буде використовувати в наступних
лабораторних роботах.
Вимоги до програми шифрування файлів
1. Графічний інтерфейс користувача з можливістю вводу ключа для
шифрування та діалогу вибору довільного файлу, який буде шифруватись
або розшифровуватись.
2. Здатність працювати з файлами довільного розміру та формату.
3. В процесі шифрування, повинен відображатись індикатор прогресу (0-100%)
та час, який пройшов від запуску шифрування.
4. По завершенні шифрування повинне бути відображене вікно з інформацією
про розмір зашифрованого файла, його назву та час, затрачений на
шифрування.
5. Необхідно запобігти «підвисанню» вікна при здійсненні операції шифрування
(шифрування здійснюватись в окремому обчислювальному потоці за
допомогою класу BackgroundWorker) .
6. Коректна обробка виключень, що можуть виникати під час роботи.
7. Для успішного виконання роботи необхідно ознайомитися з наступними
темами: асинхронні операції (клас BackgroundWorker), класи File, FileStream,
Timer, DateTime, OpenFileDialog, SaveFileDialog, обробка виключень.
Вимоги до менеджера процесів
1. Можливість запуску програм: Калькулятор, Microsoft Word та ще трьох на
ваш вибір.
2. Перегляд список запущених процесів з інформацією про обсяг оперативної
пам'яті, виділений під процес, часу, коли був запущений процес, пріоритет
процесу, кількість потоків, які запущені процесом. Відобразити у вигляді
таблиці.
3. Можливість зупинки вибраного процесу.
4. Можливість зміни пріоритету вибраного процесу.
B. Запушити виконану роботу у репозиторій на git.ztu.edu.ua або GitLab з назвою
DotNetLab3 та надати доступ до репозиторію викладачеві, який проводить
практичні заняття:
 Власенко Олег Васильович (wellwisher.vls@gmail.com) Савчук Іван Олександрович (kipz_sio@ztu.edu.ua) Чижмотря Олексій Володимирович (4ov.ztu@gmail.com)Лабораторна робота №3
Тема: Багатопотоковість у C#.
Мета роботи: навчитися працювати з потоками та
процесами у мові C#.
Виділений час: 18 годин (6 годин практичних робіт та 12
годин самостійної роботи).
Завдання:
A. Розробити дві програми:
1) шифрування файлів;
2) менеджер процесів.
Програмний код має бути написаний максимально універсально без
прив’язки у класах, що реалізують основний функціонал до інтерфейсу.
Передбачається, що дані класи потрібно буде використовувати в наступних
лабораторних роботах.
Вимоги до програми шифрування файлів
1. Графічний інтерфейс користувача з можливістю вводу ключа для
шифрування та діалогу вибору довільного файлу, який буде шифруватись
або розшифровуватись.
2. Здатність працювати з файлами довільного розміру та формату.
3. В процесі шифрування, повинен відображатись індикатор прогресу (0-100%)
та час, який пройшов від запуску шифрування.
4. По завершенні шифрування повинне бути відображене вікно з інформацією
про розмір зашифрованого файла, його назву та час, затрачений на
шифрування.
5. Необхідно запобігти «підвисанню» вікна при здійсненні операції шифрування
(шифрування здійснюватись в окремому обчислювальному потоці за
допомогою класу BackgroundWorker) .
6. Коректна обробка виключень, що можуть виникати під час роботи.
7. Для успішного виконання роботи необхідно ознайомитися з наступними
темами: асинхронні операції (клас BackgroundWorker), класи File, FileStream,
Timer, DateTime, OpenFileDialog, SaveFileDialog, обробка виключень.
Вимоги до менеджера процесів
1. Можливість запуску програм: Калькулятор, Microsoft Word та ще трьох на
ваш вибір.
2. Перегляд список запущених процесів з інформацією про обсяг оперативної
пам'яті, виділений під процес, часу, коли був запущений процес, пріоритет
процесу, кількість потоків, які запущені процесом. Відобразити у вигляді
таблиці.
3. Можливість зупинки вибраного процесу.
4. Можливість зміни пріоритету вибраного процесу.
B. Запушити виконану роботу у репозиторій на git.ztu.edu.ua або GitLab з назвою
DotNetLab3 та надати доступ до репозиторію викладачеві, який проводить
практичні заняття:
 Власенко Олег Васильович (wellwisher.vls@gmail.com) Савчук Іван Олександрович (kipz_sio@ztu.edu.ua) Чижмотря Олексій Володимирович (4ov.ztu@gmail.com)Лабораторна робота №3
Тема: Багатопотоковість у C#.
Мета роботи: навчитися працювати з потоками та
процесами у мові C#.
Виділений час: 18 годин (6 годин практичних робіт та 12
годин самостійної роботи).
Завдання:
A. Розробити дві програми:
1) шифрування файлів;
2) менеджер процесів.
Програмний код має бути написаний максимально універсально без
прив’язки у класах, що реалізують основний функціонал до інтерфейсу.
Передбачається, що дані класи потрібно буде використовувати в наступних
лабораторних роботах.
Вимоги до програми шифрування файлів
1. Графічний інтерфейс користувача з можливістю вводу ключа для
шифрування та діалогу вибору довільного файлу, який буде шифруватись
або розшифровуватись.
2. Здатність працювати з файлами довільного розміру та формату.
3. В процесі шифрування, повинен відображатись індикатор прогресу (0-100%)
та час, який пройшов від запуску шифрування.
4. По завершенні шифрування повинне бути відображене вікно з інформацією
про розмір зашифрованого файла, його назву та час, затрачений на
шифрування.
5. Необхідно запобігти «підвисанню» вікна при здійсненні операції шифрування
(шифрування здійснюватись в окремому обчислювальному потоці за
допомогою класу BackgroundWorker) .
6. Коректна обробка виключень, що можуть виникати під час роботи.
7. Для успішного виконання роботи необхідно ознайомитися з наступними
темами: асинхронні операції (клас BackgroundWorker), класи File, FileStream,
Timer, DateTime, OpenFileDialog, SaveFileDialog, обробка виключень.
Вимоги до менеджера процесів
1. Можливість запуску програм: Калькулятор, Microsoft Word та ще трьох на
ваш вибір.
2. Перегляд список запущених процесів з інформацією про обсяг оперативної
пам'яті, виділений під процес, часу, коли був запущений процес, пріоритет
процесу, кількість потоків, які запущені процесом. Відобразити у вигляді
таблиці.
3. Можливість зупинки вибраного процесу.
4. Можливість зміни пріоритету вибраного процесу.
B. Запушити виконану роботу у репозиторій на git.ztu.edu.ua або GitLab з назвою
DotNetLab3 та надати доступ до репозиторію викладачеві, який проводить
практичні заняття:
 Власенко Олег Васильович (wellwisher.vls@gmail.com) Савчук Іван Олександрович (kipz_sio@ztu.edu.ua) Чижмотря Олексій Володимирович (4ov.ztu@gmail.com)Лабораторна робота №3
Тема: Багатопотоковість у C#.
Мета роботи: навчитися працювати з потоками та
процесами у мові C#.
Виділений час: 18 годин (6 годин практичних робіт та 12
годин самостійної роботи).
Завдання:
A. Розробити дві програми:
1) шифрування файлів;
2) менеджер процесів.
Програмний код має бути написаний максимально універсально без
прив’язки у класах, що реалізують основний функціонал до інтерфейсу.
Передбачається, що дані класи потрібно буде використовувати в наступних
лабораторних роботах.
Вимоги до програми шифрування файлів
1. Графічний інтерфейс користувача з можливістю вводу ключа для
шифрування та діалогу вибору довільного файлу, який буде шифруватись
або розшифровуватись.
2. Здатність працювати з файлами довільного розміру та формату.
3. В процесі шифрування, повинен відображатись індикатор прогресу (0-100%)
та час, який пройшов від запуску шифрування.
4. По завершенні шифрування повинне бути відображене вікно з інформацією
про розмір зашифрованого файла, його назву та час, затрачений на
шифрування.
5. Необхідно запобігти «підвисанню» вікна при здійсненні операції шифрування
(шифрування здійснюватись в окремому обчислювальному потоці за
допомогою класу BackgroundWorker) .
6. Коректна обробка виключень, що можуть виникати під час роботи.
7. Для успішного виконання роботи необхідно ознайомитися з наступними
темами: асинхронні операції (клас BackgroundWorker), класи File, FileStream,
Timer, DateTime, OpenFileDialog, SaveFileDialog, обробка виключень.
Вимоги до менеджера процесів
1. Можливість запуску програм: Калькулятор, Microsoft Word та ще трьох на
ваш вибір.
2. Перегляд список запущених процесів з інформацією про обсяг оперативної
пам'яті, виділений під процес, часу, коли був запущений процес, пріоритет
процесу, кількість потоків, які запущені процесом. Відобразити у вигляді
таблиці.
3. Можливість зупинки вибраного процесу.
4. Можливість зміни пріоритету вибраного процесу.
B. Запушити виконану роботу у репозиторій на git.ztu.edu.ua або GitLab з назвою
DotNetLab3 та надати доступ до репозиторію викладачеві, який проводить
практичні заняття:
 Власенко Олег Васильович (wellwisher.vls@gmail.com) Савчук Іван Олександрович (kipz_sio@ztu.edu.ua) Чижмотря Олексій Володимирович (4ov.ztu@gmail.com)Лабораторна робота №3
Тема: Багатопотоковість у C#.
Мета роботи: навчитися працювати з потоками та
процесами у мові C#.
Виділений час: 18 годин (6 годин практичних робіт та 12
годин самостійної роботи).
Завдання:
A. Розробити дві програми:
1) шифрування файлів;
2) менеджер процесів.
Програмний код має бути написаний максимально універсально без
прив’язки у класах, що реалізують основний функціонал до інтерфейсу.
Передбачається, що дані класи потрібно буде використовувати в наступних
лабораторних роботах.
Вимоги до програми шифрування файлів
1. Графічний інтерфейс користувача з можливістю вводу ключа для
шифрування та діалогу вибору довільного файлу, який буде шифруватись
або розшифровуватись.
2. Здатність працювати з файлами довільного розміру та формату.
3. В процесі шифрування, повинен відображатись індикатор прогресу (0-100%)
та час, який пройшов від запуску шифрування.
4. По завершенні шифрування повинне бути відображене вікно з інформацією
про розмір зашифрованого файла, його назву та час, затрачений на
шифрування.
5. Необхідно запобігти «підвисанню» вікна при здійсненні операції шифрування
(шифрування здійснюватись в окремому обчислювальному потоці за
допомогою класу BackgroundWorker) .
6. Коректна обробка виключень, що можуть виникати під час роботи.
7. Для успішного виконання роботи необхідно ознайомитися з наступними
темами: асинхронні операції (клас BackgroundWorker), класи File, FileStream,
Timer, DateTime, OpenFileDialog, SaveFileDialog, обробка виключень.
Вимоги до менеджера процесів
1. Можливість запуску програм: Калькулятор, Microsoft Word та ще трьох на
ваш вибір.
2. Перегляд список запущених процесів з інформацією про обсяг оперативної
пам'яті, виділений під процес, часу, коли був запущений процес, пріоритет
процесу, кількість потоків, які запущені процесом. Відобразити у вигляді
таблиці.
3. Можливість зупинки вибраного процесу.
4. Можливість зміни пріоритету вибраного процесу.
B. Запушити виконану роботу у репозиторій на git.ztu.edu.ua або GitLab з назвою
DotNetLab3 та надати доступ до репозиторію викладачеві, який проводить
практичні заняття:
 Власенко Олег Васильович (wellwisher.vls@gmail.com) Савчук Іван Олександрович (kipz_sio@ztu.edu.ua) Чижмотря Олексій Володимирович (4ov.ztu@gmail.com)Лабораторна робота №3
Тема: Багатопотоковість у C#.
Мета роботи: навчитися працювати з потоками та
процесами у мові C#.
Виділений час: 18 годин (6 годин практичних робіт та 12
годин самостійної роботи).
Завдання:
A. Розробити дві програми:
1) шифрування файлів;
2) менеджер процесів.
Програмний код має бути написаний максимально універсально без
прив’язки у класах, що реалізують основний функціонал до інтерфейсу.
Передбачається, що дані класи потрібно буде використовувати в наступних
лабораторних роботах.
Вимоги до програми шифрування файлів
1. Графічний інтерфейс користувача з можливістю вводу ключа для
шифрування та діалогу вибору довільного файлу, який буде шифруватись
або розшифровуватись.
2. Здатність працювати з файлами довільного розміру та формату.
3. В процесі шифрування, повинен відображатись індикатор прогресу (0-100%)
та час, який пройшов від запуску шифрування.
4. По завершенні шифрування повинне бути відображене вікно з інформацією
про розмір зашифрованого файла, його назву та час, затрачений на
шифрування.
5. Необхідно запобігти «підвисанню» вікна при здійсненні операції шифрування
(шифрування здійснюватись в окремому обчислювальному потоці за
допомогою класу BackgroundWorker) .
6. Коректна обробка виключень, що можуть виникати під час роботи.
7. Для успішного виконання роботи необхідно ознайомитися з наступними
темами: асинхронні операції (клас BackgroundWorker), класи File, FileStream,
Timer, DateTime, OpenFileDialog, SaveFileDialog, обробка виключень.
Вимоги до менеджера процесів
1. Можливість запуску програм: Калькулятор, Microsoft Word та ще трьох на
ваш вибір.
2. Перегляд список запущених процесів з інформацією про обсяг оперативної
пам'яті, виділений під процес, часу, коли був запущений процес, пріоритет
процесу, кількість потоків, які запущені процесом. Відобразити у вигляді
таблиці.
3. Можливість зупинки вибраного процесу.
4. Можливість зміни пріоритету вибраного процесу.
B. Запушити виконану роботу у репозиторій на git.ztu.edu.ua або GitLab з назвою
DotNetLab3 та надати доступ до репозиторію викладачеві, який проводить
практичні заняття:
 Власенко Олег Васильович (wellwisher.vls@gmail.com) Савчук Іван Олександрович (kipz_sio@ztu.edu.ua) Чижмотря Олексій Володимирович (4ov.ztu@gmail.com)Лабораторна робота №3
Тема: Багатопотоковість у C#.
Мета роботи: навчитися працювати з потоками та
процесами у мові C#.
Виділений час: 18 годин (6 годин практичних робіт та 12
годин самостійної роботи).
Завдання:
A. Розробити дві програми:
1) шифрування файлів;
2) менеджер процесів.
Програмний код має бути написаний максимально універсально без
прив’язки у класах, що реалізують основний функціонал до інтерфейсу.
Передбачається, що дані класи потрібно буде використовувати в наступних
лабораторних роботах.
Вимоги до програми шифрування файлів
1. Графічний інтерфейс користувача з можливістю вводу ключа для
шифрування та діалогу вибору довільного файлу, який буде шифруватись
або розшифровуватись.
2. Здатність працювати з файлами довільного розміру та формату.
3. В процесі шифрування, повинен відображатись індикатор прогресу (0-100%)
та час, який пройшов від запуску шифрування.
4. По завершенні шифрування повинне бути відображене вікно з інформацією
про розмір зашифрованого файла, його назву та час, затрачений на
шифрування.
5. Необхідно запобігти «підвисанню» вікна при здійсненні операції шифрування
(шифрування здійснюватись в окремому обчислювальному потоці за
допомогою класу BackgroundWorker) .
6. Коректна обробка виключень, що можуть виникати під час роботи.
7. Для успішного виконання роботи необхідно ознайомитися з наступними
темами: асинхронні операції (клас BackgroundWorker), класи File, FileStream,
Timer, DateTime, OpenFileDialog, SaveFileDialog, обробка виключень.
Вимоги до менеджера процесів
1. Можливість запуску програм: Калькулятор, Microsoft Word та ще трьох на
ваш вибір.
2. Перегляд список запущених процесів з інформацією про обсяг оперативної
пам'яті, виділений під процес, часу, коли був запущений процес, пріоритет
процесу, кількість потоків, які запущені процесом. Відобразити у вигляді
таблиці.
3. Можливість зупинки вибраного процесу.
4. Можливість зміни пріоритету вибраного процесу.
B. Запушити виконану роботу у репозиторій на git.ztu.edu.ua або GitLab з назвою
DotNetLab3 та надати доступ до репозиторію викладачеві, який проводить
практичні заняття:
 Власенко Олег Васильович (wellwisher.vls@gmail.com) Савчук Іван Олександрович (kipz_sio@ztu.edu.ua) Чижмотря Олексій Володимирович (4ov.ztu@gmail.com)Лабораторна робота №3
Тема: Багатопотоковість у C#.
Мета роботи: навчитися працювати з потоками та
процесами у мові C#.
Виділений час: 18 годин (6 годин практичних робіт та 12
годин самостійної роботи).
Завдання:
A. Розробити дві програми:
1) шифрування файлів;
2) менеджер процесів.
Програмний код має бути написаний максимально універсально без
прив’язки у класах, що реалізують основний функціонал до інтерфейсу.
Передбачається, що дані класи потрібно буде використовувати в наступних
лабораторних роботах.
Вимоги до програми шифрування файлів
1. Графічний інтерфейс користувача з можливістю вводу ключа для
шифрування та діалогу вибору довільного файлу, який буде шифруватись
або розшифровуватись.
2. Здатність працювати з файлами довільного розміру та формату.
3. В процесі шифрування, повинен відображатись індикатор прогресу (0-100%)
та час, який пройшов від запуску шифрування.
4. По завершенні шифрування повинне бути відображене вікно з інформацією
про розмір зашифрованого файла, його назву та час, затрачений на
шифрування.
5. Необхідно запобігти «підвисанню» вікна при здійсненні операції шифрування
(шифрування здійснюватись в окремому обчислювальному потоці за
допомогою класу BackgroundWorker) .
6. Коректна обробка виключень, що можуть виникати під час роботи.
7. Для успішного виконання роботи необхідно ознайомитися з наступними
темами: асинхронні операції (клас BackgroundWorker), класи File, FileStream,
Timer, DateTime, OpenFileDialog, SaveFileDialog, обробка виключень.
Вимоги до менеджера процесів
1. Можливість запуску програм: Калькулятор, Microsoft Word та ще трьох на
ваш вибір.
2. Перегляд список запущених процесів з інформацією про обсяг оперативної
пам'яті, виділений під процес, часу, коли був запущений процес, пріоритет
процесу, кількість потоків, які запущені процесом. Відобразити у вигляді
таблиці.
3. Можливість зупинки вибраного процесу.
4. Можливість зміни пріоритету вибраного процесу.
B. Запушити виконану роботу у репозиторій на git.ztu.edu.ua або GitLab з назвою
DotNetLab3 та надати доступ до репозиторію викладачеві, який проводить
практичні заняття:
 Власенко Олег Васильович (wellwisher.vls@gmail.com) Савчук Іван Олександрович (kipz_sio@ztu.edu.ua) Чижмотря Олексій Володимирович (4ov.ztu@gmail.com)Лабораторна робота №3
Тема: Багатопотоковість у C#.
Мета роботи: навчитися працювати з потоками та
процесами у мові C#.
Виділений час: 18 годин (6 годин практичних робіт та 12
годин самостійної роботи).
Завдання:
A. Розробити дві програми:
1) шифрування файлів;
2) менеджер процесів.
Програмний код має бути написаний максимально універсально без
прив’язки у класах, що реалізують основний функціонал до інтерфейсу.
Передбачається, що дані класи потрібно буде використовувати в наступних
лабораторних роботах.
Вимоги до програми шифрування файлів
1. Графічний інтерфейс користувача з можливістю вводу ключа для
шифрування та діалогу вибору довільного файлу, який буде шифруватись
або розшифровуватись.
2. Здатність працювати з файлами довільного розміру та формату.
3. В процесі шифрування, повинен відображатись індикатор прогресу (0-100%)
та час, який пройшов від запуску шифрування.
4. По завершенні шифрування повинне бути відображене вікно з інформацією
про розмір зашифрованого файла, його назву та час, затрачений на
шифрування.
5. Необхідно запобігти «підвисанню» вікна при здійсненні операції шифрування
(шифрування здійснюватись в окремому обчислювальному потоці за
допомогою класу BackgroundWorker) .
6. Коректна обробка виключень, що можуть виникати під час роботи.
7. Для успішного виконання роботи необхідно ознайомитися з наступними
темами: асинхронні операції (клас BackgroundWorker), класи File, FileStream,
Timer, DateTime, OpenFileDialog, SaveFileDialog, обробка виключень.
Вимоги до менеджера процесів
1. Можливість запуску програм: Калькулятор, Microsoft Word та ще трьох на
ваш вибір.
2. Перегляд список запущених процесів з інформацією про обсяг оперативної
пам'яті, виділений під процес, часу, коли був запущений процес, пріоритет
процесу, кількість потоків, які запущені процесом. Відобразити у вигляді
таблиці.
3. Можливість зупинки вибраного процесу.
4. Можливість зміни пріоритету вибраного процесу.
B. Запушити виконану роботу у репозиторій на git.ztu.edu.ua або GitLab з назвою
DotNetLab3 та надати доступ до репозиторію викладачеві, який проводить
практичні заняття:
 Власенко Олег Васильович (wellwisher.vls@gmail.com) Савчук Іван Олександрович (kipz_sio@ztu.edu.ua) Чижмотря Олексій Володимирович (4ov.ztu@gmail.com)Лабораторна робота №3
Тема: Багатопотоковість у C#.
Мета роботи: навчитися працювати з потоками та
процесами у мові C#.
Виділений час: 18 годин (6 годин практичних робіт та 12
годин самостійної роботи).
Завдання:
A. Розробити дві програми:
1) шифрування файлів;
2) менеджер процесів.
Програмний код має бути написаний максимально універсально без
прив’язки у класах, що реалізують основний функціонал до інтерфейсу.
Передбачається, що дані класи потрібно буде використовувати в наступних
лабораторних роботах.
Вимоги до програми шифрування файлів
1. Графічний інтерфейс користувача з можливістю вводу ключа для
шифрування та діалогу вибору довільного файлу, який буде шифруватись
або розшифровуватись.
2. Здатність працювати з файлами довільного розміру та формату.
3. В процесі шифрування, повинен відображатись індикатор прогресу (0-100%)
та час, який пройшов від запуску шифрування.
4. По завершенні шифрування повинне бути відображене вікно з інформацією
про розмір зашифрованого файла, його назву та час, затрачений на
шифрування.
5. Необхідно запобігти «підвисанню» вікна при здійсненні операції шифрування
(шифрування здійснюватись в окремому обчислювальному потоці за
допомогою класу BackgroundWorker) .
6. Коректна обробка виключень, що можуть виникати під час роботи.
7. Для успішного виконання роботи необхідно ознайомитися з наступними
темами: асинхронні операції (клас BackgroundWorker), класи File, FileStream,
Timer, DateTime, OpenFileDialog, SaveFileDialog, обробка виключень.
Вимоги до менеджера процесів
1. Можливість запуску програм: Калькулятор, Microsoft Word та ще трьох на
ваш вибір.
2. Перегляд список запущених процесів з інформацією про обсяг оперативної
пам'яті, виділений під процес, часу, коли був запущений процес, пріоритет
процесу, кількість потоків, які запущені процесом. Відобразити у вигляді
таблиці.
3. Можливість зупинки вибраного процесу.
4. Можливість зміни пріоритету вибраного процесу.
B. Запушити виконану роботу у репозиторій на git.ztu.edu.ua або GitLab з назвою
DotNetLab3 та надати доступ до репозиторію викладачеві, який проводить
практичні заняття:
 Власенко Олег Васильович (wellwisher.vls@gmail.com) Савчук Іван Олександрович (kipz_sio@ztu.edu.ua) Чижмотря Олексій Володимирович (4ov.ztu@gmail.com)Лабораторна робота №3
Тема: Багатопотоковість у C#.
Мета роботи: навчитися працювати з потоками та
процесами у мові C#.
Виділений час: 18 годин (6 годин практичних робіт та 12
годин самостійної роботи).
Завдання:
A. Розробити дві програми:
1) шифрування файлів;
2) менеджер процесів.
Програмний код має бути написаний максимально універсально без
прив’язки у класах, що реалізують основний функціонал до інтерфейсу.
Передбачається, що дані класи потрібно буде використовувати в наступних
лабораторних роботах.
Вимоги до програми шифрування файлів
1. Графічний інтерфейс користувача з можливістю вводу ключа для
шифрування та діалогу вибору довільного файлу, який буде шифруватись
або розшифровуватись.
2. Здатність працювати з файлами довільного розміру та формату.
3. В процесі шифрування, повинен відображатись індикатор прогресу (0-100%)
та час, який пройшов від запуску шифрування.
4. По завершенні шифрування повинне бути відображене вікно з інформацією
про розмір зашифрованого файла, його назву та час, затрачений на
шифрування.
5. Необхідно запобігти «підвисанню» вікна при здійсненні операції шифрування
(шифрування здійснюватись в окремому обчислювальному потоці за
допомогою класу BackgroundWorker) .
6. Коректна обробка виключень, що можуть виникати під час роботи.
7. Для успішного виконання роботи необхідно ознайомитися з наступними
темами: асинхронні операції (клас BackgroundWorker), класи File, FileStream,
Timer, DateTime, OpenFileDialog, SaveFileDialog, обробка виключень.
Вимоги до менеджера процесів
1. Можливість запуску програм: Калькулятор, Microsoft Word та ще трьох на
ваш вибір.
2. Перегляд список запущених процесів з інформацією про обсяг оперативної
пам'яті, виділений під процес, часу, коли був запущений процес, пріоритет
процесу, кількість потоків, які запущені процесом. Відобразити у вигляді
таблиці.
3. Можливість зупинки вибраного процесу.
4. Можливість зміни пріоритету вибраного процесу.
B. Запушити виконану роботу у репозиторій на git.ztu.edu.ua або GitLab з назвою
DotNetLab3 та надати доступ до репозиторію викладачеві, який проводить
практичні заняття:
 Власенко Олег Васильович (wellwisher.vls@gmail.com) Савчук Іван Олександрович (kipz_sio@ztu.edu.ua) Чижмотря Олексій Володимирович (4ov.ztu@gmail.com)Лабораторна робота №3
Тема: Багатопотоковість у C#.
Мета роботи: навчитися працювати з потоками та
процесами у мові C#.
Виділений час: 18 годин (6 годин практичних робіт та 12
годин самостійної роботи).
Завдання:
A. Розробити дві програми:
1) шифрування файлів;
2) менеджер процесів.
Програмний код має бути написаний максимально універсально без
прив’язки у класах, що реалізують основний функціонал до інтерфейсу.
Передбачається, що дані класи потрібно буде використовувати в наступних
лабораторних роботах.
Вимоги до програми шифрування файлів
1. Графічний інтерфейс користувача з можливістю вводу ключа для
шифрування та діалогу вибору довільного файлу, який буде шифруватись
або розшифровуватись.
2. Здатність працювати з файлами довільного розміру та формату.
3. В процесі шифрування, повинен відображатись індикатор прогресу (0-100%)
та час, який пройшов від запуску шифрування.
4. По завершенні шифрування повинне бути відображене вікно з інформацією
про розмір зашифрованого файла, його назву та час, затрачений на
шифрування.
5. Необхідно запобігти «підвисанню» вікна при здійсненні операції шифрування
(шифрування здійснюватись в окремому обчислювальному потоці за
допомогою класу BackgroundWorker) .
6. Коректна обробка виключень, що можуть виникати під час роботи.
7. Для успішного виконання роботи необхідно ознайомитися з наступними
темами: асинхронні операції (клас BackgroundWorker), класи File, FileStream,
Timer, DateTime, OpenFileDialog, SaveFileDialog, обробка виключень.
Вимоги до менеджера процесів
1. Можливість запуску програм: Калькулятор, Microsoft Word та ще трьох на
ваш вибір.
2. Перегляд список запущених процесів з інформацією про обсяг оперативної
пам'яті, виділений під процес, часу, коли був запущений процес, пріоритет
процесу, кількість потоків, які запущені процесом. Відобразити у вигляді
таблиці.
3. Можливість зупинки вибраного процесу.
4. Можливість зміни пріоритету вибраного процесу.
B. Запушити виконану роботу у репозиторій на git.ztu.edu.ua або GitLab з назвою
DotNetLab3 та надати доступ до репозиторію викладачеві, який проводить
практичні заняття:
 Власенко Олег Васильович (wellwisher.vls@gmail.com) Савчук Іван Олександрович (kipz_sio@ztu.edu.ua) Чижмотря Олексій Володимирович (4ov.ztu@gmail.com)Лабораторна робота №3
Тема: Багатопотоковість у C#.
Мета роботи: навчитися працювати з потоками та
процесами у мові C#.
Виділений час: 18 годин (6 годин практичних робіт та 12
годин самостійної роботи).
Завдання:
A. Розробити дві програми:
1) шифрування файлів;
2) менеджер процесів.
Програмний код має бути написаний максимально універсально без
прив’язки у класах, що реалізують основний функціонал до інтерфейсу.
Передбачається, що дані класи потрібно буде використовувати в наступних
лабораторних роботах.
Вимоги до програми шифрування файлів
1. Графічний інтерфейс користувача з можливістю вводу ключа для
шифрування та діалогу вибору довільного файлу, який буде шифруватись
або розшифровуватись.
2. Здатність працювати з файлами довільного розміру та формату.
3. В процесі шифрування, повинен відображатись індикатор прогресу (0-100%)
та час, який пройшов від запуску шифрування.
4. По завершенні шифрування повинне бути відображене вікно з інформацією
про розмір зашифрованого файла, його назву та час, затрачений на
шифрування.
5. Необхідно запобігти «підвисанню» вікна при здійсненні операції шифрування
(шифрування здійснюватись в окремому обчислювальному потоці за
допомогою класу BackgroundWorker) .
6. Коректна обробка виключень, що можуть виникати під час роботи.
7. Для успішного виконання роботи необхідно ознайомитися з наступними
темами: асинхронні операції (клас BackgroundWorker), класи File, FileStream,
Timer, DateTime, OpenFileDialog, SaveFileDialog, обробка виключень.
Вимоги до менеджера процесів
1. Можливість запуску програм: Калькулятор, Microsoft Word та ще трьох на
ваш вибір.
2. Перегляд список запущених процесів з інформацією про обсяг оперативної
пам'яті, виділений під процес, часу, коли був запущений процес, пріоритет
процесу, кількість потоків, які запущені процесом. Відобразити у вигляді
таблиці.
3. Можливість зупинки вибраного процесу.
4. Можливість зміни пріоритету вибраного процесу.
B. Запушити виконану роботу у репозиторій на git.ztu.edu.ua або GitLab з назвою
DotNetLab3 та надати доступ до репозиторію викладачеві, який проводить
практичні заняття:
 Власенко Олег Васильович (wellwisher.vls@gmail.com) Савчук Іван Олександрович (kipz_sio@ztu.edu.ua) Чижмотря Олексій Володимирович (4ov.ztu@gmail.com)Лабораторна робота №3
Тема: Багатопотоковість у C#.
Мета роботи: навчитися працювати з потоками та
процесами у мові C#.
Виділений час: 18 годин (6 годин практичних робіт та 12
годин самостійної роботи).
Завдання:
A. Розробити дві програми:
1) шифрування файлів;
2) менеджер процесів.
Програмний код має бути написаний максимально універсально без
прив’язки у класах, що реалізують основний функціонал до інтерфейсу.
Передбачається, що дані класи потрібно буде використовувати в наступних
лабораторних роботах.
Вимоги до програми шифрування файлів
1. Графічний інтерфейс користувача з можливістю вводу ключа для
шифрування та діалогу вибору довільного файлу, який буде шифруватись
або розшифровуватись.
2. Здатність працювати з файлами довільного розміру та формату.
3. В процесі шифрування, повинен відображатись індикатор прогресу (0-100%)
та час, який пройшов від запуску шифрування.
4. По завершенні шифрування повинне бути відображене вікно з інформацією
про розмір зашифрованого файла, його назву та час, затрачений на
шифрування.
5. Необхідно запобігти «підвисанню» вікна при здійсненні операції шифрування
(шифрування здійснюватись в окремому обчислювальному потоці за
допомогою класу BackgroundWorker) .
6. Коректна обробка виключень, що можуть виникати під час роботи.
7. Для успішного виконання роботи необхідно ознайомитися з наступними
темами: асинхронні операції (клас BackgroundWorker), класи File, FileStream,
Timer, DateTime, OpenFileDialog, SaveFileDialog, обробка виключень.
Вимоги до менеджера процесів
1. Можливість запуску програм: Калькулятор, Microsoft Word та ще трьох на
ваш вибір.
2. Перегляд список запущених процесів з інформацією про обсяг оперативної
пам'яті, виділений під процес, часу, коли був запущений процес, пріоритет
процесу, кількість потоків, які запущені процесом. Відобразити у вигляді
таблиці.
3. Можливість зупинки вибраного процесу.
4. Можливість зміни пріоритету вибраного процесу.
B. Запушити виконану роботу у репозиторій на git.ztu.edu.ua або GitLab з назвою
DotNetLab3 та надати доступ до репозиторію викладачеві, який проводить
практичні заняття:
 Власенко Олег Васильович (wellwisher.vls@gmail.com) Савчук Іван Олександрович (kipz_sio@ztu.edu.ua) Чижмотря Олексій Володимирович (4ov.ztu@gmail.com)Лабораторна робота №3
Тема: Багатопотоковість у C#.
Мета роботи: навчитися працювати з потоками та
процесами у мові C#.
Виділений час: 18 годин (6 годин практичних робіт та 12
годин самостійної роботи).
Завдання:
A. Розробити дві програми:
1) шифрування файлів;
2) менеджер процесів.
Програмний код має бути написаний максимально універсально без
прив’язки у класах, що реалізують основний функціонал до інтерфейсу.
Передбачається, що дані класи потрібно буде використовувати в наступних
лабораторних роботах.
Вимоги до програми шифрування файлів
1. Графічний інтерфейс користувача з можливістю вводу ключа для
шифрування та діалогу вибору довільного файлу, який буде шифруватись
або розшифровуватись.
2. Здатність працювати з файлами довільного розміру та формату.
3. В процесі шифрування, повинен відображатись індикатор прогресу (0-100%)
та час, який пройшов від запуску шифрування.
4. По завершенні шифрування повинне бути відображене вікно з інформацією
про розмір зашифрованого файла, його назву та час, затрачений на
шифрування.
5. Необхідно запобігти «підвисанню» вікна при здійсненні операції шифрування
(шифрування здійснюватись в окремому обчислювальному потоці за
допомогою класу BackgroundWorker) .
6. Коректна обробка виключень, що можуть виникати під час роботи.
7. Для успішного виконання роботи необхідно ознайомитися з наступними
темами: асинхронні операції (клас BackgroundWorker), класи File, FileStream,
Timer, DateTime, OpenFileDialog, SaveFileDialog, обробка виключень.
Вимоги до менеджера процесів
1. Можливість запуску програм: Калькулятор, Microsoft Word та ще трьох на
ваш вибір.
2. Перегляд список запущених процесів з інформацією про обсяг оперативної
пам'яті, виділений під процес, часу, коли був запущений процес, пріоритет
процесу, кількість потоків, які запущені процесом. Відобразити у вигляді
таблиці.
3. Можливість зупинки вибраного процесу.
4. Можливість зміни пріоритету вибраного процесу.
B. Запушити виконану роботу у репозиторій на git.ztu.edu.ua або GitLab з назвою
DotNetLab3 та надати доступ до репозиторію викладачеві, який проводить
практичні заняття:
 Власенко Олег Васильович (wellwisher.vls@gmail.com) Савчук Іван Олександрович (kipz_sio@ztu.edu.ua) Чижмотря Олексій Володимирович (4ov.ztu@gmail.com)Лабораторна робота №3
Тема: Багатопотоковість у C#.
Мета роботи: навчитися працювати з потоками та
процесами у мові C#.
Виділений час: 18 годин (6 годин практичних робіт та 12
годин самостійної роботи).
Завдання:
A. Розробити дві програми:
1) шифрування файлів;
2) менеджер процесів.
Програмний код має бути написаний максимально універсально без
прив’язки у класах, що реалізують основний функціонал до інтерфейсу.
Передбачається, що дані класи потрібно буде використовувати в наступних
лабораторних роботах.
Вимоги до програми шифрування файлів
1. Графічний інтерфейс користувача з можливістю вводу ключа для
шифрування та діалогу вибору довільного файлу, який буде шифруватись
або розшифровуватись.
2. Здатність працювати з файлами довільного розміру та формату.
3. В процесі шифрування, повинен відображатись індикатор прогресу (0-100%)
та час, який пройшов від запуску шифрування.
4. По завершенні шифрування повинне бути відображене вікно з інформацією
про розмір зашифрованого файла, його назву та час, затрачений на
шифрування.
5. Необхідно запобігти «підвисанню» вікна при здійсненні операції шифрування
(шифрування здійснюватись в окремому обчислювальному потоці за
допомогою класу BackgroundWorker) .
6. Коректна обробка виключень, що можуть виникати під час роботи.
7. Для успішного виконання роботи необхідно ознайомитися з наступними
темами: асинхронні операції (клас BackgroundWorker), класи File, FileStream,
Timer, DateTime, OpenFileDialog, SaveFileDialog, обробка виключень.
Вимоги до менеджера процесів
1. Можливість запуску програм: Калькулятор, Microsoft Word та ще трьох на
ваш вибір.
2. Перегляд список запущених процесів з інформацією про обсяг оперативної
пам'яті, виділений під процес, часу, коли був запущений процес, пріоритет
процесу, кількість потоків, які запущені процесом. Відобразити у вигляді
таблиці.
3. Можливість зупинки вибраного процесу.
4. Можливість зміни пріоритету вибраного процесу.
B. Запушити виконану роботу у репозиторій на git.ztu.edu.ua або GitLab з назвою
DotNetLab3 та надати доступ до репозиторію викладачеві, який проводить
практичні заняття:
 Власенко Олег Васильович (wellwisher.vls@gmail.com) Савчук Іван Олександрович (kipz_sio@ztu.edu.ua) Чижмотря Олексій Володимирович (4ov.ztu@gmail.com)Лабораторна робота №3
Тема: Багатопотоковість у C#.
Мета роботи: навчитися працювати з потоками та
процесами у мові C#.
Виділений час: 18 годин (6 годин практичних робіт та 12
годин самостійної роботи).
Завдання:
A. Розробити дві програми:
1) шифрування файлів;
2) менеджер процесів.
Програмний код має бути написаний максимально універсально без
прив’язки у класах, що реалізують основний функціонал до інтерфейсу.
Передбачається, що дані класи потрібно буде використовувати в наступних
лабораторних роботах.
Вимоги до програми шифрування файлів
1. Графічний інтерфейс користувача з можливістю вводу ключа для
шифрування та діалогу вибору довільного файлу, який буде шифруватись
або розшифровуватись.
2. Здатність працювати з файлами довільного розміру та формату.
3. В процесі шифрування, повинен відображатись індикатор прогресу (0-100%)
та час, який пройшов від запуску шифрування.
4. По завершенні шифрування повинне бути відображене вікно з інформацією
про розмір зашифрованого файла, його назву та час, затрачений на
шифрування.
5. Необхідно запобігти «підвисанню» вікна при здійсненні операції шифрування
(шифрування здійснюватись в окремому обчислювальному потоці за
допомогою класу BackgroundWorker) .
6. Коректна обробка виключень, що можуть виникати під час роботи.
7. Для успішного виконання роботи необхідно ознайомитися з наступними
темами: асинхронні операції (клас BackgroundWorker), класи File, FileStream,
Timer, DateTime, OpenFileDialog, SaveFileDialog, обробка виключень.
Вимоги до менеджера процесів
1. Можливість запуску програм: Калькулятор, Microsoft Word та ще трьох на
ваш вибір.
2. Перегляд список запущених процесів з інформацією про обсяг оперативної
пам'яті, виділений під процес, часу, коли був запущений процес, пріоритет
процесу, кількість потоків, які запущені процесом. Відобразити у вигляді
таблиці.
3. Можливість зупинки вибраного процесу.
4. Можливість зміни пріоритету вибраного процесу.
B. Запушити виконану роботу у репозиторій на git.ztu.edu.ua або GitLab з назвою
DotNetLab3 та надати доступ до репозиторію викладачеві, який проводить
практичні заняття:
 Власенко Олег Васильович (wellwisher.vls@gmail.com) Савчук Іван Олександрович (kipz_sio@ztu.edu.ua) Чижмотря Олексій Володимирович (4ov.ztu@gmail.com)Лабораторна робота №3
Тема: Багатопотоковість у C#.
Мета роботи: навчитися працювати з потоками та
процесами у мові C#.
Виділений час: 18 годин (6 годин практичних робіт та 12
годин самостійної роботи).
Завдання:
A. Розробити дві програми:
1) шифрування файлів;
2) менеджер процесів.
Програмний код має бути написаний максимально універсально без
прив’язки у класах, що реалізують основний функціонал до інтерфейсу.
Передбачається, що дані класи потрібно буде використовувати в наступних
лабораторних роботах.
Вимоги до програми шифрування файлів
1. Графічний інтерфейс користувача з можливістю вводу ключа для
шифрування та діалогу вибору довільного файлу, який буде шифруватись
або розшифровуватись.
2. Здатність працювати з файлами довільного розміру та формату.
3. В процесі шифрування, повинен відображатись індикатор прогресу (0-100%)
та час, який пройшов від запуску шифрування.
4. По завершенні шифрування повинне бути відображене вікно з інформацією
про розмір зашифрованого файла, його назву та час, затрачений на
шифрування.
5. Необхідно запобігти «підвисанню» вікна при здійсненні операції шифрування
(шифрування здійснюватись в окремому обчислювальному потоці за
допомогою класу BackgroundWorker) .
6. Коректна обробка виключень, що можуть виникати під час роботи.
7. Для успішного виконання роботи необхідно ознайомитися з наступними
темами: асинхронні операції (клас BackgroundWorker), класи File, FileStream,
Timer, DateTime, OpenFileDialog, SaveFileDialog, обробка виключень.
Вимоги до менеджера процесів
1. Можливість запуску програм: Калькулятор, Microsoft Word та ще трьох на
ваш вибір.
2. Перегляд список запущених процесів з інформацією про обсяг оперативної
пам'яті, виділений під процес, часу, коли був запущений процес, пріоритет
процесу, кількість потоків, які запущені процесом. Відобразити у вигляді
таблиці.
3. Можливість зупинки вибраного процесу.
4. Можливість зміни пріоритету вибраного процесу.
B. Запушити виконану роботу у репозиторій на git.ztu.edu.ua або GitLab з назвою
DotNetLab3 та надати доступ до репозиторію викладачеві, який проводить
практичні заняття:
 Власенко Олег Васильович (wellwisher.vls@gmail.com) Савчук Іван Олександрович (kipz_sio@ztu.edu.ua) Чижмотря Олексій Володимирович (4ov.ztu@gmail.com)Лабораторна робота №3
Тема: Багатопотоковість у C#.
Мета роботи: навчитися працювати з потоками та
процесами у мові C#.
Виділений час: 18 годин (6 годин практичних робіт та 12
годин самостійної роботи).
Завдання:
A. Розробити дві програми:
1) шифрування файлів;
2) менеджер процесів.
Програмний код має бути написаний максимально універсально без
прив’язки у класах, що реалізують основний функціонал до інтерфейсу.
Передбачається, що дані класи потрібно буде використовувати в наступних
лабораторних роботах.
Вимоги до програми шифрування файлів
1. Графічний інтерфейс користувача з можливістю вводу ключа для
шифрування та діалогу вибору довільного файлу, який буде шифруватись
або розшифровуватись.
2. Здатність працювати з файлами довільного розміру та формату.
3. В процесі шифрування, повинен відображатись індикатор прогресу (0-100%)
та час, який пройшов від запуску шифрування.
4. По завершенні шифрування повинне бути відображене вікно з інформацією
про розмір зашифрованого файла, його назву та час, затрачений на
шифрування.
5. Необхідно запобігти «підвисанню» вікна при здійсненні операції шифрування
(шифрування здійснюватись в окремому обчислювальному потоці за
допомогою класу BackgroundWorker) .
6. Коректна обробка виключень, що можуть виникати під час роботи.
7. Для успішного виконання роботи необхідно ознайомитися з наступними
темами: асинхронні операції (клас BackgroundWorker), класи File, FileStream,
Timer, DateTime, OpenFileDialog, SaveFileDialog, обробка виключень.
Вимоги до менеджера процесів
1. Можливість запуску програм: Калькулятор, Microsoft Word та ще трьох на
ваш вибір.
2. Перегляд список запущених процесів з інформацією про обсяг оперативної
пам'яті, виділений під процес, часу, коли був запущений процес, пріоритет
процесу, кількість потоків, які запущені процесом. Відобразити у вигляді
таблиці.
3. Можливість зупинки вибраного процесу.
4. Можливість зміни пріоритету вибраного процесу.
B. Запушити виконану роботу у репозиторій на git.ztu.edu.ua або GitLab з назвою
DotNetLab3 та надати доступ до репозиторію викладачеві, який проводить
практичні заняття:
 Власенко Олег Васильович (wellwisher.vls@gmail.com) Савчук Іван Олександрович (kipz_sio@ztu.edu.ua) Чижмотря Олексій Володимирович (4ov.ztu@gmail.com)Лабораторна робота №3
Тема: Багатопотоковість у C#.
Мета роботи: навчитися працювати з потоками та
процесами у мові C#.
Виділений час: 18 годин (6 годин практичних робіт та 12
годин самостійної роботи).
Завдання:
A. Розробити дві програми:
1) шифрування файлів;
2) менеджер процесів.
Програмний код має бути написаний максимально універсально без
прив’язки у класах, що реалізують основний функціонал до інтерфейсу.
Передбачається, що дані класи потрібно буде використовувати в наступних
лабораторних роботах.
Вимоги до програми шифрування файлів
1. Графічний інтерфейс користувача з можливістю вводу ключа для
шифрування та діалогу вибору довільного файлу, який буде шифруватись
або розшифровуватись.
2. Здатність працювати з файлами довільного розміру та формату.
3. В процесі шифрування, повинен відображатись індикатор прогресу (0-100%)
та час, який пройшов від запуску шифрування.
4. По завершенні шифрування повинне бути відображене вікно з інформацією
про розмір зашифрованого файла, його назву та час, затрачений на
шифрування.
5. Необхідно запобігти «підвисанню» вікна при здійсненні операції шифрування
(шифрування здійснюватись в окремому обчислювальному потоці за
допомогою класу BackgroundWorker) .
6. Коректна обробка виключень, що можуть виникати під час роботи.
7. Для успішного виконання роботи необхідно ознайомитися з наступними
темами: асинхронні операції (клас BackgroundWorker), класи File, FileStream,
Timer, DateTime, OpenFileDialog, SaveFileDialog, обробка виключень.
Вимоги до менеджера процесів
1. Можливість запуску програм: Калькулятор, Microsoft Word та ще трьох на
ваш вибір.
2. Перегляд список запущених процесів з інформацією про обсяг оперативної
пам'яті, виділений під процес, часу, коли був запущений процес, пріоритет
процесу, кількість потоків, які запущені процесом. Відобразити у вигляді
таблиці.
3. Можливість зупинки вибраного процесу.
4. Можливість зміни пріоритету вибраного процесу.
B. Запушити виконану роботу у репозиторій на git.ztu.edu.ua або GitLab з назвою
DotNetLab3 та надати доступ до репозиторію викладачеві, який проводить
практичні заняття:
 Власенко Олег Васильович (wellwisher.vls@gmail.com) Савчук Іван Олександрович (kipz_sio@ztu.edu.ua) Чижмотря Олексій Володимирович (4ov.ztu@gmail.com)Лабораторна робота №3
Тема: Багатопотоковість у C#.
Мета роботи: навчитися працювати з потоками та
процесами у мові C#.
Виділений час: 18 годин (6 годин практичних робіт та 12
годин самостійної роботи).
Завдання:
A. Розробити дві програми:
1) шифрування файлів;
2) менеджер процесів.
Програмний код має бути написаний максимально універсально без
прив’язки у класах, що реалізують основний функціонал до інтерфейсу.
Передбачається, що дані класи потрібно буде використовувати в наступних
лабораторних роботах.
Вимоги до програми шифрування файлів
1. Графічний інтерфейс користувача з можливістю вводу ключа для
шифрування та діалогу вибору довільного файлу, який буде шифруватись
або розшифровуватись.
2. Здатність працювати з файлами довільного розміру та формату.
3. В процесі шифрування, повинен відображатись індикатор прогресу (0-100%)
та час, який пройшов від запуску шифрування.
4. По завершенні шифрування повинне бути відображене вікно з інформацією
про розмір зашифрованого файла, його назву та час, затрачений на
шифрування.
5. Необхідно запобігти «підвисанню» вікна при здійсненні операції шифрування
(шифрування здійснюватись в окремому обчислювальному потоці за
допомогою класу BackgroundWorker) .
6. Коректна обробка виключень, що можуть виникати під час роботи.
7. Для успішного виконання роботи необхідно ознайомитися з наступними
темами: асинхронні операції (клас BackgroundWorker), класи File, FileStream,
Timer, DateTime, OpenFileDialog, SaveFileDialog, обробка виключень.
Вимоги до менеджера процесів
1. Можливість запуску програм: Калькулятор, Microsoft Word та ще трьох на
ваш вибір.
2. Перегляд список запущених процесів з інформацією про обсяг оперативної
пам'яті, виділений під процес, часу, коли був запущений процес, пріоритет
процесу, кількість потоків, які запущені процесом. Відобразити у вигляді
таблиці.
3. Можливість зупинки вибраного процесу.
4. Можливість зміни пріоритету вибраного процесу.
B. Запушити виконану роботу у репозиторій на git.ztu.edu.ua або GitLab з назвою
DotNetLab3 та надати доступ до репозиторію викладачеві, який проводить
практичні заняття:
 Власенко Олег Васильович (wellwisher.vls@gmail.com) Савчук Іван Олександрович (kipz_sio@ztu.edu.ua) Чижмотря Олексій Володимирович (4ov.ztu@gmail.com)Лабораторна робота №3
Тема: Багатопотоковість у C#.
Мета роботи: навчитися працювати з потоками та
процесами у мові C#.
Виділений час: 18 годин (6 годин практичних робіт та 12
годин самостійної роботи).
Завдання:
A. Розробити дві програми:
1) шифрування файлів;
2) менеджер процесів.
Програмний код має бути написаний максимально універсально без
прив’язки у класах, що реалізують основний функціонал до інтерфейсу.
Передбачається, що дані класи потрібно буде використовувати в наступних
лабораторних роботах.
Вимоги до програми шифрування файлів
1. Графічний інтерфейс користувача з можливістю вводу ключа для
шифрування та діалогу вибору довільного файлу, який буде шифруватись
або розшифровуватись.
2. Здатність працювати з файлами довільного розміру та формату.
3. В процесі шифрування, повинен відображатись індикатор прогресу (0-100%)
та час, який пройшов від запуску шифрування.
4. По завершенні шифрування повинне бути відображене вікно з інформацією
про розмір зашифрованого файла, його назву та час, затрачений на
шифрування.
5. Необхідно запобігти «підвисанню» вікна при здійсненні операції шифрування
(шифрування здійснюватись в окремому обчислювальному потоці за
допомогою класу BackgroundWorker) .
6. Коректна обробка виключень, що можуть виникати під час роботи.
7. Для успішного виконання роботи необхідно ознайомитися з наступними
темами: асинхронні операції (клас BackgroundWorker), класи File, FileStream,
Timer, DateTime, OpenFileDialog, SaveFileDialog, обробка виключень.
Вимоги до менеджера процесів
1. Можливість запуску програм: Калькулятор, Microsoft Word та ще трьох на
ваш вибір.
2. Перегляд список запущених процесів з інформацією про обсяг оперативної
пам'яті, виділений під процес, часу, коли був запущений процес, пріоритет
процесу, кількість потоків, які запущені процесом. Відобразити у вигляді
таблиці.
3. Можливість зупинки вибраного процесу.
4. Можливість зміни пріоритету вибраного процесу.
B. Запушити виконану роботу у репозиторій на git.ztu.edu.ua або GitLab з назвою
DotNetLab3 та надати доступ до репозиторію викладачеві, який проводить
практичні заняття:
 Власенко Олег Васильович (wellwisher.vls@gmail.com) Савчук Іван Олександрович (kipz_sio@ztu.edu.ua) Чижмотря Олексій Володимирович (4ov.ztu@gmail.com)Лабораторна робота №3
Тема: Багатопотоковість у C#.
Мета роботи: навчитися працювати з потоками та
процесами у мові C#.
Виділений час: 18 годин (6 годин практичних робіт та 12
годин самостійної роботи).
Завдання:
A. Розробити дві програми:
1) шифрування файлів;
2) менеджер процесів.
Програмний код має бути написаний максимально універсально без
прив’язки у класах, що реалізують основний функціонал до інтерфейсу.
Передбачається, що дані класи потрібно буде використовувати в наступних
лабораторних роботах.
Вимоги до програми шифрування файлів
1. Графічний інтерфейс користувача з можливістю вводу ключа для
шифрування та діалогу вибору довільного файлу, який буде шифруватись
або розшифровуватись.
2. Здатність працювати з файлами довільного розміру та формату.
3. В процесі шифрування, повинен відображатись індикатор прогресу (0-100%)
та час, який пройшов від запуску шифрування.
4. По завершенні шифрування повинне бути відображене вікно з інформацією
про розмір зашифрованого файла, його назву та час, затрачений на
шифрування.
5. Необхідно запобігти «підвисанню» вікна при здійсненні операції шифрування
(шифрування здійснюватись в окремому обчислювальному потоці за
допомогою класу BackgroundWorker) .
6. Коректна обробка виключень, що можуть виникати під час роботи.
7. Для успішного виконання роботи необхідно ознайомитися з наступними
темами: асинхронні операції (клас BackgroundWorker), класи File, FileStream,
Timer, DateTime, OpenFileDialog, SaveFileDialog, обробка виключень.
Вимоги до менеджера процесів
1. Можливість запуску програм: Калькулятор, Microsoft Word та ще трьох на
ваш вибір.
2. Перегляд список запущених процесів з інформацією про обсяг оперативної
пам'яті, виділений під процес, часу, коли був запущений процес, пріоритет
процесу, кількість потоків, які запущені процесом. Відобразити у вигляді
таблиці.
3. Можливість зупинки вибраного процесу.
4. Можливість зміни пріоритету вибраного процесу.
B. Запушити виконану роботу у репозиторій на git.ztu.edu.ua або GitLab з назвою
DotNetLab3 та надати доступ до репозиторію викладачеві, який проводить
практичні заняття:
 Власенко Олег Васильович (wellwisher.vls@gmail.com) Савчук Іван Олександрович (kipz_sio@ztu.edu.ua) Чижмотря Олексій Володимирович (4ov.ztu@gmail.com)Лабораторна робота №3
Тема: Багатопотоковість у C#.
Мета роботи: навчитися працювати з потоками та
процесами у мові C#.
Виділений час: 18 годин (6 годин практичних робіт та 12
годин самостійної роботи).
Завдання:
A. Розробити дві програми:
1) шифрування файлів;
2) менеджер процесів.
Програмний код має бути написаний максимально універсально без
прив’язки у класах, що реалізують основний функціонал до інтерфейсу.
Передбачається, що дані класи потрібно буде використовувати в наступних
лабораторних роботах.
Вимоги до програми шифрування файлів
1. Графічний інтерфейс користувача з можливістю вводу ключа для
шифрування та діалогу вибору довільного файлу, який буде шифруватись
або розшифровуватись.
2. Здатність працювати з файлами довільного розміру та формату.
3. В процесі шифрування, повинен відображатись індикатор прогресу (0-100%)
та час, який пройшов від запуску шифрування.
4. По завершенні шифрування повинне бути відображене вікно з інформацією
про розмір зашифрованого файла, його назву та час, затрачений на
шифрування.
5. Необхідно запобігти «підвисанню» вікна при здійсненні операції шифрування
(шифрування здійснюватись в окремому обчислювальному потоці за
допомогою класу BackgroundWorker) .
6. Коректна обробка виключень, що можуть виникати під час роботи.
7. Для успішного виконання роботи необхідно ознайомитися з наступними
темами: асинхронні операції (клас BackgroundWorker), класи File, FileStream,
Timer, DateTime, OpenFileDialog, SaveFileDialog, обробка виключень.
Вимоги до менеджера процесів
1. Можливість запуску програм: Калькулятор, Microsoft Word та ще трьох на
ваш вибір.
2. Перегляд список запущених процесів з інформацією про обсяг оперативної
пам'яті, виділений під процес, часу, коли був запущений процес, пріоритет
процесу, кількість потоків, які запущені процесом. Відобразити у вигляді
таблиці.
3. Можливість зупинки вибраного процесу.
4. Можливість зміни пріоритету вибраного процесу.
B. Запушити виконану роботу у репозиторій на git.ztu.edu.ua або GitLab з назвою
DotNetLab3 та надати доступ до репозиторію викладачеві, який проводить
практичні заняття:
 Власенко Олег Васильович (wellwisher.vls@gmail.com) Савчук Іван Олександрович (kipz_sio@ztu.edu.ua) Чижмотря Олексій Володимирович (4ov.ztu@gmail.com)Лабораторна робота №3
Тема: Багатопотоковість у C#.
Мета роботи: навчитися працювати з потоками та
процесами у мові C#.
Виділений час: 18 годин (6 годин практичних робіт та 12
годин самостійної роботи).
Завдання:
A. Розробити дві програми:
1) шифрування файлів;
2) менеджер процесів.
Програмний код має бути написаний максимально універсально без
прив’язки у класах, що реалізують основний функціонал до інтерфейсу.
Передбачається, що дані класи потрібно буде використовувати в наступних
лабораторних роботах.
Вимоги до програми шифрування файлів
1. Графічний інтерфейс користувача з можливістю вводу ключа для
шифрування та діалогу вибору довільного файлу, який буде шифруватись
або розшифровуватись.
2. Здатність працювати з файлами довільного розміру та формату.
3. В процесі шифрування, повинен відображатись індикатор прогресу (0-100%)
та час, який пройшов від запуску шифрування.
4. По завершенні шифрування повинне бути відображене вікно з інформацією
про розмір зашифрованого файла, його назву та час, затрачений на
шифрування.
5. Необхідно запобігти «підвисанню» вікна при здійсненні операції шифрування
(шифрування здійснюватись в окремому обчислювальному потоці за
допомогою класу BackgroundWorker) .
6. Коректна обробка виключень, що можуть виникати під час роботи.
7. Для успішного виконання роботи необхідно ознайомитися з наступними
темами: асинхронні операції (клас BackgroundWorker), класи File, FileStream,
Timer, DateTime, OpenFileDialog, SaveFileDialog, обробка виключень.
Вимоги до менеджера процесів
1. Можливість запуску програм: Калькулятор, Microsoft Word та ще трьох на
ваш вибір.
2. Перегляд список запущених процесів з інформацією про обсяг оперативної
пам'яті, виділений під процес, часу, коли був запущений процес, пріоритет
процесу, кількість потоків, які запущені процесом. Відобразити у вигляді
таблиці.
3. Можливість зупинки вибраного процесу.
4. Можливість зміни пріоритету вибраного процесу.
B. Запушити виконану роботу у репозиторій на git.ztu.edu.ua або GitLab з назвою
DotNetLab3 та надати доступ до репозиторію викладачеві, який проводить
практичні заняття:
 Власенко Олег Васильович (wellwisher.vls@gmail.com) Савчук Іван Олександрович (kipz_sio@ztu.edu.ua) Чижмотря Олексій Володимирович (4ov.ztu@gmail.com)Лабораторна робота №3
Тема: Багатопотоковість у C#.
Мета роботи: навчитися працювати з потоками та
процесами у мові C#.
Виділений час: 18 годин (6 годин практичних робіт та 12
годин самостійної роботи).
Завдання:
A. Розробити дві програми:
1) шифрування файлів;
2) менеджер процесів.
Програмний код має бути написаний максимально універсально без
прив’язки у класах, що реалізують основний функціонал до інтерфейсу.
Передбачається, що дані класи потрібно буде використовувати в наступних
лабораторних роботах.
Вимоги до програми шифрування файлів
1. Графічний інтерфейс користувача з можливістю вводу ключа для
шифрування та діалогу вибору довільного файлу, який буде шифруватись
або розшифровуватись.
2. Здатність працювати з файлами довільного розміру та формату.
3. В процесі шифрування, повинен відображатись індикатор прогресу (0-100%)
та час, який пройшов від запуску шифрування.
4. По завершенні шифрування повинне бути відображене вікно з інформацією
про розмір зашифрованого файла, його назву та час, затрачений на
шифрування.
5. Необхідно запобігти «підвисанню» вікна при здійсненні операції шифрування
(шифрування здійснюватись в окремому обчислювальному потоці за
допомогою класу BackgroundWorker) .
6. Коректна обробка виключень, що можуть виникати під час роботи.
7. Для успішного виконання роботи необхідно ознайомитися з наступними
темами: асинхронні операції (клас BackgroundWorker), класи File, FileStream,
Timer, DateTime, OpenFileDialog, SaveFileDialog, обробка виключень.
Вимоги до менеджера процесів
1. Можливість запуску програм: Калькулятор, Microsoft Word та ще трьох на
ваш вибір.
2. Перегляд список запущених процесів з інформацією про обсяг оперативної
пам'яті, виділений під процес, часу, коли був запущений процес, пріоритет
процесу, кількість потоків, які запущені процесом. Відобразити у вигляді
таблиці.
3. Можливість зупинки вибраного процесу.
4. Можливість зміни пріоритету вибраного процесу.
B. Запушити виконану роботу у репозиторій на git.ztu.edu.ua або GitLab з назвою
DotNetLab3 та надати доступ до репозиторію викладачеві, який проводить
практичні заняття:
 Власенко Олег Васильович (wellwisher.vls@gmail.com) Савчук Іван Олександрович (kipz_sio@ztu.edu.ua) Чижмотря Олексій Володимирович (4ov.ztu@gmail.com)Лабораторна робота №3
Тема: Багатопотоковість у C#.
Мета роботи: навчитися працювати з потоками та
процесами у мові C#.
Виділений час: 18 годин (6 годин практичних робіт та 12
годин самостійної роботи).
Завдання:
A. Розробити дві програми:
1) шифрування файлів;
2) менеджер процесів.
Програмний код має бути написаний максимально універсально без
прив’язки у класах, що реалізують основний функціонал до інтерфейсу.
Передбачається, що дані класи потрібно буде використовувати в наступних
лабораторних роботах.
Вимоги до програми шифрування файлів
1. Графічний інтерфейс користувача з можливістю вводу ключа для
шифрування та діалогу вибору довільного файлу, який буде шифруватись
або розшифровуватись.
2. Здатність працювати з файлами довільного розміру та формату.
3. В процесі шифрування, повинен відображатись індикатор прогресу (0-100%)
та час, який пройшов від запуску шифрування.
4. По завершенні шифрування повинне бути відображене вікно з інформацією
про розмір зашифрованого файла, його назву та час, затрачений на
шифрування.
5. Необхідно запобігти «підвисанню» вікна при здійсненні операції шифрування
(шифрування здійснюватись в окремому обчислювальному потоці за
допомогою класу BackgroundWorker) .
6. Коректна обробка виключень, що можуть виникати під час роботи.
7. Для успішного виконання роботи необхідно ознайомитися з наступними
темами: асинхронні операції (клас BackgroundWorker), класи File, FileStream,
Timer, DateTime, OpenFileDialog, SaveFileDialog, обробка виключень.
Вимоги до менеджера процесів
1. Можливість запуску програм: Калькулятор, Microsoft Word та ще трьох на
ваш вибір.
2. Перегляд список запущених процесів з інформацією про обсяг оперативної
пам'яті, виділений під процес, часу, коли був запущений процес, пріоритет
процесу, кількість потоків, які запущені процесом. Відобразити у вигляді
таблиці.
3. Можливість зупинки вибраного процесу.
4. Можливість зміни пріоритету вибраного процесу.
B. Запушити виконану роботу у репозиторій на git.ztu.edu.ua або GitLab з назвою
DotNetLab3 та надати доступ до репозиторію викладачеві, який проводить
практичні заняття:
 Власенко Олег Васильович (wellwisher.vls@gmail.com) Савчук Іван Олександрович (kipz_sio@ztu.edu.ua) Чижмотря Олексій Володимирович (4ov.ztu@gmail.com)Лабораторна робота №3
Тема: Багатопотоковість у C#.
Мета роботи: навчитися працювати з потоками та
процесами у мові C#.
Виділений час: 18 годин (6 годин практичних робіт та 12
годин самостійної роботи).
Завдання:
A. Розробити дві програми:
1) шифрування файлів;
2) менеджер процесів.
Програмний код має бути написаний максимально універсально без
прив’язки у класах, що реалізують основний функціонал до інтерфейсу.
Передбачається, що дані класи потрібно буде використовувати в наступних
лабораторних роботах.
Вимоги до програми шифрування файлів
1. Графічний інтерфейс користувача з можливістю вводу ключа для
шифрування та діалогу вибору довільного файлу, який буде шифруватись
або розшифровуватись.
2. Здатність працювати з файлами довільного розміру та формату.
3. В процесі шифрування, повинен відображатись індикатор прогресу (0-100%)
та час, який пройшов від запуску шифрування.
4. По завершенні шифрування повинне бути відображене вікно з інформацією
про розмір зашифрованого файла, його назву та час, затрачений на
шифрування.
5. Необхідно запобігти «підвисанню» вікна при здійсненні операції шифрування
(шифрування здійснюватись в окремому обчислювальному потоці за
допомогою класу BackgroundWorker) .
6. Коректна обробка виключень, що можуть виникати під час роботи.
7. Для успішного виконання роботи необхідно ознайомитися з наступними
темами: асинхронні операції (клас BackgroundWorker), класи File, FileStream,
Timer, DateTime, OpenFileDialog, SaveFileDialog, обробка виключень.
Вимоги до менеджера процесів
1. Можливість запуску програм: Калькулятор, Microsoft Word та ще трьох на
ваш вибір.
2. Перегляд список запущених процесів з інформацією про обсяг оперативної
пам'яті, виділений під процес, часу, коли був запущений процес, пріоритет
процесу, кількість потоків, які запущені процесом. Відобразити у вигляді
таблиці.
3. Можливість зупинки вибраного процесу.
4. Можливість зміни пріоритету вибраного процесу.
B. Запушити виконану роботу у репозиторій на git.ztu.edu.ua або GitLab з назвою
DotNetLab3 та надати доступ до репозиторію викладачеві, який проводить
практичні заняття:
 Власенко Олег Васильович (wellwisher.vls@gmail.com) Савчук Іван Олександрович (kipz_sio@ztu.edu.ua) Чижмотря Олексій Володимирович (4ov.ztu@gmail.com)Лабораторна робота №3
Тема: Багатопотоковість у C#.
Мета роботи: навчитися працювати з потоками та
процесами у мові C#.
Виділений час: 18 годин (6 годин практичних робіт та 12
годин самостійної роботи).
Завдання:
A. Розробити дві програми:
1) шифрування файлів;
2) менеджер процесів.
Програмний код має бути написаний максимально універсально без
прив’язки у класах, що реалізують основний функціонал до інтерфейсу.
Передбачається, що дані класи потрібно буде використовувати в наступних
лабораторних роботах.
Вимоги до програми шифрування файлів
1. Графічний інтерфейс користувача з можливістю вводу ключа для
шифрування та діалогу вибору довільного файлу, який буде шифруватись
або розшифровуватись.
2. Здатність працювати з файлами довільного розміру та формату.
3. В процесі шифрування, повинен відображатись індикатор прогресу (0-100%)
та час, який пройшов від запуску шифрування.
4. По завершенні шифрування повинне бути відображене вікно з інформацією
про розмір зашифрованого файла, його назву та час, затрачений на
шифрування.
5. Необхідно запобігти «підвисанню» вікна при здійсненні операції шифрування
(шифрування здійснюватись в окремому обчислювальному потоці за
допомогою класу BackgroundWorker) .
6. Коректна обробка виключень, що можуть виникати під час роботи.
7. Для успішного виконання роботи необхідно ознайомитися з наступними
темами: асинхронні операції (клас BackgroundWorker), класи File, FileStream,
Timer, DateTime, OpenFileDialog, SaveFileDialog, обробка виключень.
Вимоги до менеджера процесів
1. Можливість запуску програм: Калькулятор, Microsoft Word та ще трьох на
ваш вибір.
2. Перегляд список запущених процесів з інформацією про обсяг оперативної
пам'яті, виділений під процес, часу, коли був запущений процес, пріоритет
процесу, кількість потоків, які запущені процесом. Відобразити у вигляді
таблиці.
3. Можливість зупинки вибраного процесу.
4. Можливість зміни пріоритету вибраного процесу.
B. Запушити виконану роботу у репозиторій на git.ztu.edu.ua або GitLab з назвою
DotNetLab3 та надати доступ до репозиторію викладачеві, який проводить
практичні заняття:
 Власенко Олег Васильович (wellwisher.vls@gmail.com) Савчук Іван Олександрович (kipz_sio@ztu.edu.ua) Чижмотря Олексій Володимирович (4ov.ztu@gmail.com)